-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity array_io is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    d_o_0_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_0_full_n : IN STD_LOGIC;
    d_o_0_write : OUT STD_LOGIC;
    d_o_1_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_1_full_n : IN STD_LOGIC;
    d_o_1_write : OUT STD_LOGIC;
    d_o_2_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_2_full_n : IN STD_LOGIC;
    d_o_2_write : OUT STD_LOGIC;
    d_o_3_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_3_full_n : IN STD_LOGIC;
    d_o_3_write : OUT STD_LOGIC;
    d_i_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    d_i_0_ce0 : OUT STD_LOGIC;
    d_i_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    d_i_0_ce1 : OUT STD_LOGIC;
    d_i_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    d_i_1_ce0 : OUT STD_LOGIC;
    d_i_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    d_i_1_ce1 : OUT STD_LOGIC;
    d_i_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    d_i_2_ce0 : OUT STD_LOGIC;
    d_i_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    d_i_2_ce1 : OUT STD_LOGIC;
    d_i_2_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    d_i_3_ce0 : OUT STD_LOGIC;
    d_i_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    d_i_3_ce1 : OUT STD_LOGIC;
    d_i_3_q1 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of array_io is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "array_io_array_io,hls_ip_2022_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-1-e,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.581000,HLS_SYN_LAT=9,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1234,HLS_SYN_LUT=2177,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal acc_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal d_o_0_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal d_o_1_blk_n : STD_LOGIC;
    signal d_o_2_blk_n : STD_LOGIC;
    signal d_o_3_blk_n : STD_LOGIC;
    signal reg_420 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state4 : BOOLEAN;
    signal ap_block_state5 : BOOLEAN;
    signal reg_425 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_430 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_435 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_0_load_reg_1092 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal d_i_1_load_reg_1098 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_2_load_reg_1104 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_3_load_reg_1110 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_fu_448_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_reg_1159 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_1_fu_462_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_1_reg_1167 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_2_fu_476_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_2_reg_1175 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_3_fu_490_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_3_reg_1183 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_0_load_1_reg_1188 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_1_load_1_reg_1194 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_2_load_1_reg_1200 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_3_load_1_reg_1206 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_0_load_2_reg_1212 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_1_load_2_reg_1218 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_2_load_2_reg_1224 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_3_load_2_reg_1230 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_4_fu_504_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_4_reg_1279 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_5_fu_518_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_5_reg_1287 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_6_fu_532_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_6_reg_1295 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_7_fu_546_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_7_reg_1303 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_8_fu_552_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_8_reg_1308 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_9_fu_556_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_9_reg_1314 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_10_fu_560_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_10_reg_1320 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_11_fu_564_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_11_reg_1326 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_0_load_3_reg_1332 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_1_load_3_reg_1338 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_2_load_3_reg_1344 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_3_load_3_reg_1350 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_12_fu_568_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_12_reg_1396 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_13_fu_572_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_13_reg_1402 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_14_fu_576_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_14_reg_1408 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_15_fu_580_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_15_reg_1414 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_16_fu_588_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_16_reg_1420 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_17_fu_597_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_17_reg_1425 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_18_fu_606_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_18_reg_1430 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_19_fu_615_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_19_reg_1435 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_1_fu_624_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_1_reg_1440 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_24_fu_630_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_24_reg_1445 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_5_fu_640_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_5_reg_1450 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_25_fu_646_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_25_reg_1455 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_9_fu_656_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_9_reg_1460 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_26_fu_662_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_26_reg_1465 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_13_fu_672_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_13_reg_1470 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_27_fu_678_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_27_reg_1475 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_20_fu_712_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_20_reg_1500 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_21_fu_721_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_21_reg_1505 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_22_fu_730_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_22_reg_1510 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_23_fu_739_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_23_reg_1515 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_17_fu_868_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_17_reg_1520 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_28_fu_874_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_28_reg_1525 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_21_fu_884_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_21_reg_1530 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_29_fu_890_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_29_reg_1535 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_25_fu_900_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_25_reg_1540 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_30_fu_906_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_30_reg_1545 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln67_29_fu_916_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln67_29_reg_1550 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_31_fu_922_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln69_31_reg_1555 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_fu_762_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state6 : BOOLEAN;
    signal temp_1_fu_792_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_2_fu_822_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_3_fu_852_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_4_fu_970_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state7 : BOOLEAN;
    signal temp_5_fu_1000_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_6_fu_1030_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_7_fu_1060_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal ap_block_state8 : BOOLEAN;
    signal ap_block_state9 : BOOLEAN;
    signal ap_block_state10 : BOOLEAN;
    signal trunc_ln67_fu_444_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_1_fu_458_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_2_fu_472_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_3_fu_486_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_4_fu_500_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_5_fu_514_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_6_fu_528_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln67_7_fu_542_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_8_fu_620_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_8_fu_584_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_8_fu_620_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_24_fu_630_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_11_fu_636_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_9_fu_593_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_11_fu_636_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_25_fu_646_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_14_fu_652_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_10_fu_602_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_14_fu_652_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_26_fu_662_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_17_fu_668_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_11_fu_611_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_17_fu_668_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_27_fu_678_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_fu_684_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_9_fu_749_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_fu_696_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_2_fu_752_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_10_fu_758_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_fu_744_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_1_fu_687_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_12_fu_779_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_1_fu_699_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_6_fu_782_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_13_fu_788_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_4_fu_774_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_2_fu_690_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_15_fu_809_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_2_fu_702_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_10_fu_812_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_16_fu_818_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_8_fu_804_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_3_fu_693_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_18_fu_839_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_3_fu_705_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_14_fu_842_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_19_fu_848_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_12_fu_834_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_20_fu_864_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_12_fu_708_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_20_fu_864_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_28_fu_874_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_23_fu_880_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_13_fu_717_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_23_fu_880_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_29_fu_890_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_26_fu_896_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_14_fu_726_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_26_fu_896_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_30_fu_906_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_29_fu_912_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln69_15_fu_735_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln67_29_fu_912_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln69_31_fu_922_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln67_4_fu_928_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_21_fu_957_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_4_fu_940_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_18_fu_960_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_22_fu_966_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_16_fu_952_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_5_fu_931_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_24_fu_987_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_5_fu_943_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_22_fu_990_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_25_fu_996_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_20_fu_982_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_6_fu_934_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_27_fu_1017_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_6_fu_946_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_26_fu_1020_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_28_fu_1026_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_24_fu_1012_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_7_fu_937_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_30_fu_1047_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln69_7_fu_949_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln67_30_fu_1050_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln67_31_fu_1056_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_28_fu_1042_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_condition_150 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    reg_420_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_150)) then
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    reg_420 <= d_i_0_q0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    reg_420 <= d_i_0_q1;
                end if;
            end if; 
        end if;
    end process;

    reg_425_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_150)) then
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    reg_425 <= d_i_1_q0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    reg_425 <= d_i_1_q1;
                end if;
            end if; 
        end if;
    end process;

    reg_430_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_150)) then
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    reg_430 <= d_i_2_q0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    reg_430 <= d_i_2_q1;
                end if;
            end if; 
        end if;
    end process;

    reg_435_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_150)) then
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    reg_435 <= d_i_3_q0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    reg_435 <= d_i_3_q1;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                acc_0 <= temp_fu_762_p2;
                acc_1 <= temp_1_fu_792_p2;
                acc_2 <= temp_2_fu_822_p2;
                acc_3 <= temp_3_fu_852_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                acc_4 <= temp_4_fu_970_p2;
                acc_5 <= temp_5_fu_1000_p2;
                acc_6 <= temp_6_fu_1030_p2;
                acc_7 <= temp_7_fu_1060_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln67_13_reg_1470 <= add_ln67_13_fu_672_p2;
                add_ln67_1_reg_1440 <= add_ln67_1_fu_624_p2;
                add_ln67_5_reg_1450 <= add_ln67_5_fu_640_p2;
                add_ln67_9_reg_1460 <= add_ln67_9_fu_656_p2;
                add_ln69_12_reg_1396 <= add_ln69_12_fu_568_p2;
                add_ln69_13_reg_1402 <= add_ln69_13_fu_572_p2;
                add_ln69_14_reg_1408 <= add_ln69_14_fu_576_p2;
                add_ln69_15_reg_1414 <= add_ln69_15_fu_580_p2;
                add_ln69_16_reg_1420 <= add_ln69_16_fu_588_p2;
                add_ln69_17_reg_1425 <= add_ln69_17_fu_597_p2;
                add_ln69_18_reg_1430 <= add_ln69_18_fu_606_p2;
                add_ln69_19_reg_1435 <= add_ln69_19_fu_615_p2;
                add_ln69_24_reg_1445 <= add_ln69_24_fu_630_p2;
                add_ln69_25_reg_1455 <= add_ln69_25_fu_646_p2;
                add_ln69_26_reg_1465 <= add_ln69_26_fu_662_p2;
                add_ln69_27_reg_1475 <= add_ln69_27_fu_678_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln67_17_reg_1520 <= add_ln67_17_fu_868_p2;
                add_ln67_21_reg_1530 <= add_ln67_21_fu_884_p2;
                add_ln67_25_reg_1540 <= add_ln67_25_fu_900_p2;
                add_ln67_29_reg_1550 <= add_ln67_29_fu_916_p2;
                add_ln69_20_reg_1500 <= add_ln69_20_fu_712_p2;
                add_ln69_21_reg_1505 <= add_ln69_21_fu_721_p2;
                add_ln69_22_reg_1510 <= add_ln69_22_fu_730_p2;
                add_ln69_23_reg_1515 <= add_ln69_23_fu_739_p2;
                add_ln69_28_reg_1525 <= add_ln69_28_fu_874_p2;
                add_ln69_29_reg_1535 <= add_ln69_29_fu_890_p2;
                add_ln69_30_reg_1545 <= add_ln69_30_fu_906_p2;
                add_ln69_31_reg_1555 <= add_ln69_31_fu_922_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln69_10_reg_1320 <= add_ln69_10_fu_560_p2;
                add_ln69_11_reg_1326 <= add_ln69_11_fu_564_p2;
                add_ln69_4_reg_1279 <= add_ln69_4_fu_504_p2;
                add_ln69_5_reg_1287 <= add_ln69_5_fu_518_p2;
                add_ln69_6_reg_1295 <= add_ln69_6_fu_532_p2;
                add_ln69_7_reg_1303 <= add_ln69_7_fu_546_p2;
                add_ln69_8_reg_1308 <= add_ln69_8_fu_552_p2;
                add_ln69_9_reg_1314 <= add_ln69_9_fu_556_p2;
                d_i_0_load_3_reg_1332 <= d_i_0_q0;
                d_i_1_load_3_reg_1338 <= d_i_1_q0;
                d_i_2_load_3_reg_1344 <= d_i_2_q0;
                d_i_3_load_3_reg_1350 <= d_i_3_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln69_1_reg_1167 <= add_ln69_1_fu_462_p2;
                add_ln69_2_reg_1175 <= add_ln69_2_fu_476_p2;
                add_ln69_3_reg_1183 <= add_ln69_3_fu_490_p2;
                add_ln69_reg_1159 <= add_ln69_fu_448_p2;
                d_i_0_load_1_reg_1188 <= d_i_0_q1;
                d_i_0_load_2_reg_1212 <= d_i_0_q0;
                d_i_1_load_1_reg_1194 <= d_i_1_q1;
                d_i_1_load_2_reg_1218 <= d_i_1_q0;
                d_i_2_load_1_reg_1200 <= d_i_2_q1;
                d_i_2_load_2_reg_1224 <= d_i_2_q0;
                d_i_3_load_1_reg_1206 <= d_i_3_q1;
                d_i_3_load_2_reg_1230 <= d_i_3_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                d_i_0_load_reg_1092 <= d_i_0_q0;
                d_i_1_load_reg_1098 <= d_i_1_q0;
                d_i_2_load_reg_1104 <= d_i_2_q0;
                d_i_3_load_reg_1110 <= d_i_3_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    add_ln67_10_fu_812_p2 <= std_logic_vector(signed(sext_ln67_15_fu_809_p1) + signed(sext_ln69_2_fu_702_p1));
    add_ln67_12_fu_834_p2 <= std_logic_vector(unsigned(acc_3) + unsigned(sext_ln67_3_fu_693_p1));
    add_ln67_13_fu_672_p2 <= std_logic_vector(signed(sext_ln69_11_fu_611_p1) + signed(sext_ln67_17_fu_668_p1));
    add_ln67_14_fu_842_p2 <= std_logic_vector(signed(sext_ln67_18_fu_839_p1) + signed(sext_ln69_3_fu_705_p1));
    add_ln67_16_fu_952_p2 <= std_logic_vector(unsigned(acc_4) + unsigned(sext_ln67_4_fu_928_p1));
    add_ln67_17_fu_868_p2 <= std_logic_vector(signed(sext_ln69_12_fu_708_p1) + signed(sext_ln67_20_fu_864_p1));
    add_ln67_18_fu_960_p2 <= std_logic_vector(signed(sext_ln67_21_fu_957_p1) + signed(sext_ln69_4_fu_940_p1));
    add_ln67_1_fu_624_p2 <= std_logic_vector(signed(sext_ln69_8_fu_584_p1) + signed(sext_ln67_8_fu_620_p1));
    add_ln67_20_fu_982_p2 <= std_logic_vector(unsigned(acc_5) + unsigned(sext_ln67_5_fu_931_p1));
    add_ln67_21_fu_884_p2 <= std_logic_vector(signed(sext_ln69_13_fu_717_p1) + signed(sext_ln67_23_fu_880_p1));
    add_ln67_22_fu_990_p2 <= std_logic_vector(signed(sext_ln67_24_fu_987_p1) + signed(sext_ln69_5_fu_943_p1));
    add_ln67_24_fu_1012_p2 <= std_logic_vector(unsigned(acc_6) + unsigned(sext_ln67_6_fu_934_p1));
    add_ln67_25_fu_900_p2 <= std_logic_vector(signed(sext_ln69_14_fu_726_p1) + signed(sext_ln67_26_fu_896_p1));
    add_ln67_26_fu_1020_p2 <= std_logic_vector(signed(sext_ln67_27_fu_1017_p1) + signed(sext_ln69_6_fu_946_p1));
    add_ln67_28_fu_1042_p2 <= std_logic_vector(unsigned(acc_7) + unsigned(sext_ln67_7_fu_937_p1));
    add_ln67_29_fu_916_p2 <= std_logic_vector(signed(sext_ln69_15_fu_735_p1) + signed(sext_ln67_29_fu_912_p1));
    add_ln67_2_fu_752_p2 <= std_logic_vector(signed(sext_ln67_9_fu_749_p1) + signed(sext_ln69_fu_696_p1));
    add_ln67_30_fu_1050_p2 <= std_logic_vector(signed(sext_ln67_30_fu_1047_p1) + signed(sext_ln69_7_fu_949_p1));
    add_ln67_4_fu_774_p2 <= std_logic_vector(unsigned(acc_1) + unsigned(sext_ln67_1_fu_687_p1));
    add_ln67_5_fu_640_p2 <= std_logic_vector(signed(sext_ln69_9_fu_593_p1) + signed(sext_ln67_11_fu_636_p1));
    add_ln67_6_fu_782_p2 <= std_logic_vector(signed(sext_ln67_12_fu_779_p1) + signed(sext_ln69_1_fu_699_p1));
    add_ln67_8_fu_804_p2 <= std_logic_vector(unsigned(acc_2) + unsigned(sext_ln67_2_fu_690_p1));
    add_ln67_9_fu_656_p2 <= std_logic_vector(signed(sext_ln69_10_fu_602_p1) + signed(sext_ln67_14_fu_652_p1));
    add_ln67_fu_744_p2 <= std_logic_vector(unsigned(acc_0) + unsigned(sext_ln67_fu_684_p1));
    add_ln69_10_fu_560_p2 <= std_logic_vector(signed(d_i_2_load_2_reg_1224) + signed(add_ln69_2_reg_1175));
    add_ln69_11_fu_564_p2 <= std_logic_vector(signed(d_i_3_load_2_reg_1230) + signed(add_ln69_3_reg_1183));
    add_ln69_12_fu_568_p2 <= std_logic_vector(signed(d_i_0_load_3_reg_1332) + signed(add_ln69_4_reg_1279));
    add_ln69_13_fu_572_p2 <= std_logic_vector(signed(d_i_1_load_3_reg_1338) + signed(add_ln69_5_reg_1287));
    add_ln69_14_fu_576_p2 <= std_logic_vector(signed(d_i_2_load_3_reg_1344) + signed(add_ln69_6_reg_1295));
    add_ln69_15_fu_580_p2 <= std_logic_vector(signed(d_i_3_load_3_reg_1350) + signed(add_ln69_7_reg_1303));
    add_ln69_16_fu_588_p2 <= std_logic_vector(signed(reg_420) + signed(add_ln69_8_reg_1308));
    add_ln69_17_fu_597_p2 <= std_logic_vector(signed(reg_425) + signed(add_ln69_9_reg_1314));
    add_ln69_18_fu_606_p2 <= std_logic_vector(signed(reg_430) + signed(add_ln69_10_reg_1320));
    add_ln69_19_fu_615_p2 <= std_logic_vector(signed(reg_435) + signed(add_ln69_11_reg_1326));
    add_ln69_1_fu_462_p2 <= std_logic_vector(signed(d_i_1_load_reg_1098) + signed(trunc_ln67_1_fu_458_p1));
    add_ln69_20_fu_712_p2 <= std_logic_vector(signed(reg_420) + signed(add_ln69_12_reg_1396));
    add_ln69_21_fu_721_p2 <= std_logic_vector(signed(reg_425) + signed(add_ln69_13_reg_1402));
    add_ln69_22_fu_730_p2 <= std_logic_vector(signed(reg_430) + signed(add_ln69_14_reg_1408));
    add_ln69_23_fu_739_p2 <= std_logic_vector(signed(reg_435) + signed(add_ln69_15_reg_1414));
    add_ln69_24_fu_630_p0 <= d_i_0_q1;
    add_ln69_24_fu_630_p2 <= std_logic_vector(signed(add_ln69_24_fu_630_p0) + signed(add_ln69_16_fu_588_p2));
    add_ln69_25_fu_646_p0 <= d_i_1_q1;
    add_ln69_25_fu_646_p2 <= std_logic_vector(signed(add_ln69_25_fu_646_p0) + signed(add_ln69_17_fu_597_p2));
    add_ln69_26_fu_662_p0 <= d_i_2_q1;
    add_ln69_26_fu_662_p2 <= std_logic_vector(signed(add_ln69_26_fu_662_p0) + signed(add_ln69_18_fu_606_p2));
    add_ln69_27_fu_678_p0 <= d_i_3_q1;
    add_ln69_27_fu_678_p2 <= std_logic_vector(signed(add_ln69_27_fu_678_p0) + signed(add_ln69_19_fu_615_p2));
    add_ln69_28_fu_874_p0 <= d_i_0_q1;
    add_ln69_28_fu_874_p2 <= std_logic_vector(signed(add_ln69_28_fu_874_p0) + signed(add_ln69_20_fu_712_p2));
    add_ln69_29_fu_890_p0 <= d_i_1_q1;
    add_ln69_29_fu_890_p2 <= std_logic_vector(signed(add_ln69_29_fu_890_p0) + signed(add_ln69_21_fu_721_p2));
    add_ln69_2_fu_476_p2 <= std_logic_vector(signed(d_i_2_load_reg_1104) + signed(trunc_ln67_2_fu_472_p1));
    add_ln69_30_fu_906_p0 <= d_i_2_q1;
    add_ln69_30_fu_906_p2 <= std_logic_vector(signed(add_ln69_30_fu_906_p0) + signed(add_ln69_22_fu_730_p2));
    add_ln69_31_fu_922_p0 <= d_i_3_q1;
    add_ln69_31_fu_922_p2 <= std_logic_vector(signed(add_ln69_31_fu_922_p0) + signed(add_ln69_23_fu_739_p2));
    add_ln69_3_fu_490_p2 <= std_logic_vector(signed(d_i_3_load_reg_1110) + signed(trunc_ln67_3_fu_486_p1));
    add_ln69_4_fu_504_p2 <= std_logic_vector(signed(d_i_0_load_1_reg_1188) + signed(trunc_ln67_4_fu_500_p1));
    add_ln69_5_fu_518_p2 <= std_logic_vector(signed(d_i_1_load_1_reg_1194) + signed(trunc_ln67_5_fu_514_p1));
    add_ln69_6_fu_532_p2 <= std_logic_vector(signed(d_i_2_load_1_reg_1200) + signed(trunc_ln67_6_fu_528_p1));
    add_ln69_7_fu_546_p2 <= std_logic_vector(signed(d_i_3_load_1_reg_1206) + signed(trunc_ln67_7_fu_542_p1));
    add_ln69_8_fu_552_p2 <= std_logic_vector(signed(d_i_0_load_2_reg_1212) + signed(add_ln69_reg_1159));
    add_ln69_9_fu_556_p2 <= std_logic_vector(signed(d_i_1_load_2_reg_1218) + signed(add_ln69_1_reg_1167));
    add_ln69_fu_448_p2 <= std_logic_vector(signed(d_i_0_load_reg_1092) + signed(trunc_ln67_fu_444_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state8_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state9_blk_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
        if (((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state10_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state10 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state3_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state3 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state4_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state4 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state5_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state5 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state6_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state6 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state7_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state7 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state8_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state8 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_block_state9_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_block_state9 <= ((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0));
    end process;


    ap_condition_150_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_condition_150 <= not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state10)
    begin
        if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state10)
    begin
        if ((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    d_i_0_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_0_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_0_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_0_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_0_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            d_i_0_address0 <= "XXX";
        end if; 
    end process;


    d_i_0_address1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            d_i_0_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_0_address1 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_0_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_0_address1 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            d_i_0_address1 <= "XXX";
        end if; 
    end process;


    d_i_0_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            d_i_0_ce0 <= ap_const_logic_1;
        else 
            d_i_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    d_i_0_ce1_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            d_i_0_ce1 <= ap_const_logic_1;
        else 
            d_i_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    d_i_1_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_1_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_1_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_1_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_1_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            d_i_1_address0 <= "XXX";
        end if; 
    end process;


    d_i_1_address1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            d_i_1_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_1_address1 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_1_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_1_address1 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            d_i_1_address1 <= "XXX";
        end if; 
    end process;


    d_i_1_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            d_i_1_ce0 <= ap_const_logic_1;
        else 
            d_i_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    d_i_1_ce1_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            d_i_1_ce1 <= ap_const_logic_1;
        else 
            d_i_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    d_i_2_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_2_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_2_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_2_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_2_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            d_i_2_address0 <= "XXX";
        end if; 
    end process;


    d_i_2_address1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            d_i_2_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_2_address1 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_2_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_2_address1 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            d_i_2_address1 <= "XXX";
        end if; 
    end process;


    d_i_2_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            d_i_2_ce0 <= ap_const_logic_1;
        else 
            d_i_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    d_i_2_ce1_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            d_i_2_ce1 <= ap_const_logic_1;
        else 
            d_i_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    d_i_3_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_3_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_3_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_3_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            d_i_3_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            d_i_3_address0 <= "XXX";
        end if; 
    end process;


    d_i_3_address1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            d_i_3_address1 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_i_3_address1 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            d_i_3_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            d_i_3_address1 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            d_i_3_address1 <= "XXX";
        end if; 
    end process;


    d_i_3_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            d_i_3_ce0 <= ap_const_logic_1;
        else 
            d_i_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    d_i_3_ce1_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            d_i_3_ce1 <= ap_const_logic_1;
        else 
            d_i_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    d_o_0_blk_n_assign_proc : process(d_o_0_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            d_o_0_blk_n <= d_o_0_full_n;
        else 
            d_o_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_0_din_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, add_ln69_fu_448_p2, add_ln69_4_fu_504_p2, add_ln69_8_reg_1308, add_ln69_12_reg_1396, add_ln69_16_reg_1420, add_ln69_24_reg_1445, add_ln69_20_reg_1500, add_ln69_28_reg_1525, ap_condition_150)
    begin
        if ((ap_const_boolean_1 = ap_condition_150)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                d_o_0_din <= add_ln69_28_reg_1525;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                d_o_0_din <= add_ln69_24_reg_1445;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                d_o_0_din <= add_ln69_20_reg_1500;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                d_o_0_din <= add_ln69_16_reg_1420;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                d_o_0_din <= add_ln69_12_reg_1396;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                d_o_0_din <= add_ln69_8_reg_1308;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                d_o_0_din <= add_ln69_4_fu_504_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                d_o_0_din <= add_ln69_fu_448_p2;
            else 
                d_o_0_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            d_o_0_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_0_write_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            d_o_0_write <= ap_const_logic_1;
        else 
            d_o_0_write <= ap_const_logic_0;
        end if; 
    end process;


    d_o_1_blk_n_assign_proc : process(d_o_1_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            d_o_1_blk_n <= d_o_1_full_n;
        else 
            d_o_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_1_din_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, add_ln69_1_fu_462_p2, add_ln69_5_fu_518_p2, add_ln69_9_reg_1314, add_ln69_13_reg_1402, add_ln69_17_reg_1425, add_ln69_25_reg_1455, add_ln69_21_reg_1505, add_ln69_29_reg_1535, ap_condition_150)
    begin
        if ((ap_const_boolean_1 = ap_condition_150)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                d_o_1_din <= add_ln69_29_reg_1535;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                d_o_1_din <= add_ln69_25_reg_1455;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                d_o_1_din <= add_ln69_21_reg_1505;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                d_o_1_din <= add_ln69_17_reg_1425;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                d_o_1_din <= add_ln69_13_reg_1402;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                d_o_1_din <= add_ln69_9_reg_1314;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                d_o_1_din <= add_ln69_5_fu_518_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                d_o_1_din <= add_ln69_1_fu_462_p2;
            else 
                d_o_1_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            d_o_1_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_1_write_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            d_o_1_write <= ap_const_logic_1;
        else 
            d_o_1_write <= ap_const_logic_0;
        end if; 
    end process;


    d_o_2_blk_n_assign_proc : process(d_o_2_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            d_o_2_blk_n <= d_o_2_full_n;
        else 
            d_o_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_2_din_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, add_ln69_2_fu_476_p2, add_ln69_6_fu_532_p2, add_ln69_10_reg_1320, add_ln69_14_reg_1408, add_ln69_18_reg_1430, add_ln69_26_reg_1465, add_ln69_22_reg_1510, add_ln69_30_reg_1545, ap_condition_150)
    begin
        if ((ap_const_boolean_1 = ap_condition_150)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                d_o_2_din <= add_ln69_30_reg_1545;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                d_o_2_din <= add_ln69_26_reg_1465;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                d_o_2_din <= add_ln69_22_reg_1510;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                d_o_2_din <= add_ln69_18_reg_1430;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                d_o_2_din <= add_ln69_14_reg_1408;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                d_o_2_din <= add_ln69_10_reg_1320;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                d_o_2_din <= add_ln69_6_fu_532_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                d_o_2_din <= add_ln69_2_fu_476_p2;
            else 
                d_o_2_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            d_o_2_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_2_write_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            d_o_2_write <= ap_const_logic_1;
        else 
            d_o_2_write <= ap_const_logic_0;
        end if; 
    end process;


    d_o_3_blk_n_assign_proc : process(d_o_3_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            d_o_3_blk_n <= d_o_3_full_n;
        else 
            d_o_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_3_din_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, add_ln69_3_fu_490_p2, add_ln69_7_fu_546_p2, add_ln69_11_reg_1326, add_ln69_15_reg_1414, add_ln69_19_reg_1435, add_ln69_27_reg_1475, add_ln69_23_reg_1515, add_ln69_31_reg_1555, ap_condition_150)
    begin
        if ((ap_const_boolean_1 = ap_condition_150)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                d_o_3_din <= add_ln69_31_reg_1555;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                d_o_3_din <= add_ln69_27_reg_1475;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                d_o_3_din <= add_ln69_23_reg_1515;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                d_o_3_din <= add_ln69_19_reg_1435;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                d_o_3_din <= add_ln69_15_reg_1414;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                d_o_3_din <= add_ln69_11_reg_1326;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                d_o_3_din <= add_ln69_7_fu_546_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                d_o_3_din <= add_ln69_3_fu_490_p2;
            else 
                d_o_3_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            d_o_3_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_o_3_write_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((d_o_3_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_0_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            d_o_3_write <= ap_const_logic_1;
        else 
            d_o_3_write <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln67_10_fu_758_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_2_fu_752_p2),32));

    sext_ln67_11_fu_636_p0 <= d_i_1_q1;
        sext_ln67_11_fu_636_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_11_fu_636_p0),17));

        sext_ln67_12_fu_779_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_5_reg_1450),18));

        sext_ln67_13_fu_788_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_6_fu_782_p2),32));

    sext_ln67_14_fu_652_p0 <= d_i_2_q1;
        sext_ln67_14_fu_652_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_14_fu_652_p0),17));

        sext_ln67_15_fu_809_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_9_reg_1460),18));

        sext_ln67_16_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_10_fu_812_p2),32));

    sext_ln67_17_fu_668_p0 <= d_i_3_q1;
        sext_ln67_17_fu_668_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_17_fu_668_p0),17));

        sext_ln67_18_fu_839_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_13_reg_1470),18));

        sext_ln67_19_fu_848_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_14_fu_842_p2),32));

        sext_ln67_1_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_1_load_reg_1098),32));

    sext_ln67_20_fu_864_p0 <= d_i_0_q1;
        sext_ln67_20_fu_864_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_20_fu_864_p0),17));

        sext_ln67_21_fu_957_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_17_reg_1520),18));

        sext_ln67_22_fu_966_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_18_fu_960_p2),32));

    sext_ln67_23_fu_880_p0 <= d_i_1_q1;
        sext_ln67_23_fu_880_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_23_fu_880_p0),17));

        sext_ln67_24_fu_987_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_21_reg_1530),18));

        sext_ln67_25_fu_996_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_22_fu_990_p2),32));

    sext_ln67_26_fu_896_p0 <= d_i_2_q1;
        sext_ln67_26_fu_896_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_26_fu_896_p0),17));

        sext_ln67_27_fu_1017_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_25_reg_1540),18));

        sext_ln67_28_fu_1026_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_26_fu_1020_p2),32));

    sext_ln67_29_fu_912_p0 <= d_i_3_q1;
        sext_ln67_29_fu_912_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_29_fu_912_p0),17));

        sext_ln67_2_fu_690_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_2_load_reg_1104),32));

        sext_ln67_30_fu_1047_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_29_reg_1550),18));

        sext_ln67_31_fu_1056_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_30_fu_1050_p2),32));

        sext_ln67_3_fu_693_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_3_load_reg_1110),32));

        sext_ln67_4_fu_928_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_1_reg_1188),32));

        sext_ln67_5_fu_931_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_1_load_1_reg_1194),32));

        sext_ln67_6_fu_934_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_2_load_1_reg_1200),32));

        sext_ln67_7_fu_937_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_3_load_1_reg_1206),32));

    sext_ln67_8_fu_620_p0 <= d_i_0_q1;
        sext_ln67_8_fu_620_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln67_8_fu_620_p0),17));

        sext_ln67_9_fu_749_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln67_1_reg_1440),18));

        sext_ln67_fu_684_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_reg_1092),32));

        sext_ln69_10_fu_602_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_430),17));

        sext_ln69_11_fu_611_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_435),17));

        sext_ln69_12_fu_708_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_420),17));

        sext_ln69_13_fu_717_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_425),17));

        sext_ln69_14_fu_726_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_430),17));

        sext_ln69_15_fu_735_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_435),17));

        sext_ln69_1_fu_699_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_1_load_2_reg_1218),18));

        sext_ln69_2_fu_702_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_2_load_2_reg_1224),18));

        sext_ln69_3_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_3_load_2_reg_1230),18));

        sext_ln69_4_fu_940_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_3_reg_1332),18));

        sext_ln69_5_fu_943_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_1_load_3_reg_1338),18));

        sext_ln69_6_fu_946_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_2_load_3_reg_1344),18));

        sext_ln69_7_fu_949_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_3_load_3_reg_1350),18));

        sext_ln69_8_fu_584_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_420),17));

        sext_ln69_9_fu_593_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_425),17));

        sext_ln69_fu_696_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d_i_0_load_2_reg_1212),18));

    temp_1_fu_792_p2 <= std_logic_vector(signed(sext_ln67_13_fu_788_p1) + signed(add_ln67_4_fu_774_p2));
    temp_2_fu_822_p2 <= std_logic_vector(signed(sext_ln67_16_fu_818_p1) + signed(add_ln67_8_fu_804_p2));
    temp_3_fu_852_p2 <= std_logic_vector(signed(sext_ln67_19_fu_848_p1) + signed(add_ln67_12_fu_834_p2));
    temp_4_fu_970_p2 <= std_logic_vector(signed(sext_ln67_22_fu_966_p1) + signed(add_ln67_16_fu_952_p2));
    temp_5_fu_1000_p2 <= std_logic_vector(signed(sext_ln67_25_fu_996_p1) + signed(add_ln67_20_fu_982_p2));
    temp_6_fu_1030_p2 <= std_logic_vector(signed(sext_ln67_28_fu_1026_p1) + signed(add_ln67_24_fu_1012_p2));
    temp_7_fu_1060_p2 <= std_logic_vector(signed(sext_ln67_31_fu_1056_p1) + signed(add_ln67_28_fu_1042_p2));
    temp_fu_762_p2 <= std_logic_vector(signed(sext_ln67_10_fu_758_p1) + signed(add_ln67_fu_744_p2));
    trunc_ln67_1_fu_458_p1 <= acc_1(16 - 1 downto 0);
    trunc_ln67_2_fu_472_p1 <= acc_2(16 - 1 downto 0);
    trunc_ln67_3_fu_486_p1 <= acc_3(16 - 1 downto 0);
    trunc_ln67_4_fu_500_p1 <= acc_4(16 - 1 downto 0);
    trunc_ln67_5_fu_514_p1 <= acc_5(16 - 1 downto 0);
    trunc_ln67_6_fu_528_p1 <= acc_6(16 - 1 downto 0);
    trunc_ln67_7_fu_542_p1 <= acc_7(16 - 1 downto 0);
    trunc_ln67_fu_444_p1 <= acc_0(16 - 1 downto 0);
end behav;
