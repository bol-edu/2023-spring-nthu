-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dct is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 512;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3 );
port (
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0) );
end;


architecture behav of dct is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "dct_dct,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu50-fsvh2104-2L-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=179,HLS_SYN_TPT=84,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=20502,HLS_SYN_LUT=25151,HLS_VERSION=2022_1}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_rst_reg_2 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_2 : signal is "no";
    signal ap_rst_reg_1 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_1 : signal is "no";
    signal ap_rst_n_inv : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_n_inv : signal is "no";
    signal input_r : STD_LOGIC_VECTOR (63 downto 0);
    signal output_r : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_continue : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal gmem_AWREADY : STD_LOGIC;
    signal gmem_WREADY : STD_LOGIC;
    signal gmem_ARREADY : STD_LOGIC;
    signal gmem_RVALID : STD_LOGIC;
    signal gmem_RDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem_RLAST : STD_LOGIC;
    signal gmem_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_BVALID : STD_LOGIC;
    signal gmem_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal entry_proc_U0_ap_start : STD_LOGIC;
    signal entry_proc_U0_ap_done : STD_LOGIC;
    signal entry_proc_U0_ap_continue : STD_LOGIC;
    signal entry_proc_U0_ap_idle : STD_LOGIC;
    signal entry_proc_U0_ap_ready : STD_LOGIC;
    signal entry_proc_U0_output_r_c_din : STD_LOGIC_VECTOR (63 downto 0);
    signal entry_proc_U0_output_r_c_write : STD_LOGIC;
    signal read_data_U0_ap_start : STD_LOGIC;
    signal read_data_U0_ap_done : STD_LOGIC;
    signal read_data_U0_ap_continue : STD_LOGIC;
    signal read_data_U0_ap_idle : STD_LOGIC;
    signal read_data_U0_ap_ready : STD_LOGIC;
    signal read_data_U0_m_axi_gmem_AWVALID : STD_LOGIC;
    signal read_data_U0_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal read_data_U0_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal read_data_U0_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal read_data_U0_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal read_data_U0_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal read_data_U0_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal read_data_U0_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal read_data_U0_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal read_data_U0_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal read_data_U0_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal read_data_U0_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal read_data_U0_m_axi_gmem_WVALID : STD_LOGIC;
    signal read_data_U0_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal read_data_U0_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal read_data_U0_m_axi_gmem_WLAST : STD_LOGIC;
    signal read_data_U0_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal read_data_U0_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal read_data_U0_m_axi_gmem_ARVALID : STD_LOGIC;
    signal read_data_U0_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal read_data_U0_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal read_data_U0_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal read_data_U0_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal read_data_U0_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal read_data_U0_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal read_data_U0_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal read_data_U0_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal read_data_U0_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal read_data_U0_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal read_data_U0_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal read_data_U0_m_axi_gmem_RREADY : STD_LOGIC;
    signal read_data_U0_m_axi_gmem_BREADY : STD_LOGIC;
    signal read_data_U0_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_16 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_17 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_18 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_19 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_20 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_21 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_22 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_23 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_24 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_25 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_26 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_27 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_28 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_29 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_30 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_31 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_32 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_33 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_34 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_35 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_36 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_37 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_38 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_39 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_40 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_41 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_42 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_43 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_44 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_45 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_46 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_47 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_48 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_49 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_50 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_51 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_52 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_53 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_54 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_55 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_56 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_57 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_58 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_59 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_60 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_61 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_62 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_ap_return_63 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_channel_done_buf_2d_in_63 : STD_LOGIC;
    signal buf_2d_in_63_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_63 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_63 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_62 : STD_LOGIC;
    signal buf_2d_in_62_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_62 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_62 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_61 : STD_LOGIC;
    signal buf_2d_in_61_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_61 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_61 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_60 : STD_LOGIC;
    signal buf_2d_in_60_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_60 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_60 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_59 : STD_LOGIC;
    signal buf_2d_in_59_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_59 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_59 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_58 : STD_LOGIC;
    signal buf_2d_in_58_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_58 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_58 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_57 : STD_LOGIC;
    signal buf_2d_in_57_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_57 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_57 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_56 : STD_LOGIC;
    signal buf_2d_in_56_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_56 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_56 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_55 : STD_LOGIC;
    signal buf_2d_in_55_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_55 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_55 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_54 : STD_LOGIC;
    signal buf_2d_in_54_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_54 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_54 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_53 : STD_LOGIC;
    signal buf_2d_in_53_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_53 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_53 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_52 : STD_LOGIC;
    signal buf_2d_in_52_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_52 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_52 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_51 : STD_LOGIC;
    signal buf_2d_in_51_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_51 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_51 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_50 : STD_LOGIC;
    signal buf_2d_in_50_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_50 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_50 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_49 : STD_LOGIC;
    signal buf_2d_in_49_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_49 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_49 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_48 : STD_LOGIC;
    signal buf_2d_in_48_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_48 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_48 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_47 : STD_LOGIC;
    signal buf_2d_in_47_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_47 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_47 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_46 : STD_LOGIC;
    signal buf_2d_in_46_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_46 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_46 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_45 : STD_LOGIC;
    signal buf_2d_in_45_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_45 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_45 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_44 : STD_LOGIC;
    signal buf_2d_in_44_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_44 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_44 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_43 : STD_LOGIC;
    signal buf_2d_in_43_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_43 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_43 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_42 : STD_LOGIC;
    signal buf_2d_in_42_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_42 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_42 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_41 : STD_LOGIC;
    signal buf_2d_in_41_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_41 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_41 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_40 : STD_LOGIC;
    signal buf_2d_in_40_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_40 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_40 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_39 : STD_LOGIC;
    signal buf_2d_in_39_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_39 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_39 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_38 : STD_LOGIC;
    signal buf_2d_in_38_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_38 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_38 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_37 : STD_LOGIC;
    signal buf_2d_in_37_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_37 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_37 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_36 : STD_LOGIC;
    signal buf_2d_in_36_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_36 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_36 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_35 : STD_LOGIC;
    signal buf_2d_in_35_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_35 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_35 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_34 : STD_LOGIC;
    signal buf_2d_in_34_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_34 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_34 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_33 : STD_LOGIC;
    signal buf_2d_in_33_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_33 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_33 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_32 : STD_LOGIC;
    signal buf_2d_in_32_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_32 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_32 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_31 : STD_LOGIC;
    signal buf_2d_in_31_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_31 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_31 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_30 : STD_LOGIC;
    signal buf_2d_in_30_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_30 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_30 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_29 : STD_LOGIC;
    signal buf_2d_in_29_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_29 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_29 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_28 : STD_LOGIC;
    signal buf_2d_in_28_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_28 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_28 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_27 : STD_LOGIC;
    signal buf_2d_in_27_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_27 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_27 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_26 : STD_LOGIC;
    signal buf_2d_in_26_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_26 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_26 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_25 : STD_LOGIC;
    signal buf_2d_in_25_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_25 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_25 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_24 : STD_LOGIC;
    signal buf_2d_in_24_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_24 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_24 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_23 : STD_LOGIC;
    signal buf_2d_in_23_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_23 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_23 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_22 : STD_LOGIC;
    signal buf_2d_in_22_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_22 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_22 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_21 : STD_LOGIC;
    signal buf_2d_in_21_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_21 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_21 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_20 : STD_LOGIC;
    signal buf_2d_in_20_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_20 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_20 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_19 : STD_LOGIC;
    signal buf_2d_in_19_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_19 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_19 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_18 : STD_LOGIC;
    signal buf_2d_in_18_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_18 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_18 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_17 : STD_LOGIC;
    signal buf_2d_in_17_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_17 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_17 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_16 : STD_LOGIC;
    signal buf_2d_in_16_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_16 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_16 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_15 : STD_LOGIC;
    signal buf_2d_in_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_15 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_14 : STD_LOGIC;
    signal buf_2d_in_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_14 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_13 : STD_LOGIC;
    signal buf_2d_in_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_13 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_12 : STD_LOGIC;
    signal buf_2d_in_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_12 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_11 : STD_LOGIC;
    signal buf_2d_in_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_11 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_10 : STD_LOGIC;
    signal buf_2d_in_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_10 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_9 : STD_LOGIC;
    signal buf_2d_in_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_9 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_8 : STD_LOGIC;
    signal buf_2d_in_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_8 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_7 : STD_LOGIC;
    signal buf_2d_in_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_7 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_6 : STD_LOGIC;
    signal buf_2d_in_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_6 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_5 : STD_LOGIC;
    signal buf_2d_in_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_5 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_4 : STD_LOGIC;
    signal buf_2d_in_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_4 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_3 : STD_LOGIC;
    signal buf_2d_in_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_3 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_2 : STD_LOGIC;
    signal buf_2d_in_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_2 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in_1 : STD_LOGIC;
    signal buf_2d_in_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in_1 : STD_LOGIC;
    signal ap_channel_done_buf_2d_in : STD_LOGIC;
    signal buf_2d_in_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_in : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_in : STD_LOGIC;
    signal dct_2d_U0_ap_start : STD_LOGIC;
    signal dct_2d_U0_ap_done : STD_LOGIC;
    signal dct_2d_U0_ap_continue : STD_LOGIC;
    signal dct_2d_U0_ap_idle : STD_LOGIC;
    signal dct_2d_U0_ap_ready : STD_LOGIC;
    signal dct_2d_U0_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_16 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_17 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_18 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_19 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_20 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_21 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_22 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_23 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_24 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_25 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_26 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_27 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_28 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_29 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_30 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_31 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_32 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_33 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_34 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_35 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_36 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_37 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_38 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_39 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_40 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_41 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_42 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_43 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_44 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_45 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_46 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_47 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_48 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_49 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_50 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_51 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_52 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_53 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_54 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_55 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_56 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_57 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_58 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_59 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_60 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_61 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_62 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_2d_U0_ap_return_63 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_channel_done_buf_2d_out_63 : STD_LOGIC;
    signal buf_2d_out_63_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_63 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_63 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_62 : STD_LOGIC;
    signal buf_2d_out_62_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_62 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_62 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_61 : STD_LOGIC;
    signal buf_2d_out_61_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_61 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_61 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_60 : STD_LOGIC;
    signal buf_2d_out_60_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_60 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_60 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_59 : STD_LOGIC;
    signal buf_2d_out_59_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_59 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_59 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_58 : STD_LOGIC;
    signal buf_2d_out_58_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_58 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_58 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_57 : STD_LOGIC;
    signal buf_2d_out_57_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_57 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_57 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_56 : STD_LOGIC;
    signal buf_2d_out_56_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_56 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_56 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_55 : STD_LOGIC;
    signal buf_2d_out_55_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_55 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_55 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_54 : STD_LOGIC;
    signal buf_2d_out_54_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_54 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_54 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_53 : STD_LOGIC;
    signal buf_2d_out_53_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_53 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_53 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_52 : STD_LOGIC;
    signal buf_2d_out_52_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_52 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_52 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_51 : STD_LOGIC;
    signal buf_2d_out_51_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_51 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_51 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_50 : STD_LOGIC;
    signal buf_2d_out_50_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_50 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_50 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_49 : STD_LOGIC;
    signal buf_2d_out_49_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_49 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_49 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_48 : STD_LOGIC;
    signal buf_2d_out_48_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_48 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_48 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_47 : STD_LOGIC;
    signal buf_2d_out_47_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_47 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_47 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_46 : STD_LOGIC;
    signal buf_2d_out_46_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_46 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_46 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_45 : STD_LOGIC;
    signal buf_2d_out_45_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_45 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_45 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_44 : STD_LOGIC;
    signal buf_2d_out_44_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_44 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_44 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_43 : STD_LOGIC;
    signal buf_2d_out_43_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_43 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_43 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_42 : STD_LOGIC;
    signal buf_2d_out_42_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_42 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_42 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_41 : STD_LOGIC;
    signal buf_2d_out_41_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_41 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_41 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_40 : STD_LOGIC;
    signal buf_2d_out_40_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_40 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_40 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_39 : STD_LOGIC;
    signal buf_2d_out_39_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_39 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_39 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_38 : STD_LOGIC;
    signal buf_2d_out_38_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_38 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_38 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_37 : STD_LOGIC;
    signal buf_2d_out_37_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_37 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_37 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_36 : STD_LOGIC;
    signal buf_2d_out_36_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_36 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_36 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_35 : STD_LOGIC;
    signal buf_2d_out_35_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_35 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_35 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_34 : STD_LOGIC;
    signal buf_2d_out_34_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_34 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_34 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_33 : STD_LOGIC;
    signal buf_2d_out_33_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_33 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_33 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_32 : STD_LOGIC;
    signal buf_2d_out_32_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_32 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_32 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_31 : STD_LOGIC;
    signal buf_2d_out_31_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_31 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_31 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_30 : STD_LOGIC;
    signal buf_2d_out_30_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_30 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_30 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_29 : STD_LOGIC;
    signal buf_2d_out_29_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_29 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_29 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_28 : STD_LOGIC;
    signal buf_2d_out_28_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_28 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_28 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_27 : STD_LOGIC;
    signal buf_2d_out_27_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_27 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_27 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_26 : STD_LOGIC;
    signal buf_2d_out_26_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_26 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_26 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_25 : STD_LOGIC;
    signal buf_2d_out_25_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_25 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_25 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_24 : STD_LOGIC;
    signal buf_2d_out_24_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_24 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_24 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_23 : STD_LOGIC;
    signal buf_2d_out_23_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_23 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_23 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_22 : STD_LOGIC;
    signal buf_2d_out_22_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_22 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_22 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_21 : STD_LOGIC;
    signal buf_2d_out_21_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_21 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_21 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_20 : STD_LOGIC;
    signal buf_2d_out_20_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_20 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_20 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_19 : STD_LOGIC;
    signal buf_2d_out_19_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_19 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_19 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_18 : STD_LOGIC;
    signal buf_2d_out_18_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_18 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_18 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_17 : STD_LOGIC;
    signal buf_2d_out_17_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_17 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_17 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_16 : STD_LOGIC;
    signal buf_2d_out_16_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_16 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_16 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_15 : STD_LOGIC;
    signal buf_2d_out_15_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_15 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_15 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_14 : STD_LOGIC;
    signal buf_2d_out_14_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_14 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_14 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_13 : STD_LOGIC;
    signal buf_2d_out_13_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_13 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_13 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_12 : STD_LOGIC;
    signal buf_2d_out_12_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_12 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_12 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_11 : STD_LOGIC;
    signal buf_2d_out_11_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_11 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_11 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_10 : STD_LOGIC;
    signal buf_2d_out_10_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_10 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_10 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_9 : STD_LOGIC;
    signal buf_2d_out_9_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_9 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_9 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_8 : STD_LOGIC;
    signal buf_2d_out_8_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_8 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_8 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_7 : STD_LOGIC;
    signal buf_2d_out_7_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_7 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_7 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_6 : STD_LOGIC;
    signal buf_2d_out_6_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_6 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_6 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_5 : STD_LOGIC;
    signal buf_2d_out_5_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_5 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_5 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_4 : STD_LOGIC;
    signal buf_2d_out_4_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_4 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_4 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_3 : STD_LOGIC;
    signal buf_2d_out_3_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_3 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_3 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_2 : STD_LOGIC;
    signal buf_2d_out_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_2 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out_1 : STD_LOGIC;
    signal buf_2d_out_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out_1 : STD_LOGIC;
    signal ap_channel_done_buf_2d_out : STD_LOGIC;
    signal buf_2d_out_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_buf_2d_out : STD_LOGIC := '0';
    signal ap_sync_channel_write_buf_2d_out : STD_LOGIC;
    signal write_data_U0_ap_start : STD_LOGIC;
    signal write_data_U0_ap_done : STD_LOGIC;
    signal write_data_U0_ap_continue : STD_LOGIC;
    signal write_data_U0_ap_idle : STD_LOGIC;
    signal write_data_U0_ap_ready : STD_LOGIC;
    signal write_data_U0_m_axi_gmem_AWVALID : STD_LOGIC;
    signal write_data_U0_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal write_data_U0_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal write_data_U0_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal write_data_U0_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal write_data_U0_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal write_data_U0_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal write_data_U0_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal write_data_U0_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal write_data_U0_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal write_data_U0_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal write_data_U0_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal write_data_U0_m_axi_gmem_WVALID : STD_LOGIC;
    signal write_data_U0_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal write_data_U0_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal write_data_U0_m_axi_gmem_WLAST : STD_LOGIC;
    signal write_data_U0_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal write_data_U0_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal write_data_U0_m_axi_gmem_ARVALID : STD_LOGIC;
    signal write_data_U0_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal write_data_U0_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal write_data_U0_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal write_data_U0_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal write_data_U0_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal write_data_U0_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal write_data_U0_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal write_data_U0_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal write_data_U0_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal write_data_U0_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal write_data_U0_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal write_data_U0_m_axi_gmem_RREADY : STD_LOGIC;
    signal write_data_U0_m_axi_gmem_BREADY : STD_LOGIC;
    signal write_data_U0_output_r_read : STD_LOGIC;
    signal output_r_c_full_n : STD_LOGIC;
    signal output_r_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal output_r_c_num_data_valid : STD_LOGIC_VECTOR (4 downto 0);
    signal output_r_c_fifo_cap : STD_LOGIC_VECTOR (4 downto 0);
    signal output_r_c_empty_n : STD_LOGIC;
    signal buf_2d_in_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_empty_n : STD_LOGIC;
    signal buf_2d_in_1_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_1_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_1_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_1_empty_n : STD_LOGIC;
    signal buf_2d_in_2_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_2_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_2_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_2_empty_n : STD_LOGIC;
    signal buf_2d_in_3_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_3_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_3_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_3_empty_n : STD_LOGIC;
    signal buf_2d_in_4_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_4_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_4_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_4_empty_n : STD_LOGIC;
    signal buf_2d_in_5_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_5_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_5_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_5_empty_n : STD_LOGIC;
    signal buf_2d_in_6_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_6_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_6_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_6_empty_n : STD_LOGIC;
    signal buf_2d_in_7_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_7_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_7_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_7_empty_n : STD_LOGIC;
    signal buf_2d_in_8_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_8_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_8_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_8_empty_n : STD_LOGIC;
    signal buf_2d_in_9_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_9_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_9_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_9_empty_n : STD_LOGIC;
    signal buf_2d_in_10_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_10_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_10_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_10_empty_n : STD_LOGIC;
    signal buf_2d_in_11_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_11_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_11_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_11_empty_n : STD_LOGIC;
    signal buf_2d_in_12_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_12_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_12_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_12_empty_n : STD_LOGIC;
    signal buf_2d_in_13_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_13_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_13_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_13_empty_n : STD_LOGIC;
    signal buf_2d_in_14_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_14_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_14_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_14_empty_n : STD_LOGIC;
    signal buf_2d_in_15_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_15_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_15_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_15_empty_n : STD_LOGIC;
    signal buf_2d_in_16_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_16_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_16_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_16_empty_n : STD_LOGIC;
    signal buf_2d_in_17_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_17_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_17_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_17_empty_n : STD_LOGIC;
    signal buf_2d_in_18_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_18_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_18_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_18_empty_n : STD_LOGIC;
    signal buf_2d_in_19_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_19_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_19_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_19_empty_n : STD_LOGIC;
    signal buf_2d_in_20_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_20_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_20_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_20_empty_n : STD_LOGIC;
    signal buf_2d_in_21_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_21_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_21_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_21_empty_n : STD_LOGIC;
    signal buf_2d_in_22_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_22_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_22_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_22_empty_n : STD_LOGIC;
    signal buf_2d_in_23_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_23_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_23_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_23_empty_n : STD_LOGIC;
    signal buf_2d_in_24_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_24_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_24_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_24_empty_n : STD_LOGIC;
    signal buf_2d_in_25_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_25_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_25_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_25_empty_n : STD_LOGIC;
    signal buf_2d_in_26_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_26_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_26_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_26_empty_n : STD_LOGIC;
    signal buf_2d_in_27_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_27_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_27_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_27_empty_n : STD_LOGIC;
    signal buf_2d_in_28_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_28_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_28_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_28_empty_n : STD_LOGIC;
    signal buf_2d_in_29_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_29_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_29_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_29_empty_n : STD_LOGIC;
    signal buf_2d_in_30_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_30_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_30_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_30_empty_n : STD_LOGIC;
    signal buf_2d_in_31_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_31_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_31_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_31_empty_n : STD_LOGIC;
    signal buf_2d_in_32_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_32_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_32_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_32_empty_n : STD_LOGIC;
    signal buf_2d_in_33_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_33_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_33_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_33_empty_n : STD_LOGIC;
    signal buf_2d_in_34_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_34_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_34_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_34_empty_n : STD_LOGIC;
    signal buf_2d_in_35_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_35_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_35_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_35_empty_n : STD_LOGIC;
    signal buf_2d_in_36_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_36_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_36_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_36_empty_n : STD_LOGIC;
    signal buf_2d_in_37_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_37_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_37_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_37_empty_n : STD_LOGIC;
    signal buf_2d_in_38_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_38_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_38_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_38_empty_n : STD_LOGIC;
    signal buf_2d_in_39_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_39_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_39_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_39_empty_n : STD_LOGIC;
    signal buf_2d_in_40_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_40_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_40_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_40_empty_n : STD_LOGIC;
    signal buf_2d_in_41_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_41_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_41_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_41_empty_n : STD_LOGIC;
    signal buf_2d_in_42_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_42_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_42_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_42_empty_n : STD_LOGIC;
    signal buf_2d_in_43_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_43_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_43_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_43_empty_n : STD_LOGIC;
    signal buf_2d_in_44_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_44_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_44_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_44_empty_n : STD_LOGIC;
    signal buf_2d_in_45_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_45_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_45_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_45_empty_n : STD_LOGIC;
    signal buf_2d_in_46_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_46_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_46_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_46_empty_n : STD_LOGIC;
    signal buf_2d_in_47_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_47_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_47_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_47_empty_n : STD_LOGIC;
    signal buf_2d_in_48_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_48_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_48_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_48_empty_n : STD_LOGIC;
    signal buf_2d_in_49_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_49_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_49_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_49_empty_n : STD_LOGIC;
    signal buf_2d_in_50_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_50_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_50_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_50_empty_n : STD_LOGIC;
    signal buf_2d_in_51_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_51_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_51_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_51_empty_n : STD_LOGIC;
    signal buf_2d_in_52_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_52_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_52_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_52_empty_n : STD_LOGIC;
    signal buf_2d_in_53_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_53_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_53_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_53_empty_n : STD_LOGIC;
    signal buf_2d_in_54_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_54_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_54_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_54_empty_n : STD_LOGIC;
    signal buf_2d_in_55_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_55_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_55_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_55_empty_n : STD_LOGIC;
    signal buf_2d_in_56_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_56_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_56_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_56_empty_n : STD_LOGIC;
    signal buf_2d_in_57_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_57_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_57_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_57_empty_n : STD_LOGIC;
    signal buf_2d_in_58_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_58_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_58_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_58_empty_n : STD_LOGIC;
    signal buf_2d_in_59_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_59_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_59_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_59_empty_n : STD_LOGIC;
    signal buf_2d_in_60_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_60_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_60_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_60_empty_n : STD_LOGIC;
    signal buf_2d_in_61_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_61_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_61_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_61_empty_n : STD_LOGIC;
    signal buf_2d_in_62_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_62_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_62_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_62_empty_n : STD_LOGIC;
    signal buf_2d_in_63_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_63_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_63_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_in_63_empty_n : STD_LOGIC;
    signal buf_2d_out_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_empty_n : STD_LOGIC;
    signal buf_2d_out_1_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_1_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_1_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_1_empty_n : STD_LOGIC;
    signal buf_2d_out_2_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_2_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_2_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_2_empty_n : STD_LOGIC;
    signal buf_2d_out_3_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_3_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_3_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_3_empty_n : STD_LOGIC;
    signal buf_2d_out_4_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_4_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_4_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_4_empty_n : STD_LOGIC;
    signal buf_2d_out_5_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_5_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_5_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_5_empty_n : STD_LOGIC;
    signal buf_2d_out_6_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_6_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_6_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_6_empty_n : STD_LOGIC;
    signal buf_2d_out_7_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_7_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_7_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_7_empty_n : STD_LOGIC;
    signal buf_2d_out_8_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_8_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_8_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_8_empty_n : STD_LOGIC;
    signal buf_2d_out_9_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_9_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_9_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_9_empty_n : STD_LOGIC;
    signal buf_2d_out_10_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_10_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_10_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_10_empty_n : STD_LOGIC;
    signal buf_2d_out_11_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_11_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_11_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_11_empty_n : STD_LOGIC;
    signal buf_2d_out_12_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_12_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_12_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_12_empty_n : STD_LOGIC;
    signal buf_2d_out_13_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_13_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_13_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_13_empty_n : STD_LOGIC;
    signal buf_2d_out_14_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_14_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_14_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_14_empty_n : STD_LOGIC;
    signal buf_2d_out_15_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_15_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_15_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_15_empty_n : STD_LOGIC;
    signal buf_2d_out_16_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_16_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_16_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_16_empty_n : STD_LOGIC;
    signal buf_2d_out_17_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_17_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_17_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_17_empty_n : STD_LOGIC;
    signal buf_2d_out_18_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_18_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_18_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_18_empty_n : STD_LOGIC;
    signal buf_2d_out_19_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_19_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_19_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_19_empty_n : STD_LOGIC;
    signal buf_2d_out_20_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_20_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_20_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_20_empty_n : STD_LOGIC;
    signal buf_2d_out_21_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_21_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_21_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_21_empty_n : STD_LOGIC;
    signal buf_2d_out_22_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_22_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_22_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_22_empty_n : STD_LOGIC;
    signal buf_2d_out_23_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_23_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_23_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_23_empty_n : STD_LOGIC;
    signal buf_2d_out_24_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_24_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_24_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_24_empty_n : STD_LOGIC;
    signal buf_2d_out_25_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_25_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_25_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_25_empty_n : STD_LOGIC;
    signal buf_2d_out_26_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_26_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_26_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_26_empty_n : STD_LOGIC;
    signal buf_2d_out_27_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_27_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_27_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_27_empty_n : STD_LOGIC;
    signal buf_2d_out_28_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_28_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_28_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_28_empty_n : STD_LOGIC;
    signal buf_2d_out_29_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_29_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_29_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_29_empty_n : STD_LOGIC;
    signal buf_2d_out_30_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_30_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_30_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_30_empty_n : STD_LOGIC;
    signal buf_2d_out_31_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_31_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_31_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_31_empty_n : STD_LOGIC;
    signal buf_2d_out_32_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_32_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_32_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_32_empty_n : STD_LOGIC;
    signal buf_2d_out_33_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_33_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_33_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_33_empty_n : STD_LOGIC;
    signal buf_2d_out_34_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_34_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_34_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_34_empty_n : STD_LOGIC;
    signal buf_2d_out_35_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_35_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_35_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_35_empty_n : STD_LOGIC;
    signal buf_2d_out_36_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_36_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_36_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_36_empty_n : STD_LOGIC;
    signal buf_2d_out_37_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_37_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_37_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_37_empty_n : STD_LOGIC;
    signal buf_2d_out_38_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_38_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_38_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_38_empty_n : STD_LOGIC;
    signal buf_2d_out_39_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_39_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_39_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_39_empty_n : STD_LOGIC;
    signal buf_2d_out_40_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_40_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_40_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_40_empty_n : STD_LOGIC;
    signal buf_2d_out_41_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_41_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_41_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_41_empty_n : STD_LOGIC;
    signal buf_2d_out_42_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_42_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_42_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_42_empty_n : STD_LOGIC;
    signal buf_2d_out_43_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_43_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_43_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_43_empty_n : STD_LOGIC;
    signal buf_2d_out_44_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_44_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_44_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_44_empty_n : STD_LOGIC;
    signal buf_2d_out_45_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_45_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_45_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_45_empty_n : STD_LOGIC;
    signal buf_2d_out_46_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_46_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_46_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_46_empty_n : STD_LOGIC;
    signal buf_2d_out_47_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_47_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_47_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_47_empty_n : STD_LOGIC;
    signal buf_2d_out_48_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_48_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_48_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_48_empty_n : STD_LOGIC;
    signal buf_2d_out_49_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_49_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_49_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_49_empty_n : STD_LOGIC;
    signal buf_2d_out_50_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_50_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_50_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_50_empty_n : STD_LOGIC;
    signal buf_2d_out_51_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_51_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_51_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_51_empty_n : STD_LOGIC;
    signal buf_2d_out_52_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_52_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_52_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_52_empty_n : STD_LOGIC;
    signal buf_2d_out_53_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_53_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_53_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_53_empty_n : STD_LOGIC;
    signal buf_2d_out_54_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_54_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_54_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_54_empty_n : STD_LOGIC;
    signal buf_2d_out_55_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_55_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_55_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_55_empty_n : STD_LOGIC;
    signal buf_2d_out_56_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_56_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_56_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_56_empty_n : STD_LOGIC;
    signal buf_2d_out_57_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_57_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_57_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_57_empty_n : STD_LOGIC;
    signal buf_2d_out_58_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_58_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_58_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_58_empty_n : STD_LOGIC;
    signal buf_2d_out_59_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_59_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_59_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_59_empty_n : STD_LOGIC;
    signal buf_2d_out_60_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_60_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_60_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_60_empty_n : STD_LOGIC;
    signal buf_2d_out_61_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_61_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_61_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_61_empty_n : STD_LOGIC;
    signal buf_2d_out_62_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_62_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_62_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_62_empty_n : STD_LOGIC;
    signal buf_2d_out_63_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_63_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_63_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_2d_out_63_empty_n : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_entry_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_entry_proc_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_read_data_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_read_data_U0_ap_ready : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component dct_entry_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_r : IN STD_LOGIC_VECTOR (63 downto 0);
        output_r_c_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        output_r_c_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        output_r_c_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        output_r_c_full_n : IN STD_LOGIC;
        output_r_c_write : OUT STD_LOGIC );
    end component;


    component dct_read_data IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        input_r : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_33 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_34 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_35 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_36 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_37 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_38 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_39 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_40 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_41 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_42 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_43 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_44 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_45 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_46 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_47 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_48 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_49 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_50 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_51 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_52 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_53 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_54 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_55 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_56 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_57 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_58 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_59 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_60 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_61 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_62 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_63 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component dct_dct_2d IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read14 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read15 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read16 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read17 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read18 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read19 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read20 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read21 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read22 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read23 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read24 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read25 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read26 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read27 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read28 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read29 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read30 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read31 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read32 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read33 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read34 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read35 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read36 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read37 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read38 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read39 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read40 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read41 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read42 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read43 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read44 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read45 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read46 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read47 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read48 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read49 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read50 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read51 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read52 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read53 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read54 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read55 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read56 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read57 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read58 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read59 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read60 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read61 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read62 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read63 : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_33 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_34 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_35 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_36 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_37 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_38 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_39 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_40 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_41 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_42 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_43 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_44 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_45 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_46 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_47 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_48 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_49 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_50 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_51 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_52 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_53 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_54 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_55 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_56 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_57 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_58 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_59 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_60 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_61 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_62 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_63 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component dct_write_data IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        buf_read : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_255 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_256 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_257 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_258 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_259 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_260 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_261 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_262 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_263 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_264 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_265 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_266 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_267 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_268 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_269 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_270 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_271 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_272 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_273 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_274 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_275 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_276 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_277 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_278 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_279 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_280 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_281 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_282 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_283 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_284 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_285 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_286 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_287 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_288 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_289 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_290 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_291 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_292 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_293 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_294 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_295 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_296 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_297 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_298 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_299 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_300 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_301 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_302 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_303 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_304 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_305 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_306 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_307 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_308 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_309 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_310 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_311 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_312 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_313 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_314 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_315 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_316 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_read_317 : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        output_r_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        output_r_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
        output_r_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
        output_r_empty_n : IN STD_LOGIC;
        output_r_read : OUT STD_LOGIC );
    end component;


    component dct_fifo_w64_d9_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (4 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (4 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component dct_fifo_w16_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component dct_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        input_r : OUT STD_LOGIC_VECTOR (63 downto 0);
        output_r : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_continue : OUT STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component dct_gmem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    control_s_axi_U : component dct_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        input_r => input_r,
        output_r => output_r,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_continue => ap_continue,
        ap_idle => ap_idle);

    gmem_m_axi_U : component dct_gmem_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 69,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        USER_RFIFONUM_WIDTH => 9,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE,
        USER_DW => 512,
        USER_AW => 64)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => read_data_U0_m_axi_gmem_ARVALID,
        I_ARREADY => gmem_ARREADY,
        I_ARADDR => read_data_U0_m_axi_gmem_ARADDR,
        I_ARLEN => read_data_U0_m_axi_gmem_ARLEN,
        I_RVALID => gmem_RVALID,
        I_RREADY => read_data_U0_m_axi_gmem_RREADY,
        I_RDATA => gmem_RDATA,
        I_RFIFONUM => gmem_RFIFONUM,
        I_AWVALID => write_data_U0_m_axi_gmem_AWVALID,
        I_AWREADY => gmem_AWREADY,
        I_AWADDR => write_data_U0_m_axi_gmem_AWADDR,
        I_AWLEN => write_data_U0_m_axi_gmem_AWLEN,
        I_WVALID => write_data_U0_m_axi_gmem_WVALID,
        I_WREADY => gmem_WREADY,
        I_WDATA => write_data_U0_m_axi_gmem_WDATA,
        I_WSTRB => write_data_U0_m_axi_gmem_WSTRB,
        I_BVALID => gmem_BVALID,
        I_BREADY => write_data_U0_m_axi_gmem_BREADY);

    entry_proc_U0 : component dct_entry_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => entry_proc_U0_ap_start,
        ap_done => entry_proc_U0_ap_done,
        ap_continue => entry_proc_U0_ap_continue,
        ap_idle => entry_proc_U0_ap_idle,
        ap_ready => entry_proc_U0_ap_ready,
        output_r => output_r,
        output_r_c_din => entry_proc_U0_output_r_c_din,
        output_r_c_num_data_valid => output_r_c_num_data_valid,
        output_r_c_fifo_cap => output_r_c_fifo_cap,
        output_r_c_full_n => output_r_c_full_n,
        output_r_c_write => entry_proc_U0_output_r_c_write);

    read_data_U0 : component dct_read_data
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => read_data_U0_ap_start,
        ap_done => read_data_U0_ap_done,
        ap_continue => read_data_U0_ap_continue,
        ap_idle => read_data_U0_ap_idle,
        ap_ready => read_data_U0_ap_ready,
        m_axi_gmem_AWVALID => read_data_U0_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => read_data_U0_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => read_data_U0_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => read_data_U0_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => read_data_U0_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => read_data_U0_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => read_data_U0_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => read_data_U0_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => read_data_U0_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => read_data_U0_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => read_data_U0_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => read_data_U0_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => read_data_U0_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => read_data_U0_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => read_data_U0_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => read_data_U0_m_axi_gmem_WLAST,
        m_axi_gmem_WID => read_data_U0_m_axi_gmem_WID,
        m_axi_gmem_WUSER => read_data_U0_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => read_data_U0_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => gmem_ARREADY,
        m_axi_gmem_ARADDR => read_data_U0_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => read_data_U0_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => read_data_U0_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => read_data_U0_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => read_data_U0_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => read_data_U0_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => read_data_U0_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => read_data_U0_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => read_data_U0_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => read_data_U0_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => read_data_U0_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => gmem_RVALID,
        m_axi_gmem_RREADY => read_data_U0_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => gmem_RDATA,
        m_axi_gmem_RLAST => gmem_RLAST,
        m_axi_gmem_RID => gmem_RID,
        m_axi_gmem_RFIFONUM => gmem_RFIFONUM,
        m_axi_gmem_RUSER => gmem_RUSER,
        m_axi_gmem_RRESP => gmem_RRESP,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => read_data_U0_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        input_r => input_r,
        ap_return_0 => read_data_U0_ap_return_0,
        ap_return_1 => read_data_U0_ap_return_1,
        ap_return_2 => read_data_U0_ap_return_2,
        ap_return_3 => read_data_U0_ap_return_3,
        ap_return_4 => read_data_U0_ap_return_4,
        ap_return_5 => read_data_U0_ap_return_5,
        ap_return_6 => read_data_U0_ap_return_6,
        ap_return_7 => read_data_U0_ap_return_7,
        ap_return_8 => read_data_U0_ap_return_8,
        ap_return_9 => read_data_U0_ap_return_9,
        ap_return_10 => read_data_U0_ap_return_10,
        ap_return_11 => read_data_U0_ap_return_11,
        ap_return_12 => read_data_U0_ap_return_12,
        ap_return_13 => read_data_U0_ap_return_13,
        ap_return_14 => read_data_U0_ap_return_14,
        ap_return_15 => read_data_U0_ap_return_15,
        ap_return_16 => read_data_U0_ap_return_16,
        ap_return_17 => read_data_U0_ap_return_17,
        ap_return_18 => read_data_U0_ap_return_18,
        ap_return_19 => read_data_U0_ap_return_19,
        ap_return_20 => read_data_U0_ap_return_20,
        ap_return_21 => read_data_U0_ap_return_21,
        ap_return_22 => read_data_U0_ap_return_22,
        ap_return_23 => read_data_U0_ap_return_23,
        ap_return_24 => read_data_U0_ap_return_24,
        ap_return_25 => read_data_U0_ap_return_25,
        ap_return_26 => read_data_U0_ap_return_26,
        ap_return_27 => read_data_U0_ap_return_27,
        ap_return_28 => read_data_U0_ap_return_28,
        ap_return_29 => read_data_U0_ap_return_29,
        ap_return_30 => read_data_U0_ap_return_30,
        ap_return_31 => read_data_U0_ap_return_31,
        ap_return_32 => read_data_U0_ap_return_32,
        ap_return_33 => read_data_U0_ap_return_33,
        ap_return_34 => read_data_U0_ap_return_34,
        ap_return_35 => read_data_U0_ap_return_35,
        ap_return_36 => read_data_U0_ap_return_36,
        ap_return_37 => read_data_U0_ap_return_37,
        ap_return_38 => read_data_U0_ap_return_38,
        ap_return_39 => read_data_U0_ap_return_39,
        ap_return_40 => read_data_U0_ap_return_40,
        ap_return_41 => read_data_U0_ap_return_41,
        ap_return_42 => read_data_U0_ap_return_42,
        ap_return_43 => read_data_U0_ap_return_43,
        ap_return_44 => read_data_U0_ap_return_44,
        ap_return_45 => read_data_U0_ap_return_45,
        ap_return_46 => read_data_U0_ap_return_46,
        ap_return_47 => read_data_U0_ap_return_47,
        ap_return_48 => read_data_U0_ap_return_48,
        ap_return_49 => read_data_U0_ap_return_49,
        ap_return_50 => read_data_U0_ap_return_50,
        ap_return_51 => read_data_U0_ap_return_51,
        ap_return_52 => read_data_U0_ap_return_52,
        ap_return_53 => read_data_U0_ap_return_53,
        ap_return_54 => read_data_U0_ap_return_54,
        ap_return_55 => read_data_U0_ap_return_55,
        ap_return_56 => read_data_U0_ap_return_56,
        ap_return_57 => read_data_U0_ap_return_57,
        ap_return_58 => read_data_U0_ap_return_58,
        ap_return_59 => read_data_U0_ap_return_59,
        ap_return_60 => read_data_U0_ap_return_60,
        ap_return_61 => read_data_U0_ap_return_61,
        ap_return_62 => read_data_U0_ap_return_62,
        ap_return_63 => read_data_U0_ap_return_63);

    dct_2d_U0 : component dct_dct_2d
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => dct_2d_U0_ap_start,
        ap_done => dct_2d_U0_ap_done,
        ap_continue => dct_2d_U0_ap_continue,
        ap_idle => dct_2d_U0_ap_idle,
        ap_ready => dct_2d_U0_ap_ready,
        p_read => buf_2d_in_dout,
        p_read1 => buf_2d_in_1_dout,
        p_read2 => buf_2d_in_2_dout,
        p_read3 => buf_2d_in_3_dout,
        p_read4 => buf_2d_in_4_dout,
        p_read5 => buf_2d_in_5_dout,
        p_read6 => buf_2d_in_6_dout,
        p_read7 => buf_2d_in_7_dout,
        p_read8 => buf_2d_in_8_dout,
        p_read9 => buf_2d_in_9_dout,
        p_read10 => buf_2d_in_10_dout,
        p_read11 => buf_2d_in_11_dout,
        p_read12 => buf_2d_in_12_dout,
        p_read13 => buf_2d_in_13_dout,
        p_read14 => buf_2d_in_14_dout,
        p_read15 => buf_2d_in_15_dout,
        p_read16 => buf_2d_in_16_dout,
        p_read17 => buf_2d_in_17_dout,
        p_read18 => buf_2d_in_18_dout,
        p_read19 => buf_2d_in_19_dout,
        p_read20 => buf_2d_in_20_dout,
        p_read21 => buf_2d_in_21_dout,
        p_read22 => buf_2d_in_22_dout,
        p_read23 => buf_2d_in_23_dout,
        p_read24 => buf_2d_in_24_dout,
        p_read25 => buf_2d_in_25_dout,
        p_read26 => buf_2d_in_26_dout,
        p_read27 => buf_2d_in_27_dout,
        p_read28 => buf_2d_in_28_dout,
        p_read29 => buf_2d_in_29_dout,
        p_read30 => buf_2d_in_30_dout,
        p_read31 => buf_2d_in_31_dout,
        p_read32 => buf_2d_in_32_dout,
        p_read33 => buf_2d_in_33_dout,
        p_read34 => buf_2d_in_34_dout,
        p_read35 => buf_2d_in_35_dout,
        p_read36 => buf_2d_in_36_dout,
        p_read37 => buf_2d_in_37_dout,
        p_read38 => buf_2d_in_38_dout,
        p_read39 => buf_2d_in_39_dout,
        p_read40 => buf_2d_in_40_dout,
        p_read41 => buf_2d_in_41_dout,
        p_read42 => buf_2d_in_42_dout,
        p_read43 => buf_2d_in_43_dout,
        p_read44 => buf_2d_in_44_dout,
        p_read45 => buf_2d_in_45_dout,
        p_read46 => buf_2d_in_46_dout,
        p_read47 => buf_2d_in_47_dout,
        p_read48 => buf_2d_in_48_dout,
        p_read49 => buf_2d_in_49_dout,
        p_read50 => buf_2d_in_50_dout,
        p_read51 => buf_2d_in_51_dout,
        p_read52 => buf_2d_in_52_dout,
        p_read53 => buf_2d_in_53_dout,
        p_read54 => buf_2d_in_54_dout,
        p_read55 => buf_2d_in_55_dout,
        p_read56 => buf_2d_in_56_dout,
        p_read57 => buf_2d_in_57_dout,
        p_read58 => buf_2d_in_58_dout,
        p_read59 => buf_2d_in_59_dout,
        p_read60 => buf_2d_in_60_dout,
        p_read61 => buf_2d_in_61_dout,
        p_read62 => buf_2d_in_62_dout,
        p_read63 => buf_2d_in_63_dout,
        ap_return_0 => dct_2d_U0_ap_return_0,
        ap_return_1 => dct_2d_U0_ap_return_1,
        ap_return_2 => dct_2d_U0_ap_return_2,
        ap_return_3 => dct_2d_U0_ap_return_3,
        ap_return_4 => dct_2d_U0_ap_return_4,
        ap_return_5 => dct_2d_U0_ap_return_5,
        ap_return_6 => dct_2d_U0_ap_return_6,
        ap_return_7 => dct_2d_U0_ap_return_7,
        ap_return_8 => dct_2d_U0_ap_return_8,
        ap_return_9 => dct_2d_U0_ap_return_9,
        ap_return_10 => dct_2d_U0_ap_return_10,
        ap_return_11 => dct_2d_U0_ap_return_11,
        ap_return_12 => dct_2d_U0_ap_return_12,
        ap_return_13 => dct_2d_U0_ap_return_13,
        ap_return_14 => dct_2d_U0_ap_return_14,
        ap_return_15 => dct_2d_U0_ap_return_15,
        ap_return_16 => dct_2d_U0_ap_return_16,
        ap_return_17 => dct_2d_U0_ap_return_17,
        ap_return_18 => dct_2d_U0_ap_return_18,
        ap_return_19 => dct_2d_U0_ap_return_19,
        ap_return_20 => dct_2d_U0_ap_return_20,
        ap_return_21 => dct_2d_U0_ap_return_21,
        ap_return_22 => dct_2d_U0_ap_return_22,
        ap_return_23 => dct_2d_U0_ap_return_23,
        ap_return_24 => dct_2d_U0_ap_return_24,
        ap_return_25 => dct_2d_U0_ap_return_25,
        ap_return_26 => dct_2d_U0_ap_return_26,
        ap_return_27 => dct_2d_U0_ap_return_27,
        ap_return_28 => dct_2d_U0_ap_return_28,
        ap_return_29 => dct_2d_U0_ap_return_29,
        ap_return_30 => dct_2d_U0_ap_return_30,
        ap_return_31 => dct_2d_U0_ap_return_31,
        ap_return_32 => dct_2d_U0_ap_return_32,
        ap_return_33 => dct_2d_U0_ap_return_33,
        ap_return_34 => dct_2d_U0_ap_return_34,
        ap_return_35 => dct_2d_U0_ap_return_35,
        ap_return_36 => dct_2d_U0_ap_return_36,
        ap_return_37 => dct_2d_U0_ap_return_37,
        ap_return_38 => dct_2d_U0_ap_return_38,
        ap_return_39 => dct_2d_U0_ap_return_39,
        ap_return_40 => dct_2d_U0_ap_return_40,
        ap_return_41 => dct_2d_U0_ap_return_41,
        ap_return_42 => dct_2d_U0_ap_return_42,
        ap_return_43 => dct_2d_U0_ap_return_43,
        ap_return_44 => dct_2d_U0_ap_return_44,
        ap_return_45 => dct_2d_U0_ap_return_45,
        ap_return_46 => dct_2d_U0_ap_return_46,
        ap_return_47 => dct_2d_U0_ap_return_47,
        ap_return_48 => dct_2d_U0_ap_return_48,
        ap_return_49 => dct_2d_U0_ap_return_49,
        ap_return_50 => dct_2d_U0_ap_return_50,
        ap_return_51 => dct_2d_U0_ap_return_51,
        ap_return_52 => dct_2d_U0_ap_return_52,
        ap_return_53 => dct_2d_U0_ap_return_53,
        ap_return_54 => dct_2d_U0_ap_return_54,
        ap_return_55 => dct_2d_U0_ap_return_55,
        ap_return_56 => dct_2d_U0_ap_return_56,
        ap_return_57 => dct_2d_U0_ap_return_57,
        ap_return_58 => dct_2d_U0_ap_return_58,
        ap_return_59 => dct_2d_U0_ap_return_59,
        ap_return_60 => dct_2d_U0_ap_return_60,
        ap_return_61 => dct_2d_U0_ap_return_61,
        ap_return_62 => dct_2d_U0_ap_return_62,
        ap_return_63 => dct_2d_U0_ap_return_63);

    write_data_U0 : component dct_write_data
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => write_data_U0_ap_start,
        ap_done => write_data_U0_ap_done,
        ap_continue => write_data_U0_ap_continue,
        ap_idle => write_data_U0_ap_idle,
        ap_ready => write_data_U0_ap_ready,
        buf_read => buf_2d_out_dout,
        buf_read_255 => buf_2d_out_1_dout,
        buf_read_256 => buf_2d_out_2_dout,
        buf_read_257 => buf_2d_out_3_dout,
        buf_read_258 => buf_2d_out_4_dout,
        buf_read_259 => buf_2d_out_5_dout,
        buf_read_260 => buf_2d_out_6_dout,
        buf_read_261 => buf_2d_out_7_dout,
        buf_read_262 => buf_2d_out_8_dout,
        buf_read_263 => buf_2d_out_9_dout,
        buf_read_264 => buf_2d_out_10_dout,
        buf_read_265 => buf_2d_out_11_dout,
        buf_read_266 => buf_2d_out_12_dout,
        buf_read_267 => buf_2d_out_13_dout,
        buf_read_268 => buf_2d_out_14_dout,
        buf_read_269 => buf_2d_out_15_dout,
        buf_read_270 => buf_2d_out_16_dout,
        buf_read_271 => buf_2d_out_17_dout,
        buf_read_272 => buf_2d_out_18_dout,
        buf_read_273 => buf_2d_out_19_dout,
        buf_read_274 => buf_2d_out_20_dout,
        buf_read_275 => buf_2d_out_21_dout,
        buf_read_276 => buf_2d_out_22_dout,
        buf_read_277 => buf_2d_out_23_dout,
        buf_read_278 => buf_2d_out_24_dout,
        buf_read_279 => buf_2d_out_25_dout,
        buf_read_280 => buf_2d_out_26_dout,
        buf_read_281 => buf_2d_out_27_dout,
        buf_read_282 => buf_2d_out_28_dout,
        buf_read_283 => buf_2d_out_29_dout,
        buf_read_284 => buf_2d_out_30_dout,
        buf_read_285 => buf_2d_out_31_dout,
        buf_read_286 => buf_2d_out_32_dout,
        buf_read_287 => buf_2d_out_33_dout,
        buf_read_288 => buf_2d_out_34_dout,
        buf_read_289 => buf_2d_out_35_dout,
        buf_read_290 => buf_2d_out_36_dout,
        buf_read_291 => buf_2d_out_37_dout,
        buf_read_292 => buf_2d_out_38_dout,
        buf_read_293 => buf_2d_out_39_dout,
        buf_read_294 => buf_2d_out_40_dout,
        buf_read_295 => buf_2d_out_41_dout,
        buf_read_296 => buf_2d_out_42_dout,
        buf_read_297 => buf_2d_out_43_dout,
        buf_read_298 => buf_2d_out_44_dout,
        buf_read_299 => buf_2d_out_45_dout,
        buf_read_300 => buf_2d_out_46_dout,
        buf_read_301 => buf_2d_out_47_dout,
        buf_read_302 => buf_2d_out_48_dout,
        buf_read_303 => buf_2d_out_49_dout,
        buf_read_304 => buf_2d_out_50_dout,
        buf_read_305 => buf_2d_out_51_dout,
        buf_read_306 => buf_2d_out_52_dout,
        buf_read_307 => buf_2d_out_53_dout,
        buf_read_308 => buf_2d_out_54_dout,
        buf_read_309 => buf_2d_out_55_dout,
        buf_read_310 => buf_2d_out_56_dout,
        buf_read_311 => buf_2d_out_57_dout,
        buf_read_312 => buf_2d_out_58_dout,
        buf_read_313 => buf_2d_out_59_dout,
        buf_read_314 => buf_2d_out_60_dout,
        buf_read_315 => buf_2d_out_61_dout,
        buf_read_316 => buf_2d_out_62_dout,
        buf_read_317 => buf_2d_out_63_dout,
        m_axi_gmem_AWVALID => write_data_U0_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => gmem_AWREADY,
        m_axi_gmem_AWADDR => write_data_U0_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => write_data_U0_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => write_data_U0_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => write_data_U0_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => write_data_U0_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => write_data_U0_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => write_data_U0_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => write_data_U0_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => write_data_U0_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => write_data_U0_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => write_data_U0_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => write_data_U0_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => gmem_WREADY,
        m_axi_gmem_WDATA => write_data_U0_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => write_data_U0_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => write_data_U0_m_axi_gmem_WLAST,
        m_axi_gmem_WID => write_data_U0_m_axi_gmem_WID,
        m_axi_gmem_WUSER => write_data_U0_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => write_data_U0_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => ap_const_logic_0,
        m_axi_gmem_ARADDR => write_data_U0_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => write_data_U0_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => write_data_U0_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => write_data_U0_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => write_data_U0_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => write_data_U0_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => write_data_U0_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => write_data_U0_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => write_data_U0_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => write_data_U0_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => write_data_U0_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => ap_const_logic_0,
        m_axi_gmem_RREADY => write_data_U0_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => ap_const_lv512_lc_1,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => gmem_BVALID,
        m_axi_gmem_BREADY => write_data_U0_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => gmem_BRESP,
        m_axi_gmem_BID => gmem_BID,
        m_axi_gmem_BUSER => gmem_BUSER,
        output_r_dout => output_r_c_dout,
        output_r_num_data_valid => output_r_c_num_data_valid,
        output_r_fifo_cap => output_r_c_fifo_cap,
        output_r_empty_n => output_r_c_empty_n,
        output_r_read => write_data_U0_output_r_read);

    output_r_c_U : component dct_fifo_w64_d9_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_output_r_c_din,
        if_full_n => output_r_c_full_n,
        if_write => entry_proc_U0_output_r_c_write,
        if_dout => output_r_c_dout,
        if_num_data_valid => output_r_c_num_data_valid,
        if_fifo_cap => output_r_c_fifo_cap,
        if_empty_n => output_r_c_empty_n,
        if_read => write_data_U0_output_r_read);

    buf_2d_in_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_0,
        if_full_n => buf_2d_in_full_n,
        if_write => ap_channel_done_buf_2d_in,
        if_dout => buf_2d_in_dout,
        if_num_data_valid => buf_2d_in_num_data_valid,
        if_fifo_cap => buf_2d_in_fifo_cap,
        if_empty_n => buf_2d_in_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_1_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_1,
        if_full_n => buf_2d_in_1_full_n,
        if_write => ap_channel_done_buf_2d_in_1,
        if_dout => buf_2d_in_1_dout,
        if_num_data_valid => buf_2d_in_1_num_data_valid,
        if_fifo_cap => buf_2d_in_1_fifo_cap,
        if_empty_n => buf_2d_in_1_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_2_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_2,
        if_full_n => buf_2d_in_2_full_n,
        if_write => ap_channel_done_buf_2d_in_2,
        if_dout => buf_2d_in_2_dout,
        if_num_data_valid => buf_2d_in_2_num_data_valid,
        if_fifo_cap => buf_2d_in_2_fifo_cap,
        if_empty_n => buf_2d_in_2_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_3_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_3,
        if_full_n => buf_2d_in_3_full_n,
        if_write => ap_channel_done_buf_2d_in_3,
        if_dout => buf_2d_in_3_dout,
        if_num_data_valid => buf_2d_in_3_num_data_valid,
        if_fifo_cap => buf_2d_in_3_fifo_cap,
        if_empty_n => buf_2d_in_3_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_4_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_4,
        if_full_n => buf_2d_in_4_full_n,
        if_write => ap_channel_done_buf_2d_in_4,
        if_dout => buf_2d_in_4_dout,
        if_num_data_valid => buf_2d_in_4_num_data_valid,
        if_fifo_cap => buf_2d_in_4_fifo_cap,
        if_empty_n => buf_2d_in_4_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_5_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_5,
        if_full_n => buf_2d_in_5_full_n,
        if_write => ap_channel_done_buf_2d_in_5,
        if_dout => buf_2d_in_5_dout,
        if_num_data_valid => buf_2d_in_5_num_data_valid,
        if_fifo_cap => buf_2d_in_5_fifo_cap,
        if_empty_n => buf_2d_in_5_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_6_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_6,
        if_full_n => buf_2d_in_6_full_n,
        if_write => ap_channel_done_buf_2d_in_6,
        if_dout => buf_2d_in_6_dout,
        if_num_data_valid => buf_2d_in_6_num_data_valid,
        if_fifo_cap => buf_2d_in_6_fifo_cap,
        if_empty_n => buf_2d_in_6_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_7_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_7,
        if_full_n => buf_2d_in_7_full_n,
        if_write => ap_channel_done_buf_2d_in_7,
        if_dout => buf_2d_in_7_dout,
        if_num_data_valid => buf_2d_in_7_num_data_valid,
        if_fifo_cap => buf_2d_in_7_fifo_cap,
        if_empty_n => buf_2d_in_7_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_8_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_8,
        if_full_n => buf_2d_in_8_full_n,
        if_write => ap_channel_done_buf_2d_in_8,
        if_dout => buf_2d_in_8_dout,
        if_num_data_valid => buf_2d_in_8_num_data_valid,
        if_fifo_cap => buf_2d_in_8_fifo_cap,
        if_empty_n => buf_2d_in_8_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_9_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_9,
        if_full_n => buf_2d_in_9_full_n,
        if_write => ap_channel_done_buf_2d_in_9,
        if_dout => buf_2d_in_9_dout,
        if_num_data_valid => buf_2d_in_9_num_data_valid,
        if_fifo_cap => buf_2d_in_9_fifo_cap,
        if_empty_n => buf_2d_in_9_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_10_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_10,
        if_full_n => buf_2d_in_10_full_n,
        if_write => ap_channel_done_buf_2d_in_10,
        if_dout => buf_2d_in_10_dout,
        if_num_data_valid => buf_2d_in_10_num_data_valid,
        if_fifo_cap => buf_2d_in_10_fifo_cap,
        if_empty_n => buf_2d_in_10_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_11_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_11,
        if_full_n => buf_2d_in_11_full_n,
        if_write => ap_channel_done_buf_2d_in_11,
        if_dout => buf_2d_in_11_dout,
        if_num_data_valid => buf_2d_in_11_num_data_valid,
        if_fifo_cap => buf_2d_in_11_fifo_cap,
        if_empty_n => buf_2d_in_11_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_12_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_12,
        if_full_n => buf_2d_in_12_full_n,
        if_write => ap_channel_done_buf_2d_in_12,
        if_dout => buf_2d_in_12_dout,
        if_num_data_valid => buf_2d_in_12_num_data_valid,
        if_fifo_cap => buf_2d_in_12_fifo_cap,
        if_empty_n => buf_2d_in_12_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_13_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_13,
        if_full_n => buf_2d_in_13_full_n,
        if_write => ap_channel_done_buf_2d_in_13,
        if_dout => buf_2d_in_13_dout,
        if_num_data_valid => buf_2d_in_13_num_data_valid,
        if_fifo_cap => buf_2d_in_13_fifo_cap,
        if_empty_n => buf_2d_in_13_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_14_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_14,
        if_full_n => buf_2d_in_14_full_n,
        if_write => ap_channel_done_buf_2d_in_14,
        if_dout => buf_2d_in_14_dout,
        if_num_data_valid => buf_2d_in_14_num_data_valid,
        if_fifo_cap => buf_2d_in_14_fifo_cap,
        if_empty_n => buf_2d_in_14_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_15_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_15,
        if_full_n => buf_2d_in_15_full_n,
        if_write => ap_channel_done_buf_2d_in_15,
        if_dout => buf_2d_in_15_dout,
        if_num_data_valid => buf_2d_in_15_num_data_valid,
        if_fifo_cap => buf_2d_in_15_fifo_cap,
        if_empty_n => buf_2d_in_15_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_16_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_16,
        if_full_n => buf_2d_in_16_full_n,
        if_write => ap_channel_done_buf_2d_in_16,
        if_dout => buf_2d_in_16_dout,
        if_num_data_valid => buf_2d_in_16_num_data_valid,
        if_fifo_cap => buf_2d_in_16_fifo_cap,
        if_empty_n => buf_2d_in_16_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_17_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_17,
        if_full_n => buf_2d_in_17_full_n,
        if_write => ap_channel_done_buf_2d_in_17,
        if_dout => buf_2d_in_17_dout,
        if_num_data_valid => buf_2d_in_17_num_data_valid,
        if_fifo_cap => buf_2d_in_17_fifo_cap,
        if_empty_n => buf_2d_in_17_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_18_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_18,
        if_full_n => buf_2d_in_18_full_n,
        if_write => ap_channel_done_buf_2d_in_18,
        if_dout => buf_2d_in_18_dout,
        if_num_data_valid => buf_2d_in_18_num_data_valid,
        if_fifo_cap => buf_2d_in_18_fifo_cap,
        if_empty_n => buf_2d_in_18_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_19_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_19,
        if_full_n => buf_2d_in_19_full_n,
        if_write => ap_channel_done_buf_2d_in_19,
        if_dout => buf_2d_in_19_dout,
        if_num_data_valid => buf_2d_in_19_num_data_valid,
        if_fifo_cap => buf_2d_in_19_fifo_cap,
        if_empty_n => buf_2d_in_19_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_20_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_20,
        if_full_n => buf_2d_in_20_full_n,
        if_write => ap_channel_done_buf_2d_in_20,
        if_dout => buf_2d_in_20_dout,
        if_num_data_valid => buf_2d_in_20_num_data_valid,
        if_fifo_cap => buf_2d_in_20_fifo_cap,
        if_empty_n => buf_2d_in_20_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_21_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_21,
        if_full_n => buf_2d_in_21_full_n,
        if_write => ap_channel_done_buf_2d_in_21,
        if_dout => buf_2d_in_21_dout,
        if_num_data_valid => buf_2d_in_21_num_data_valid,
        if_fifo_cap => buf_2d_in_21_fifo_cap,
        if_empty_n => buf_2d_in_21_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_22_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_22,
        if_full_n => buf_2d_in_22_full_n,
        if_write => ap_channel_done_buf_2d_in_22,
        if_dout => buf_2d_in_22_dout,
        if_num_data_valid => buf_2d_in_22_num_data_valid,
        if_fifo_cap => buf_2d_in_22_fifo_cap,
        if_empty_n => buf_2d_in_22_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_23_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_23,
        if_full_n => buf_2d_in_23_full_n,
        if_write => ap_channel_done_buf_2d_in_23,
        if_dout => buf_2d_in_23_dout,
        if_num_data_valid => buf_2d_in_23_num_data_valid,
        if_fifo_cap => buf_2d_in_23_fifo_cap,
        if_empty_n => buf_2d_in_23_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_24_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_24,
        if_full_n => buf_2d_in_24_full_n,
        if_write => ap_channel_done_buf_2d_in_24,
        if_dout => buf_2d_in_24_dout,
        if_num_data_valid => buf_2d_in_24_num_data_valid,
        if_fifo_cap => buf_2d_in_24_fifo_cap,
        if_empty_n => buf_2d_in_24_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_25_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_25,
        if_full_n => buf_2d_in_25_full_n,
        if_write => ap_channel_done_buf_2d_in_25,
        if_dout => buf_2d_in_25_dout,
        if_num_data_valid => buf_2d_in_25_num_data_valid,
        if_fifo_cap => buf_2d_in_25_fifo_cap,
        if_empty_n => buf_2d_in_25_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_26_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_26,
        if_full_n => buf_2d_in_26_full_n,
        if_write => ap_channel_done_buf_2d_in_26,
        if_dout => buf_2d_in_26_dout,
        if_num_data_valid => buf_2d_in_26_num_data_valid,
        if_fifo_cap => buf_2d_in_26_fifo_cap,
        if_empty_n => buf_2d_in_26_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_27_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_27,
        if_full_n => buf_2d_in_27_full_n,
        if_write => ap_channel_done_buf_2d_in_27,
        if_dout => buf_2d_in_27_dout,
        if_num_data_valid => buf_2d_in_27_num_data_valid,
        if_fifo_cap => buf_2d_in_27_fifo_cap,
        if_empty_n => buf_2d_in_27_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_28_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_28,
        if_full_n => buf_2d_in_28_full_n,
        if_write => ap_channel_done_buf_2d_in_28,
        if_dout => buf_2d_in_28_dout,
        if_num_data_valid => buf_2d_in_28_num_data_valid,
        if_fifo_cap => buf_2d_in_28_fifo_cap,
        if_empty_n => buf_2d_in_28_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_29_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_29,
        if_full_n => buf_2d_in_29_full_n,
        if_write => ap_channel_done_buf_2d_in_29,
        if_dout => buf_2d_in_29_dout,
        if_num_data_valid => buf_2d_in_29_num_data_valid,
        if_fifo_cap => buf_2d_in_29_fifo_cap,
        if_empty_n => buf_2d_in_29_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_30_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_30,
        if_full_n => buf_2d_in_30_full_n,
        if_write => ap_channel_done_buf_2d_in_30,
        if_dout => buf_2d_in_30_dout,
        if_num_data_valid => buf_2d_in_30_num_data_valid,
        if_fifo_cap => buf_2d_in_30_fifo_cap,
        if_empty_n => buf_2d_in_30_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_31_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_31,
        if_full_n => buf_2d_in_31_full_n,
        if_write => ap_channel_done_buf_2d_in_31,
        if_dout => buf_2d_in_31_dout,
        if_num_data_valid => buf_2d_in_31_num_data_valid,
        if_fifo_cap => buf_2d_in_31_fifo_cap,
        if_empty_n => buf_2d_in_31_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_32_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_32,
        if_full_n => buf_2d_in_32_full_n,
        if_write => ap_channel_done_buf_2d_in_32,
        if_dout => buf_2d_in_32_dout,
        if_num_data_valid => buf_2d_in_32_num_data_valid,
        if_fifo_cap => buf_2d_in_32_fifo_cap,
        if_empty_n => buf_2d_in_32_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_33_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_33,
        if_full_n => buf_2d_in_33_full_n,
        if_write => ap_channel_done_buf_2d_in_33,
        if_dout => buf_2d_in_33_dout,
        if_num_data_valid => buf_2d_in_33_num_data_valid,
        if_fifo_cap => buf_2d_in_33_fifo_cap,
        if_empty_n => buf_2d_in_33_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_34_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_34,
        if_full_n => buf_2d_in_34_full_n,
        if_write => ap_channel_done_buf_2d_in_34,
        if_dout => buf_2d_in_34_dout,
        if_num_data_valid => buf_2d_in_34_num_data_valid,
        if_fifo_cap => buf_2d_in_34_fifo_cap,
        if_empty_n => buf_2d_in_34_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_35_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_35,
        if_full_n => buf_2d_in_35_full_n,
        if_write => ap_channel_done_buf_2d_in_35,
        if_dout => buf_2d_in_35_dout,
        if_num_data_valid => buf_2d_in_35_num_data_valid,
        if_fifo_cap => buf_2d_in_35_fifo_cap,
        if_empty_n => buf_2d_in_35_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_36_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_36,
        if_full_n => buf_2d_in_36_full_n,
        if_write => ap_channel_done_buf_2d_in_36,
        if_dout => buf_2d_in_36_dout,
        if_num_data_valid => buf_2d_in_36_num_data_valid,
        if_fifo_cap => buf_2d_in_36_fifo_cap,
        if_empty_n => buf_2d_in_36_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_37_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_37,
        if_full_n => buf_2d_in_37_full_n,
        if_write => ap_channel_done_buf_2d_in_37,
        if_dout => buf_2d_in_37_dout,
        if_num_data_valid => buf_2d_in_37_num_data_valid,
        if_fifo_cap => buf_2d_in_37_fifo_cap,
        if_empty_n => buf_2d_in_37_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_38_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_38,
        if_full_n => buf_2d_in_38_full_n,
        if_write => ap_channel_done_buf_2d_in_38,
        if_dout => buf_2d_in_38_dout,
        if_num_data_valid => buf_2d_in_38_num_data_valid,
        if_fifo_cap => buf_2d_in_38_fifo_cap,
        if_empty_n => buf_2d_in_38_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_39_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_39,
        if_full_n => buf_2d_in_39_full_n,
        if_write => ap_channel_done_buf_2d_in_39,
        if_dout => buf_2d_in_39_dout,
        if_num_data_valid => buf_2d_in_39_num_data_valid,
        if_fifo_cap => buf_2d_in_39_fifo_cap,
        if_empty_n => buf_2d_in_39_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_40_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_40,
        if_full_n => buf_2d_in_40_full_n,
        if_write => ap_channel_done_buf_2d_in_40,
        if_dout => buf_2d_in_40_dout,
        if_num_data_valid => buf_2d_in_40_num_data_valid,
        if_fifo_cap => buf_2d_in_40_fifo_cap,
        if_empty_n => buf_2d_in_40_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_41_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_41,
        if_full_n => buf_2d_in_41_full_n,
        if_write => ap_channel_done_buf_2d_in_41,
        if_dout => buf_2d_in_41_dout,
        if_num_data_valid => buf_2d_in_41_num_data_valid,
        if_fifo_cap => buf_2d_in_41_fifo_cap,
        if_empty_n => buf_2d_in_41_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_42_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_42,
        if_full_n => buf_2d_in_42_full_n,
        if_write => ap_channel_done_buf_2d_in_42,
        if_dout => buf_2d_in_42_dout,
        if_num_data_valid => buf_2d_in_42_num_data_valid,
        if_fifo_cap => buf_2d_in_42_fifo_cap,
        if_empty_n => buf_2d_in_42_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_43_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_43,
        if_full_n => buf_2d_in_43_full_n,
        if_write => ap_channel_done_buf_2d_in_43,
        if_dout => buf_2d_in_43_dout,
        if_num_data_valid => buf_2d_in_43_num_data_valid,
        if_fifo_cap => buf_2d_in_43_fifo_cap,
        if_empty_n => buf_2d_in_43_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_44_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_44,
        if_full_n => buf_2d_in_44_full_n,
        if_write => ap_channel_done_buf_2d_in_44,
        if_dout => buf_2d_in_44_dout,
        if_num_data_valid => buf_2d_in_44_num_data_valid,
        if_fifo_cap => buf_2d_in_44_fifo_cap,
        if_empty_n => buf_2d_in_44_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_45_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_45,
        if_full_n => buf_2d_in_45_full_n,
        if_write => ap_channel_done_buf_2d_in_45,
        if_dout => buf_2d_in_45_dout,
        if_num_data_valid => buf_2d_in_45_num_data_valid,
        if_fifo_cap => buf_2d_in_45_fifo_cap,
        if_empty_n => buf_2d_in_45_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_46_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_46,
        if_full_n => buf_2d_in_46_full_n,
        if_write => ap_channel_done_buf_2d_in_46,
        if_dout => buf_2d_in_46_dout,
        if_num_data_valid => buf_2d_in_46_num_data_valid,
        if_fifo_cap => buf_2d_in_46_fifo_cap,
        if_empty_n => buf_2d_in_46_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_47_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_47,
        if_full_n => buf_2d_in_47_full_n,
        if_write => ap_channel_done_buf_2d_in_47,
        if_dout => buf_2d_in_47_dout,
        if_num_data_valid => buf_2d_in_47_num_data_valid,
        if_fifo_cap => buf_2d_in_47_fifo_cap,
        if_empty_n => buf_2d_in_47_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_48_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_48,
        if_full_n => buf_2d_in_48_full_n,
        if_write => ap_channel_done_buf_2d_in_48,
        if_dout => buf_2d_in_48_dout,
        if_num_data_valid => buf_2d_in_48_num_data_valid,
        if_fifo_cap => buf_2d_in_48_fifo_cap,
        if_empty_n => buf_2d_in_48_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_49_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_49,
        if_full_n => buf_2d_in_49_full_n,
        if_write => ap_channel_done_buf_2d_in_49,
        if_dout => buf_2d_in_49_dout,
        if_num_data_valid => buf_2d_in_49_num_data_valid,
        if_fifo_cap => buf_2d_in_49_fifo_cap,
        if_empty_n => buf_2d_in_49_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_50_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_50,
        if_full_n => buf_2d_in_50_full_n,
        if_write => ap_channel_done_buf_2d_in_50,
        if_dout => buf_2d_in_50_dout,
        if_num_data_valid => buf_2d_in_50_num_data_valid,
        if_fifo_cap => buf_2d_in_50_fifo_cap,
        if_empty_n => buf_2d_in_50_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_51_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_51,
        if_full_n => buf_2d_in_51_full_n,
        if_write => ap_channel_done_buf_2d_in_51,
        if_dout => buf_2d_in_51_dout,
        if_num_data_valid => buf_2d_in_51_num_data_valid,
        if_fifo_cap => buf_2d_in_51_fifo_cap,
        if_empty_n => buf_2d_in_51_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_52_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_52,
        if_full_n => buf_2d_in_52_full_n,
        if_write => ap_channel_done_buf_2d_in_52,
        if_dout => buf_2d_in_52_dout,
        if_num_data_valid => buf_2d_in_52_num_data_valid,
        if_fifo_cap => buf_2d_in_52_fifo_cap,
        if_empty_n => buf_2d_in_52_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_53_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_53,
        if_full_n => buf_2d_in_53_full_n,
        if_write => ap_channel_done_buf_2d_in_53,
        if_dout => buf_2d_in_53_dout,
        if_num_data_valid => buf_2d_in_53_num_data_valid,
        if_fifo_cap => buf_2d_in_53_fifo_cap,
        if_empty_n => buf_2d_in_53_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_54_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_54,
        if_full_n => buf_2d_in_54_full_n,
        if_write => ap_channel_done_buf_2d_in_54,
        if_dout => buf_2d_in_54_dout,
        if_num_data_valid => buf_2d_in_54_num_data_valid,
        if_fifo_cap => buf_2d_in_54_fifo_cap,
        if_empty_n => buf_2d_in_54_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_55_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_55,
        if_full_n => buf_2d_in_55_full_n,
        if_write => ap_channel_done_buf_2d_in_55,
        if_dout => buf_2d_in_55_dout,
        if_num_data_valid => buf_2d_in_55_num_data_valid,
        if_fifo_cap => buf_2d_in_55_fifo_cap,
        if_empty_n => buf_2d_in_55_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_56_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_56,
        if_full_n => buf_2d_in_56_full_n,
        if_write => ap_channel_done_buf_2d_in_56,
        if_dout => buf_2d_in_56_dout,
        if_num_data_valid => buf_2d_in_56_num_data_valid,
        if_fifo_cap => buf_2d_in_56_fifo_cap,
        if_empty_n => buf_2d_in_56_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_57_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_57,
        if_full_n => buf_2d_in_57_full_n,
        if_write => ap_channel_done_buf_2d_in_57,
        if_dout => buf_2d_in_57_dout,
        if_num_data_valid => buf_2d_in_57_num_data_valid,
        if_fifo_cap => buf_2d_in_57_fifo_cap,
        if_empty_n => buf_2d_in_57_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_58_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_58,
        if_full_n => buf_2d_in_58_full_n,
        if_write => ap_channel_done_buf_2d_in_58,
        if_dout => buf_2d_in_58_dout,
        if_num_data_valid => buf_2d_in_58_num_data_valid,
        if_fifo_cap => buf_2d_in_58_fifo_cap,
        if_empty_n => buf_2d_in_58_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_59_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_59,
        if_full_n => buf_2d_in_59_full_n,
        if_write => ap_channel_done_buf_2d_in_59,
        if_dout => buf_2d_in_59_dout,
        if_num_data_valid => buf_2d_in_59_num_data_valid,
        if_fifo_cap => buf_2d_in_59_fifo_cap,
        if_empty_n => buf_2d_in_59_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_60_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_60,
        if_full_n => buf_2d_in_60_full_n,
        if_write => ap_channel_done_buf_2d_in_60,
        if_dout => buf_2d_in_60_dout,
        if_num_data_valid => buf_2d_in_60_num_data_valid,
        if_fifo_cap => buf_2d_in_60_fifo_cap,
        if_empty_n => buf_2d_in_60_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_61_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_61,
        if_full_n => buf_2d_in_61_full_n,
        if_write => ap_channel_done_buf_2d_in_61,
        if_dout => buf_2d_in_61_dout,
        if_num_data_valid => buf_2d_in_61_num_data_valid,
        if_fifo_cap => buf_2d_in_61_fifo_cap,
        if_empty_n => buf_2d_in_61_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_62_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_62,
        if_full_n => buf_2d_in_62_full_n,
        if_write => ap_channel_done_buf_2d_in_62,
        if_dout => buf_2d_in_62_dout,
        if_num_data_valid => buf_2d_in_62_num_data_valid,
        if_fifo_cap => buf_2d_in_62_fifo_cap,
        if_empty_n => buf_2d_in_62_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_in_63_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_data_U0_ap_return_63,
        if_full_n => buf_2d_in_63_full_n,
        if_write => ap_channel_done_buf_2d_in_63,
        if_dout => buf_2d_in_63_dout,
        if_num_data_valid => buf_2d_in_63_num_data_valid,
        if_fifo_cap => buf_2d_in_63_fifo_cap,
        if_empty_n => buf_2d_in_63_empty_n,
        if_read => dct_2d_U0_ap_ready);

    buf_2d_out_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_0,
        if_full_n => buf_2d_out_full_n,
        if_write => ap_channel_done_buf_2d_out,
        if_dout => buf_2d_out_dout,
        if_num_data_valid => buf_2d_out_num_data_valid,
        if_fifo_cap => buf_2d_out_fifo_cap,
        if_empty_n => buf_2d_out_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_1_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_1,
        if_full_n => buf_2d_out_1_full_n,
        if_write => ap_channel_done_buf_2d_out_1,
        if_dout => buf_2d_out_1_dout,
        if_num_data_valid => buf_2d_out_1_num_data_valid,
        if_fifo_cap => buf_2d_out_1_fifo_cap,
        if_empty_n => buf_2d_out_1_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_2_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_2,
        if_full_n => buf_2d_out_2_full_n,
        if_write => ap_channel_done_buf_2d_out_2,
        if_dout => buf_2d_out_2_dout,
        if_num_data_valid => buf_2d_out_2_num_data_valid,
        if_fifo_cap => buf_2d_out_2_fifo_cap,
        if_empty_n => buf_2d_out_2_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_3_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_3,
        if_full_n => buf_2d_out_3_full_n,
        if_write => ap_channel_done_buf_2d_out_3,
        if_dout => buf_2d_out_3_dout,
        if_num_data_valid => buf_2d_out_3_num_data_valid,
        if_fifo_cap => buf_2d_out_3_fifo_cap,
        if_empty_n => buf_2d_out_3_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_4_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_4,
        if_full_n => buf_2d_out_4_full_n,
        if_write => ap_channel_done_buf_2d_out_4,
        if_dout => buf_2d_out_4_dout,
        if_num_data_valid => buf_2d_out_4_num_data_valid,
        if_fifo_cap => buf_2d_out_4_fifo_cap,
        if_empty_n => buf_2d_out_4_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_5_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_5,
        if_full_n => buf_2d_out_5_full_n,
        if_write => ap_channel_done_buf_2d_out_5,
        if_dout => buf_2d_out_5_dout,
        if_num_data_valid => buf_2d_out_5_num_data_valid,
        if_fifo_cap => buf_2d_out_5_fifo_cap,
        if_empty_n => buf_2d_out_5_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_6_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_6,
        if_full_n => buf_2d_out_6_full_n,
        if_write => ap_channel_done_buf_2d_out_6,
        if_dout => buf_2d_out_6_dout,
        if_num_data_valid => buf_2d_out_6_num_data_valid,
        if_fifo_cap => buf_2d_out_6_fifo_cap,
        if_empty_n => buf_2d_out_6_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_7_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_7,
        if_full_n => buf_2d_out_7_full_n,
        if_write => ap_channel_done_buf_2d_out_7,
        if_dout => buf_2d_out_7_dout,
        if_num_data_valid => buf_2d_out_7_num_data_valid,
        if_fifo_cap => buf_2d_out_7_fifo_cap,
        if_empty_n => buf_2d_out_7_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_8_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_8,
        if_full_n => buf_2d_out_8_full_n,
        if_write => ap_channel_done_buf_2d_out_8,
        if_dout => buf_2d_out_8_dout,
        if_num_data_valid => buf_2d_out_8_num_data_valid,
        if_fifo_cap => buf_2d_out_8_fifo_cap,
        if_empty_n => buf_2d_out_8_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_9_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_9,
        if_full_n => buf_2d_out_9_full_n,
        if_write => ap_channel_done_buf_2d_out_9,
        if_dout => buf_2d_out_9_dout,
        if_num_data_valid => buf_2d_out_9_num_data_valid,
        if_fifo_cap => buf_2d_out_9_fifo_cap,
        if_empty_n => buf_2d_out_9_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_10_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_10,
        if_full_n => buf_2d_out_10_full_n,
        if_write => ap_channel_done_buf_2d_out_10,
        if_dout => buf_2d_out_10_dout,
        if_num_data_valid => buf_2d_out_10_num_data_valid,
        if_fifo_cap => buf_2d_out_10_fifo_cap,
        if_empty_n => buf_2d_out_10_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_11_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_11,
        if_full_n => buf_2d_out_11_full_n,
        if_write => ap_channel_done_buf_2d_out_11,
        if_dout => buf_2d_out_11_dout,
        if_num_data_valid => buf_2d_out_11_num_data_valid,
        if_fifo_cap => buf_2d_out_11_fifo_cap,
        if_empty_n => buf_2d_out_11_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_12_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_12,
        if_full_n => buf_2d_out_12_full_n,
        if_write => ap_channel_done_buf_2d_out_12,
        if_dout => buf_2d_out_12_dout,
        if_num_data_valid => buf_2d_out_12_num_data_valid,
        if_fifo_cap => buf_2d_out_12_fifo_cap,
        if_empty_n => buf_2d_out_12_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_13_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_13,
        if_full_n => buf_2d_out_13_full_n,
        if_write => ap_channel_done_buf_2d_out_13,
        if_dout => buf_2d_out_13_dout,
        if_num_data_valid => buf_2d_out_13_num_data_valid,
        if_fifo_cap => buf_2d_out_13_fifo_cap,
        if_empty_n => buf_2d_out_13_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_14_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_14,
        if_full_n => buf_2d_out_14_full_n,
        if_write => ap_channel_done_buf_2d_out_14,
        if_dout => buf_2d_out_14_dout,
        if_num_data_valid => buf_2d_out_14_num_data_valid,
        if_fifo_cap => buf_2d_out_14_fifo_cap,
        if_empty_n => buf_2d_out_14_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_15_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_15,
        if_full_n => buf_2d_out_15_full_n,
        if_write => ap_channel_done_buf_2d_out_15,
        if_dout => buf_2d_out_15_dout,
        if_num_data_valid => buf_2d_out_15_num_data_valid,
        if_fifo_cap => buf_2d_out_15_fifo_cap,
        if_empty_n => buf_2d_out_15_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_16_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_16,
        if_full_n => buf_2d_out_16_full_n,
        if_write => ap_channel_done_buf_2d_out_16,
        if_dout => buf_2d_out_16_dout,
        if_num_data_valid => buf_2d_out_16_num_data_valid,
        if_fifo_cap => buf_2d_out_16_fifo_cap,
        if_empty_n => buf_2d_out_16_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_17_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_17,
        if_full_n => buf_2d_out_17_full_n,
        if_write => ap_channel_done_buf_2d_out_17,
        if_dout => buf_2d_out_17_dout,
        if_num_data_valid => buf_2d_out_17_num_data_valid,
        if_fifo_cap => buf_2d_out_17_fifo_cap,
        if_empty_n => buf_2d_out_17_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_18_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_18,
        if_full_n => buf_2d_out_18_full_n,
        if_write => ap_channel_done_buf_2d_out_18,
        if_dout => buf_2d_out_18_dout,
        if_num_data_valid => buf_2d_out_18_num_data_valid,
        if_fifo_cap => buf_2d_out_18_fifo_cap,
        if_empty_n => buf_2d_out_18_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_19_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_19,
        if_full_n => buf_2d_out_19_full_n,
        if_write => ap_channel_done_buf_2d_out_19,
        if_dout => buf_2d_out_19_dout,
        if_num_data_valid => buf_2d_out_19_num_data_valid,
        if_fifo_cap => buf_2d_out_19_fifo_cap,
        if_empty_n => buf_2d_out_19_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_20_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_20,
        if_full_n => buf_2d_out_20_full_n,
        if_write => ap_channel_done_buf_2d_out_20,
        if_dout => buf_2d_out_20_dout,
        if_num_data_valid => buf_2d_out_20_num_data_valid,
        if_fifo_cap => buf_2d_out_20_fifo_cap,
        if_empty_n => buf_2d_out_20_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_21_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_21,
        if_full_n => buf_2d_out_21_full_n,
        if_write => ap_channel_done_buf_2d_out_21,
        if_dout => buf_2d_out_21_dout,
        if_num_data_valid => buf_2d_out_21_num_data_valid,
        if_fifo_cap => buf_2d_out_21_fifo_cap,
        if_empty_n => buf_2d_out_21_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_22_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_22,
        if_full_n => buf_2d_out_22_full_n,
        if_write => ap_channel_done_buf_2d_out_22,
        if_dout => buf_2d_out_22_dout,
        if_num_data_valid => buf_2d_out_22_num_data_valid,
        if_fifo_cap => buf_2d_out_22_fifo_cap,
        if_empty_n => buf_2d_out_22_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_23_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_23,
        if_full_n => buf_2d_out_23_full_n,
        if_write => ap_channel_done_buf_2d_out_23,
        if_dout => buf_2d_out_23_dout,
        if_num_data_valid => buf_2d_out_23_num_data_valid,
        if_fifo_cap => buf_2d_out_23_fifo_cap,
        if_empty_n => buf_2d_out_23_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_24_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_24,
        if_full_n => buf_2d_out_24_full_n,
        if_write => ap_channel_done_buf_2d_out_24,
        if_dout => buf_2d_out_24_dout,
        if_num_data_valid => buf_2d_out_24_num_data_valid,
        if_fifo_cap => buf_2d_out_24_fifo_cap,
        if_empty_n => buf_2d_out_24_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_25_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_25,
        if_full_n => buf_2d_out_25_full_n,
        if_write => ap_channel_done_buf_2d_out_25,
        if_dout => buf_2d_out_25_dout,
        if_num_data_valid => buf_2d_out_25_num_data_valid,
        if_fifo_cap => buf_2d_out_25_fifo_cap,
        if_empty_n => buf_2d_out_25_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_26_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_26,
        if_full_n => buf_2d_out_26_full_n,
        if_write => ap_channel_done_buf_2d_out_26,
        if_dout => buf_2d_out_26_dout,
        if_num_data_valid => buf_2d_out_26_num_data_valid,
        if_fifo_cap => buf_2d_out_26_fifo_cap,
        if_empty_n => buf_2d_out_26_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_27_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_27,
        if_full_n => buf_2d_out_27_full_n,
        if_write => ap_channel_done_buf_2d_out_27,
        if_dout => buf_2d_out_27_dout,
        if_num_data_valid => buf_2d_out_27_num_data_valid,
        if_fifo_cap => buf_2d_out_27_fifo_cap,
        if_empty_n => buf_2d_out_27_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_28_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_28,
        if_full_n => buf_2d_out_28_full_n,
        if_write => ap_channel_done_buf_2d_out_28,
        if_dout => buf_2d_out_28_dout,
        if_num_data_valid => buf_2d_out_28_num_data_valid,
        if_fifo_cap => buf_2d_out_28_fifo_cap,
        if_empty_n => buf_2d_out_28_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_29_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_29,
        if_full_n => buf_2d_out_29_full_n,
        if_write => ap_channel_done_buf_2d_out_29,
        if_dout => buf_2d_out_29_dout,
        if_num_data_valid => buf_2d_out_29_num_data_valid,
        if_fifo_cap => buf_2d_out_29_fifo_cap,
        if_empty_n => buf_2d_out_29_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_30_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_30,
        if_full_n => buf_2d_out_30_full_n,
        if_write => ap_channel_done_buf_2d_out_30,
        if_dout => buf_2d_out_30_dout,
        if_num_data_valid => buf_2d_out_30_num_data_valid,
        if_fifo_cap => buf_2d_out_30_fifo_cap,
        if_empty_n => buf_2d_out_30_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_31_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_31,
        if_full_n => buf_2d_out_31_full_n,
        if_write => ap_channel_done_buf_2d_out_31,
        if_dout => buf_2d_out_31_dout,
        if_num_data_valid => buf_2d_out_31_num_data_valid,
        if_fifo_cap => buf_2d_out_31_fifo_cap,
        if_empty_n => buf_2d_out_31_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_32_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_32,
        if_full_n => buf_2d_out_32_full_n,
        if_write => ap_channel_done_buf_2d_out_32,
        if_dout => buf_2d_out_32_dout,
        if_num_data_valid => buf_2d_out_32_num_data_valid,
        if_fifo_cap => buf_2d_out_32_fifo_cap,
        if_empty_n => buf_2d_out_32_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_33_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_33,
        if_full_n => buf_2d_out_33_full_n,
        if_write => ap_channel_done_buf_2d_out_33,
        if_dout => buf_2d_out_33_dout,
        if_num_data_valid => buf_2d_out_33_num_data_valid,
        if_fifo_cap => buf_2d_out_33_fifo_cap,
        if_empty_n => buf_2d_out_33_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_34_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_34,
        if_full_n => buf_2d_out_34_full_n,
        if_write => ap_channel_done_buf_2d_out_34,
        if_dout => buf_2d_out_34_dout,
        if_num_data_valid => buf_2d_out_34_num_data_valid,
        if_fifo_cap => buf_2d_out_34_fifo_cap,
        if_empty_n => buf_2d_out_34_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_35_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_35,
        if_full_n => buf_2d_out_35_full_n,
        if_write => ap_channel_done_buf_2d_out_35,
        if_dout => buf_2d_out_35_dout,
        if_num_data_valid => buf_2d_out_35_num_data_valid,
        if_fifo_cap => buf_2d_out_35_fifo_cap,
        if_empty_n => buf_2d_out_35_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_36_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_36,
        if_full_n => buf_2d_out_36_full_n,
        if_write => ap_channel_done_buf_2d_out_36,
        if_dout => buf_2d_out_36_dout,
        if_num_data_valid => buf_2d_out_36_num_data_valid,
        if_fifo_cap => buf_2d_out_36_fifo_cap,
        if_empty_n => buf_2d_out_36_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_37_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_37,
        if_full_n => buf_2d_out_37_full_n,
        if_write => ap_channel_done_buf_2d_out_37,
        if_dout => buf_2d_out_37_dout,
        if_num_data_valid => buf_2d_out_37_num_data_valid,
        if_fifo_cap => buf_2d_out_37_fifo_cap,
        if_empty_n => buf_2d_out_37_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_38_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_38,
        if_full_n => buf_2d_out_38_full_n,
        if_write => ap_channel_done_buf_2d_out_38,
        if_dout => buf_2d_out_38_dout,
        if_num_data_valid => buf_2d_out_38_num_data_valid,
        if_fifo_cap => buf_2d_out_38_fifo_cap,
        if_empty_n => buf_2d_out_38_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_39_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_39,
        if_full_n => buf_2d_out_39_full_n,
        if_write => ap_channel_done_buf_2d_out_39,
        if_dout => buf_2d_out_39_dout,
        if_num_data_valid => buf_2d_out_39_num_data_valid,
        if_fifo_cap => buf_2d_out_39_fifo_cap,
        if_empty_n => buf_2d_out_39_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_40_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_40,
        if_full_n => buf_2d_out_40_full_n,
        if_write => ap_channel_done_buf_2d_out_40,
        if_dout => buf_2d_out_40_dout,
        if_num_data_valid => buf_2d_out_40_num_data_valid,
        if_fifo_cap => buf_2d_out_40_fifo_cap,
        if_empty_n => buf_2d_out_40_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_41_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_41,
        if_full_n => buf_2d_out_41_full_n,
        if_write => ap_channel_done_buf_2d_out_41,
        if_dout => buf_2d_out_41_dout,
        if_num_data_valid => buf_2d_out_41_num_data_valid,
        if_fifo_cap => buf_2d_out_41_fifo_cap,
        if_empty_n => buf_2d_out_41_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_42_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_42,
        if_full_n => buf_2d_out_42_full_n,
        if_write => ap_channel_done_buf_2d_out_42,
        if_dout => buf_2d_out_42_dout,
        if_num_data_valid => buf_2d_out_42_num_data_valid,
        if_fifo_cap => buf_2d_out_42_fifo_cap,
        if_empty_n => buf_2d_out_42_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_43_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_43,
        if_full_n => buf_2d_out_43_full_n,
        if_write => ap_channel_done_buf_2d_out_43,
        if_dout => buf_2d_out_43_dout,
        if_num_data_valid => buf_2d_out_43_num_data_valid,
        if_fifo_cap => buf_2d_out_43_fifo_cap,
        if_empty_n => buf_2d_out_43_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_44_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_44,
        if_full_n => buf_2d_out_44_full_n,
        if_write => ap_channel_done_buf_2d_out_44,
        if_dout => buf_2d_out_44_dout,
        if_num_data_valid => buf_2d_out_44_num_data_valid,
        if_fifo_cap => buf_2d_out_44_fifo_cap,
        if_empty_n => buf_2d_out_44_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_45_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_45,
        if_full_n => buf_2d_out_45_full_n,
        if_write => ap_channel_done_buf_2d_out_45,
        if_dout => buf_2d_out_45_dout,
        if_num_data_valid => buf_2d_out_45_num_data_valid,
        if_fifo_cap => buf_2d_out_45_fifo_cap,
        if_empty_n => buf_2d_out_45_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_46_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_46,
        if_full_n => buf_2d_out_46_full_n,
        if_write => ap_channel_done_buf_2d_out_46,
        if_dout => buf_2d_out_46_dout,
        if_num_data_valid => buf_2d_out_46_num_data_valid,
        if_fifo_cap => buf_2d_out_46_fifo_cap,
        if_empty_n => buf_2d_out_46_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_47_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_47,
        if_full_n => buf_2d_out_47_full_n,
        if_write => ap_channel_done_buf_2d_out_47,
        if_dout => buf_2d_out_47_dout,
        if_num_data_valid => buf_2d_out_47_num_data_valid,
        if_fifo_cap => buf_2d_out_47_fifo_cap,
        if_empty_n => buf_2d_out_47_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_48_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_48,
        if_full_n => buf_2d_out_48_full_n,
        if_write => ap_channel_done_buf_2d_out_48,
        if_dout => buf_2d_out_48_dout,
        if_num_data_valid => buf_2d_out_48_num_data_valid,
        if_fifo_cap => buf_2d_out_48_fifo_cap,
        if_empty_n => buf_2d_out_48_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_49_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_49,
        if_full_n => buf_2d_out_49_full_n,
        if_write => ap_channel_done_buf_2d_out_49,
        if_dout => buf_2d_out_49_dout,
        if_num_data_valid => buf_2d_out_49_num_data_valid,
        if_fifo_cap => buf_2d_out_49_fifo_cap,
        if_empty_n => buf_2d_out_49_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_50_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_50,
        if_full_n => buf_2d_out_50_full_n,
        if_write => ap_channel_done_buf_2d_out_50,
        if_dout => buf_2d_out_50_dout,
        if_num_data_valid => buf_2d_out_50_num_data_valid,
        if_fifo_cap => buf_2d_out_50_fifo_cap,
        if_empty_n => buf_2d_out_50_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_51_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_51,
        if_full_n => buf_2d_out_51_full_n,
        if_write => ap_channel_done_buf_2d_out_51,
        if_dout => buf_2d_out_51_dout,
        if_num_data_valid => buf_2d_out_51_num_data_valid,
        if_fifo_cap => buf_2d_out_51_fifo_cap,
        if_empty_n => buf_2d_out_51_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_52_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_52,
        if_full_n => buf_2d_out_52_full_n,
        if_write => ap_channel_done_buf_2d_out_52,
        if_dout => buf_2d_out_52_dout,
        if_num_data_valid => buf_2d_out_52_num_data_valid,
        if_fifo_cap => buf_2d_out_52_fifo_cap,
        if_empty_n => buf_2d_out_52_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_53_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_53,
        if_full_n => buf_2d_out_53_full_n,
        if_write => ap_channel_done_buf_2d_out_53,
        if_dout => buf_2d_out_53_dout,
        if_num_data_valid => buf_2d_out_53_num_data_valid,
        if_fifo_cap => buf_2d_out_53_fifo_cap,
        if_empty_n => buf_2d_out_53_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_54_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_54,
        if_full_n => buf_2d_out_54_full_n,
        if_write => ap_channel_done_buf_2d_out_54,
        if_dout => buf_2d_out_54_dout,
        if_num_data_valid => buf_2d_out_54_num_data_valid,
        if_fifo_cap => buf_2d_out_54_fifo_cap,
        if_empty_n => buf_2d_out_54_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_55_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_55,
        if_full_n => buf_2d_out_55_full_n,
        if_write => ap_channel_done_buf_2d_out_55,
        if_dout => buf_2d_out_55_dout,
        if_num_data_valid => buf_2d_out_55_num_data_valid,
        if_fifo_cap => buf_2d_out_55_fifo_cap,
        if_empty_n => buf_2d_out_55_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_56_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_56,
        if_full_n => buf_2d_out_56_full_n,
        if_write => ap_channel_done_buf_2d_out_56,
        if_dout => buf_2d_out_56_dout,
        if_num_data_valid => buf_2d_out_56_num_data_valid,
        if_fifo_cap => buf_2d_out_56_fifo_cap,
        if_empty_n => buf_2d_out_56_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_57_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_57,
        if_full_n => buf_2d_out_57_full_n,
        if_write => ap_channel_done_buf_2d_out_57,
        if_dout => buf_2d_out_57_dout,
        if_num_data_valid => buf_2d_out_57_num_data_valid,
        if_fifo_cap => buf_2d_out_57_fifo_cap,
        if_empty_n => buf_2d_out_57_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_58_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_58,
        if_full_n => buf_2d_out_58_full_n,
        if_write => ap_channel_done_buf_2d_out_58,
        if_dout => buf_2d_out_58_dout,
        if_num_data_valid => buf_2d_out_58_num_data_valid,
        if_fifo_cap => buf_2d_out_58_fifo_cap,
        if_empty_n => buf_2d_out_58_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_59_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_59,
        if_full_n => buf_2d_out_59_full_n,
        if_write => ap_channel_done_buf_2d_out_59,
        if_dout => buf_2d_out_59_dout,
        if_num_data_valid => buf_2d_out_59_num_data_valid,
        if_fifo_cap => buf_2d_out_59_fifo_cap,
        if_empty_n => buf_2d_out_59_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_60_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_60,
        if_full_n => buf_2d_out_60_full_n,
        if_write => ap_channel_done_buf_2d_out_60,
        if_dout => buf_2d_out_60_dout,
        if_num_data_valid => buf_2d_out_60_num_data_valid,
        if_fifo_cap => buf_2d_out_60_fifo_cap,
        if_empty_n => buf_2d_out_60_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_61_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_61,
        if_full_n => buf_2d_out_61_full_n,
        if_write => ap_channel_done_buf_2d_out_61,
        if_dout => buf_2d_out_61_dout,
        if_num_data_valid => buf_2d_out_61_num_data_valid,
        if_fifo_cap => buf_2d_out_61_fifo_cap,
        if_empty_n => buf_2d_out_61_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_62_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_62,
        if_full_n => buf_2d_out_62_full_n,
        if_write => ap_channel_done_buf_2d_out_62,
        if_dout => buf_2d_out_62_dout,
        if_num_data_valid => buf_2d_out_62_num_data_valid,
        if_fifo_cap => buf_2d_out_62_fifo_cap,
        if_empty_n => buf_2d_out_62_empty_n,
        if_read => write_data_U0_ap_ready);

    buf_2d_out_63_U : component dct_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dct_2d_U0_ap_return_63,
        if_full_n => buf_2d_out_63_full_n,
        if_write => ap_channel_done_buf_2d_out_63,
        if_dout => buf_2d_out_63_dout,
        if_num_data_valid => buf_2d_out_63_num_data_valid,
        if_fifo_cap => buf_2d_out_63_fifo_cap,
        if_empty_n => buf_2d_out_63_empty_n,
        if_read => write_data_U0_ap_ready);





    ap_sync_reg_channel_write_buf_2d_in_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in <= ap_sync_channel_write_buf_2d_in;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_1 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_1 <= ap_sync_channel_write_buf_2d_in_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_10 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_10 <= ap_sync_channel_write_buf_2d_in_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_11 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_11 <= ap_sync_channel_write_buf_2d_in_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_12 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_12 <= ap_sync_channel_write_buf_2d_in_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_13 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_13 <= ap_sync_channel_write_buf_2d_in_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_14 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_14 <= ap_sync_channel_write_buf_2d_in_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_15 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_15 <= ap_sync_channel_write_buf_2d_in_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_16 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_16 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_16 <= ap_sync_channel_write_buf_2d_in_16;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_17 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_17 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_17 <= ap_sync_channel_write_buf_2d_in_17;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_18 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_18 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_18 <= ap_sync_channel_write_buf_2d_in_18;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_19 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_19 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_19 <= ap_sync_channel_write_buf_2d_in_19;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_2 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_2 <= ap_sync_channel_write_buf_2d_in_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_20 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_20 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_20 <= ap_sync_channel_write_buf_2d_in_20;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_21 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_21 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_21 <= ap_sync_channel_write_buf_2d_in_21;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_22 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_22 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_22 <= ap_sync_channel_write_buf_2d_in_22;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_23 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_23 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_23 <= ap_sync_channel_write_buf_2d_in_23;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_24 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_24 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_24 <= ap_sync_channel_write_buf_2d_in_24;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_25 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_25 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_25 <= ap_sync_channel_write_buf_2d_in_25;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_26 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_26 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_26 <= ap_sync_channel_write_buf_2d_in_26;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_27 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_27 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_27 <= ap_sync_channel_write_buf_2d_in_27;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_28 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_28 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_28 <= ap_sync_channel_write_buf_2d_in_28;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_29 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_29 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_29 <= ap_sync_channel_write_buf_2d_in_29;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_3 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_3 <= ap_sync_channel_write_buf_2d_in_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_30 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_30 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_30 <= ap_sync_channel_write_buf_2d_in_30;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_31 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_31 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_31 <= ap_sync_channel_write_buf_2d_in_31;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_32 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_32 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_32 <= ap_sync_channel_write_buf_2d_in_32;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_33 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_33 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_33 <= ap_sync_channel_write_buf_2d_in_33;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_34 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_34 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_34 <= ap_sync_channel_write_buf_2d_in_34;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_35 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_35 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_35 <= ap_sync_channel_write_buf_2d_in_35;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_36 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_36 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_36 <= ap_sync_channel_write_buf_2d_in_36;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_37 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_37 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_37 <= ap_sync_channel_write_buf_2d_in_37;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_38_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_38 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_38 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_38 <= ap_sync_channel_write_buf_2d_in_38;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_39_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_39 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_39 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_39 <= ap_sync_channel_write_buf_2d_in_39;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_4 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_4 <= ap_sync_channel_write_buf_2d_in_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_40_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_40 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_40 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_40 <= ap_sync_channel_write_buf_2d_in_40;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_41_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_41 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_41 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_41 <= ap_sync_channel_write_buf_2d_in_41;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_42_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_42 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_42 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_42 <= ap_sync_channel_write_buf_2d_in_42;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_43_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_43 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_43 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_43 <= ap_sync_channel_write_buf_2d_in_43;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_44_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_44 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_44 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_44 <= ap_sync_channel_write_buf_2d_in_44;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_45_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_45 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_45 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_45 <= ap_sync_channel_write_buf_2d_in_45;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_46_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_46 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_46 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_46 <= ap_sync_channel_write_buf_2d_in_46;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_47_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_47 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_47 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_47 <= ap_sync_channel_write_buf_2d_in_47;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_48_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_48 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_48 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_48 <= ap_sync_channel_write_buf_2d_in_48;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_49_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_49 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_49 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_49 <= ap_sync_channel_write_buf_2d_in_49;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_5 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_5 <= ap_sync_channel_write_buf_2d_in_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_50_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_50 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_50 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_50 <= ap_sync_channel_write_buf_2d_in_50;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_51_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_51 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_51 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_51 <= ap_sync_channel_write_buf_2d_in_51;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_52_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_52 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_52 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_52 <= ap_sync_channel_write_buf_2d_in_52;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_53_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_53 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_53 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_53 <= ap_sync_channel_write_buf_2d_in_53;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_54_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_54 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_54 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_54 <= ap_sync_channel_write_buf_2d_in_54;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_55_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_55 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_55 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_55 <= ap_sync_channel_write_buf_2d_in_55;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_56_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_56 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_56 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_56 <= ap_sync_channel_write_buf_2d_in_56;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_57_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_57 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_57 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_57 <= ap_sync_channel_write_buf_2d_in_57;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_58_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_58 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_58 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_58 <= ap_sync_channel_write_buf_2d_in_58;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_59_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_59 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_59 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_59 <= ap_sync_channel_write_buf_2d_in_59;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_6 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_6 <= ap_sync_channel_write_buf_2d_in_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_60_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_60 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_60 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_60 <= ap_sync_channel_write_buf_2d_in_60;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_61_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_61 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_61 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_61 <= ap_sync_channel_write_buf_2d_in_61;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_62_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_62 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_62 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_62 <= ap_sync_channel_write_buf_2d_in_62;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_63_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_63 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_63 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_63 <= ap_sync_channel_write_buf_2d_in_63;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_7 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_7 <= ap_sync_channel_write_buf_2d_in_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_8 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_8 <= ap_sync_channel_write_buf_2d_in_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_in_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_in_9 <= ap_const_logic_0;
            else
                if (((read_data_U0_ap_done and read_data_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_in_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_in_9 <= ap_sync_channel_write_buf_2d_in_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out <= ap_sync_channel_write_buf_2d_out;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_1 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_1 <= ap_sync_channel_write_buf_2d_out_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_10 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_10 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_10 <= ap_sync_channel_write_buf_2d_out_10;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_11 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_11 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_11 <= ap_sync_channel_write_buf_2d_out_11;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_12 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_12 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_12 <= ap_sync_channel_write_buf_2d_out_12;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_13 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_13 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_13 <= ap_sync_channel_write_buf_2d_out_13;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_14 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_14 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_14 <= ap_sync_channel_write_buf_2d_out_14;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_15 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_15 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_15 <= ap_sync_channel_write_buf_2d_out_15;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_16 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_16 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_16 <= ap_sync_channel_write_buf_2d_out_16;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_17 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_17 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_17 <= ap_sync_channel_write_buf_2d_out_17;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_18 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_18 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_18 <= ap_sync_channel_write_buf_2d_out_18;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_19 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_19 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_19 <= ap_sync_channel_write_buf_2d_out_19;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_2 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_2 <= ap_sync_channel_write_buf_2d_out_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_20 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_20 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_20 <= ap_sync_channel_write_buf_2d_out_20;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_21 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_21 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_21 <= ap_sync_channel_write_buf_2d_out_21;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_22 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_22 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_22 <= ap_sync_channel_write_buf_2d_out_22;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_23 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_23 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_23 <= ap_sync_channel_write_buf_2d_out_23;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_24 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_24 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_24 <= ap_sync_channel_write_buf_2d_out_24;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_25 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_25 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_25 <= ap_sync_channel_write_buf_2d_out_25;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_26 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_26 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_26 <= ap_sync_channel_write_buf_2d_out_26;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_27 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_27 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_27 <= ap_sync_channel_write_buf_2d_out_27;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_28 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_28 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_28 <= ap_sync_channel_write_buf_2d_out_28;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_29 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_29 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_29 <= ap_sync_channel_write_buf_2d_out_29;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_3 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_3 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_3 <= ap_sync_channel_write_buf_2d_out_3;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_30 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_30 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_30 <= ap_sync_channel_write_buf_2d_out_30;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_31 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_31 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_31 <= ap_sync_channel_write_buf_2d_out_31;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_32 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_32 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_32 <= ap_sync_channel_write_buf_2d_out_32;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_33 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_33 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_33 <= ap_sync_channel_write_buf_2d_out_33;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_34 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_34 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_34 <= ap_sync_channel_write_buf_2d_out_34;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_35 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_35 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_35 <= ap_sync_channel_write_buf_2d_out_35;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_36 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_36 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_36 <= ap_sync_channel_write_buf_2d_out_36;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_37 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_37 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_37 <= ap_sync_channel_write_buf_2d_out_37;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_38_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_38 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_38 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_38 <= ap_sync_channel_write_buf_2d_out_38;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_39_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_39 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_39 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_39 <= ap_sync_channel_write_buf_2d_out_39;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_4 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_4 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_4 <= ap_sync_channel_write_buf_2d_out_4;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_40_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_40 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_40 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_40 <= ap_sync_channel_write_buf_2d_out_40;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_41_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_41 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_41 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_41 <= ap_sync_channel_write_buf_2d_out_41;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_42_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_42 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_42 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_42 <= ap_sync_channel_write_buf_2d_out_42;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_43_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_43 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_43 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_43 <= ap_sync_channel_write_buf_2d_out_43;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_44_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_44 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_44 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_44 <= ap_sync_channel_write_buf_2d_out_44;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_45_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_45 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_45 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_45 <= ap_sync_channel_write_buf_2d_out_45;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_46_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_46 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_46 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_46 <= ap_sync_channel_write_buf_2d_out_46;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_47_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_47 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_47 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_47 <= ap_sync_channel_write_buf_2d_out_47;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_48_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_48 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_48 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_48 <= ap_sync_channel_write_buf_2d_out_48;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_49_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_49 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_49 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_49 <= ap_sync_channel_write_buf_2d_out_49;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_5 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_5 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_5 <= ap_sync_channel_write_buf_2d_out_5;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_50_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_50 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_50 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_50 <= ap_sync_channel_write_buf_2d_out_50;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_51_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_51 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_51 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_51 <= ap_sync_channel_write_buf_2d_out_51;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_52_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_52 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_52 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_52 <= ap_sync_channel_write_buf_2d_out_52;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_53_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_53 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_53 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_53 <= ap_sync_channel_write_buf_2d_out_53;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_54_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_54 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_54 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_54 <= ap_sync_channel_write_buf_2d_out_54;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_55_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_55 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_55 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_55 <= ap_sync_channel_write_buf_2d_out_55;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_56_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_56 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_56 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_56 <= ap_sync_channel_write_buf_2d_out_56;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_57_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_57 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_57 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_57 <= ap_sync_channel_write_buf_2d_out_57;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_58_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_58 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_58 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_58 <= ap_sync_channel_write_buf_2d_out_58;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_59_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_59 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_59 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_59 <= ap_sync_channel_write_buf_2d_out_59;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_6 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_6 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_6 <= ap_sync_channel_write_buf_2d_out_6;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_60_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_60 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_60 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_60 <= ap_sync_channel_write_buf_2d_out_60;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_61_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_61 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_61 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_61 <= ap_sync_channel_write_buf_2d_out_61;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_62_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_62 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_62 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_62 <= ap_sync_channel_write_buf_2d_out_62;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_63_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_63 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_63 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_63 <= ap_sync_channel_write_buf_2d_out_63;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_7 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_7 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_7 <= ap_sync_channel_write_buf_2d_out_7;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_8 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_8 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_8 <= ap_sync_channel_write_buf_2d_out_8;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_buf_2d_out_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_buf_2d_out_9 <= ap_const_logic_0;
            else
                if (((dct_2d_U0_ap_done and dct_2d_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_buf_2d_out_9 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_buf_2d_out_9 <= ap_sync_channel_write_buf_2d_out_9;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_entry_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_entry_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_entry_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_entry_proc_U0_ap_ready <= ap_sync_entry_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_read_data_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_read_data_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_read_data_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_read_data_U0_ap_ready <= ap_sync_read_data_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_rst_n_inv_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_n_inv <= ap_rst_reg_1;
        end if;
    end process;

    ap_rst_reg_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_reg_1 <= ap_rst_reg_2;
        end if;
    end process;

    ap_rst_reg_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
                        ap_rst_reg_2 <= not(ap_rst_n);
        end if;
    end process;
    ap_channel_done_buf_2d_in <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_1 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_1 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_10 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_10 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_11 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_11 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_12 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_12 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_13 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_13 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_14 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_14 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_15 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_15 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_16 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_16 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_17 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_17 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_18 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_18 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_19 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_19 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_2 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_2 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_20 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_20 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_21 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_21 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_22 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_22 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_23 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_23 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_24 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_24 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_25 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_25 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_26 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_26 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_27 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_27 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_28 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_28 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_29 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_29 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_3 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_3 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_30 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_30 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_31 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_31 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_32 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_32 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_33 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_33 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_34 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_34 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_35 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_35 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_36 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_36 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_37 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_37 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_38 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_38 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_39 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_39 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_4 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_4 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_40 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_40 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_41 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_41 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_42 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_42 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_43 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_43 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_44 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_44 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_45 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_45 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_46 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_46 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_47 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_47 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_48 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_48 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_49 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_49 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_5 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_5 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_50 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_50 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_51 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_51 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_52 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_52 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_53 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_53 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_54 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_54 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_55 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_55 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_56 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_56 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_57 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_57 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_58 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_58 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_59 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_59 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_6 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_6 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_60 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_60 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_61 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_61 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_62 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_62 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_63 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_63 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_7 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_7 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_8 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_8 xor ap_const_logic_1));
    ap_channel_done_buf_2d_in_9 <= (read_data_U0_ap_done and (ap_sync_reg_channel_write_buf_2d_in_9 xor ap_const_logic_1));
    ap_channel_done_buf_2d_out <= ((ap_sync_reg_channel_write_buf_2d_out xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_1 <= ((ap_sync_reg_channel_write_buf_2d_out_1 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_10 <= ((ap_sync_reg_channel_write_buf_2d_out_10 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_11 <= ((ap_sync_reg_channel_write_buf_2d_out_11 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_12 <= ((ap_sync_reg_channel_write_buf_2d_out_12 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_13 <= ((ap_sync_reg_channel_write_buf_2d_out_13 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_14 <= ((ap_sync_reg_channel_write_buf_2d_out_14 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_15 <= ((ap_sync_reg_channel_write_buf_2d_out_15 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_16 <= ((ap_sync_reg_channel_write_buf_2d_out_16 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_17 <= ((ap_sync_reg_channel_write_buf_2d_out_17 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_18 <= ((ap_sync_reg_channel_write_buf_2d_out_18 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_19 <= ((ap_sync_reg_channel_write_buf_2d_out_19 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_2 <= ((ap_sync_reg_channel_write_buf_2d_out_2 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_20 <= ((ap_sync_reg_channel_write_buf_2d_out_20 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_21 <= ((ap_sync_reg_channel_write_buf_2d_out_21 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_22 <= ((ap_sync_reg_channel_write_buf_2d_out_22 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_23 <= ((ap_sync_reg_channel_write_buf_2d_out_23 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_24 <= ((ap_sync_reg_channel_write_buf_2d_out_24 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_25 <= ((ap_sync_reg_channel_write_buf_2d_out_25 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_26 <= ((ap_sync_reg_channel_write_buf_2d_out_26 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_27 <= ((ap_sync_reg_channel_write_buf_2d_out_27 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_28 <= ((ap_sync_reg_channel_write_buf_2d_out_28 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_29 <= ((ap_sync_reg_channel_write_buf_2d_out_29 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_3 <= ((ap_sync_reg_channel_write_buf_2d_out_3 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_30 <= ((ap_sync_reg_channel_write_buf_2d_out_30 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_31 <= ((ap_sync_reg_channel_write_buf_2d_out_31 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_32 <= ((ap_sync_reg_channel_write_buf_2d_out_32 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_33 <= ((ap_sync_reg_channel_write_buf_2d_out_33 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_34 <= ((ap_sync_reg_channel_write_buf_2d_out_34 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_35 <= ((ap_sync_reg_channel_write_buf_2d_out_35 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_36 <= ((ap_sync_reg_channel_write_buf_2d_out_36 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_37 <= ((ap_sync_reg_channel_write_buf_2d_out_37 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_38 <= ((ap_sync_reg_channel_write_buf_2d_out_38 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_39 <= ((ap_sync_reg_channel_write_buf_2d_out_39 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_4 <= ((ap_sync_reg_channel_write_buf_2d_out_4 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_40 <= ((ap_sync_reg_channel_write_buf_2d_out_40 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_41 <= ((ap_sync_reg_channel_write_buf_2d_out_41 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_42 <= ((ap_sync_reg_channel_write_buf_2d_out_42 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_43 <= ((ap_sync_reg_channel_write_buf_2d_out_43 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_44 <= ((ap_sync_reg_channel_write_buf_2d_out_44 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_45 <= ((ap_sync_reg_channel_write_buf_2d_out_45 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_46 <= ((ap_sync_reg_channel_write_buf_2d_out_46 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_47 <= ((ap_sync_reg_channel_write_buf_2d_out_47 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_48 <= ((ap_sync_reg_channel_write_buf_2d_out_48 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_49 <= ((ap_sync_reg_channel_write_buf_2d_out_49 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_5 <= ((ap_sync_reg_channel_write_buf_2d_out_5 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_50 <= ((ap_sync_reg_channel_write_buf_2d_out_50 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_51 <= ((ap_sync_reg_channel_write_buf_2d_out_51 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_52 <= ((ap_sync_reg_channel_write_buf_2d_out_52 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_53 <= ((ap_sync_reg_channel_write_buf_2d_out_53 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_54 <= ((ap_sync_reg_channel_write_buf_2d_out_54 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_55 <= ((ap_sync_reg_channel_write_buf_2d_out_55 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_56 <= ((ap_sync_reg_channel_write_buf_2d_out_56 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_57 <= ((ap_sync_reg_channel_write_buf_2d_out_57 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_58 <= ((ap_sync_reg_channel_write_buf_2d_out_58 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_59 <= ((ap_sync_reg_channel_write_buf_2d_out_59 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_6 <= ((ap_sync_reg_channel_write_buf_2d_out_6 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_60 <= ((ap_sync_reg_channel_write_buf_2d_out_60 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_61 <= ((ap_sync_reg_channel_write_buf_2d_out_61 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_62 <= ((ap_sync_reg_channel_write_buf_2d_out_62 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_63 <= ((ap_sync_reg_channel_write_buf_2d_out_63 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_7 <= ((ap_sync_reg_channel_write_buf_2d_out_7 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_8 <= ((ap_sync_reg_channel_write_buf_2d_out_8 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_channel_done_buf_2d_out_9 <= ((ap_sync_reg_channel_write_buf_2d_out_9 xor ap_const_logic_1) and dct_2d_U0_ap_done);
    ap_done <= write_data_U0_ap_done;
    ap_idle <= (write_data_U0_ap_idle and read_data_U0_ap_idle and (buf_2d_out_63_empty_n xor ap_const_logic_1) and (buf_2d_out_62_empty_n xor ap_const_logic_1) and (buf_2d_out_61_empty_n xor ap_const_logic_1) and (buf_2d_out_60_empty_n xor ap_const_logic_1) and (buf_2d_out_59_empty_n xor ap_const_logic_1) and (buf_2d_out_58_empty_n xor ap_const_logic_1) and (buf_2d_out_57_empty_n xor ap_const_logic_1) and (buf_2d_out_56_empty_n xor ap_const_logic_1) and (buf_2d_out_55_empty_n xor ap_const_logic_1) and (buf_2d_out_54_empty_n xor ap_const_logic_1) and (buf_2d_out_53_empty_n xor ap_const_logic_1) and (buf_2d_out_52_empty_n xor ap_const_logic_1) and (buf_2d_out_51_empty_n xor ap_const_logic_1) and (buf_2d_out_50_empty_n xor ap_const_logic_1) and (buf_2d_out_49_empty_n xor ap_const_logic_1) and (buf_2d_out_48_empty_n xor ap_const_logic_1) and (buf_2d_out_47_empty_n xor ap_const_logic_1) and (buf_2d_out_46_empty_n xor ap_const_logic_1) and (buf_2d_out_45_empty_n xor ap_const_logic_1) and (buf_2d_out_44_empty_n xor ap_const_logic_1) and (buf_2d_out_43_empty_n xor ap_const_logic_1) and (buf_2d_out_42_empty_n xor ap_const_logic_1) and (buf_2d_out_41_empty_n xor ap_const_logic_1) and (buf_2d_out_40_empty_n xor ap_const_logic_1) and (buf_2d_out_39_empty_n xor ap_const_logic_1) and (buf_2d_out_38_empty_n xor ap_const_logic_1) and (buf_2d_out_37_empty_n xor ap_const_logic_1) and (buf_2d_out_36_empty_n xor ap_const_logic_1) and (buf_2d_out_35_empty_n xor ap_const_logic_1) and (buf_2d_out_34_empty_n xor ap_const_logic_1) and (buf_2d_out_33_empty_n xor ap_const_logic_1) and (buf_2d_out_32_empty_n xor ap_const_logic_1) and (buf_2d_out_31_empty_n xor ap_const_logic_1) and (buf_2d_out_30_empty_n xor ap_const_logic_1) and (buf_2d_out_29_empty_n xor ap_const_logic_1) and (buf_2d_out_28_empty_n xor ap_const_logic_1) and (buf_2d_out_27_empty_n xor ap_const_logic_1) and (buf_2d_out_26_empty_n xor ap_const_logic_1) and (buf_2d_out_25_empty_n xor ap_const_logic_1) and (buf_2d_out_24_empty_n xor ap_const_logic_1) and (buf_2d_out_23_empty_n xor ap_const_logic_1) and (buf_2d_out_22_empty_n xor ap_const_logic_1) and (buf_2d_out_21_empty_n xor ap_const_logic_1) and (buf_2d_out_20_empty_n xor ap_const_logic_1) and (buf_2d_out_19_empty_n xor ap_const_logic_1) and (buf_2d_out_18_empty_n xor ap_const_logic_1) and (buf_2d_out_17_empty_n xor ap_const_logic_1) and (buf_2d_out_16_empty_n xor ap_const_logic_1) and (buf_2d_out_15_empty_n xor ap_const_logic_1) and (buf_2d_out_14_empty_n xor ap_const_logic_1) and (buf_2d_out_13_empty_n xor ap_const_logic_1) and (buf_2d_out_12_empty_n xor ap_const_logic_1) and (buf_2d_out_11_empty_n xor ap_const_logic_1) and (buf_2d_out_10_empty_n xor ap_const_logic_1) and (buf_2d_out_9_empty_n xor ap_const_logic_1) and (buf_2d_out_8_empty_n xor ap_const_logic_1) and (buf_2d_out_7_empty_n xor ap_const_logic_1) and (buf_2d_out_6_empty_n xor ap_const_logic_1) and (buf_2d_out_5_empty_n xor ap_const_logic_1) and (buf_2d_out_4_empty_n xor ap_const_logic_1) and (buf_2d_out_3_empty_n xor ap_const_logic_1) and (buf_2d_out_2_empty_n xor ap_const_logic_1) and (buf_2d_out_1_empty_n xor ap_const_logic_1) and (buf_2d_out_empty_n xor ap_const_logic_1) and (buf_2d_in_63_empty_n xor ap_const_logic_1) and (buf_2d_in_62_empty_n xor ap_const_logic_1) and (buf_2d_in_61_empty_n xor ap_const_logic_1) and (buf_2d_in_60_empty_n xor ap_const_logic_1) and (buf_2d_in_59_empty_n xor ap_const_logic_1) and (buf_2d_in_58_empty_n xor ap_const_logic_1) and (buf_2d_in_57_empty_n xor ap_const_logic_1) and (buf_2d_in_56_empty_n xor ap_const_logic_1) and (buf_2d_in_55_empty_n xor ap_const_logic_1) and (buf_2d_in_54_empty_n xor ap_const_logic_1) and (buf_2d_in_53_empty_n xor ap_const_logic_1) and (buf_2d_in_52_empty_n xor ap_const_logic_1) and (buf_2d_in_51_empty_n xor ap_const_logic_1) and (buf_2d_in_50_empty_n xor ap_const_logic_1) and (buf_2d_in_49_empty_n xor ap_const_logic_1) and (buf_2d_in_48_empty_n xor ap_const_logic_1) and (buf_2d_in_47_empty_n xor ap_const_logic_1) and (buf_2d_in_46_empty_n xor ap_const_logic_1) and (buf_2d_in_45_empty_n xor ap_const_logic_1) and (buf_2d_in_44_empty_n xor ap_const_logic_1) and (buf_2d_in_43_empty_n xor ap_const_logic_1) and (buf_2d_in_42_empty_n xor ap_const_logic_1) and (buf_2d_in_41_empty_n xor ap_const_logic_1) and (buf_2d_in_40_empty_n xor ap_const_logic_1) and (buf_2d_in_39_empty_n xor ap_const_logic_1) and (buf_2d_in_38_empty_n xor ap_const_logic_1) and (buf_2d_in_37_empty_n xor ap_const_logic_1) and (buf_2d_in_36_empty_n xor ap_const_logic_1) and (buf_2d_in_35_empty_n xor ap_const_logic_1) and (buf_2d_in_34_empty_n xor ap_const_logic_1) and (buf_2d_in_33_empty_n xor ap_const_logic_1) and (buf_2d_in_32_empty_n xor ap_const_logic_1) and (buf_2d_in_31_empty_n xor ap_const_logic_1) and (buf_2d_in_30_empty_n xor ap_const_logic_1) and (buf_2d_in_29_empty_n xor ap_const_logic_1) and (buf_2d_in_28_empty_n xor ap_const_logic_1) and (buf_2d_in_27_empty_n xor ap_const_logic_1) and (buf_2d_in_26_empty_n xor ap_const_logic_1) and (buf_2d_in_25_empty_n xor ap_const_logic_1) and (buf_2d_in_24_empty_n xor ap_const_logic_1) and (buf_2d_in_23_empty_n xor ap_const_logic_1) and (buf_2d_in_22_empty_n xor ap_const_logic_1) and (buf_2d_in_21_empty_n xor ap_const_logic_1) and (buf_2d_in_20_empty_n xor ap_const_logic_1) and (buf_2d_in_19_empty_n xor ap_const_logic_1) and (buf_2d_in_18_empty_n xor ap_const_logic_1) and (buf_2d_in_17_empty_n xor ap_const_logic_1) and (buf_2d_in_16_empty_n xor ap_const_logic_1) and (buf_2d_in_15_empty_n xor ap_const_logic_1) and (buf_2d_in_14_empty_n xor ap_const_logic_1) and (buf_2d_in_13_empty_n xor ap_const_logic_1) and (buf_2d_in_12_empty_n xor ap_const_logic_1) and (buf_2d_in_11_empty_n xor ap_const_logic_1) and (buf_2d_in_10_empty_n xor ap_const_logic_1) and (buf_2d_in_9_empty_n xor ap_const_logic_1) and (buf_2d_in_8_empty_n xor ap_const_logic_1) and (buf_2d_in_7_empty_n xor ap_const_logic_1) and (buf_2d_in_6_empty_n xor ap_const_logic_1) and (buf_2d_in_5_empty_n xor ap_const_logic_1) and (buf_2d_in_4_empty_n xor ap_const_logic_1) and (buf_2d_in_3_empty_n xor ap_const_logic_1) and (buf_2d_in_2_empty_n xor ap_const_logic_1) and (buf_2d_in_1_empty_n xor ap_const_logic_1) and (buf_2d_in_empty_n xor ap_const_logic_1) and entry_proc_U0_ap_idle and dct_2d_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_channel_write_buf_2d_in <= ((buf_2d_in_full_n and ap_channel_done_buf_2d_in) or ap_sync_reg_channel_write_buf_2d_in);
    ap_sync_channel_write_buf_2d_in_1 <= ((buf_2d_in_1_full_n and ap_channel_done_buf_2d_in_1) or ap_sync_reg_channel_write_buf_2d_in_1);
    ap_sync_channel_write_buf_2d_in_10 <= ((buf_2d_in_10_full_n and ap_channel_done_buf_2d_in_10) or ap_sync_reg_channel_write_buf_2d_in_10);
    ap_sync_channel_write_buf_2d_in_11 <= ((buf_2d_in_11_full_n and ap_channel_done_buf_2d_in_11) or ap_sync_reg_channel_write_buf_2d_in_11);
    ap_sync_channel_write_buf_2d_in_12 <= ((buf_2d_in_12_full_n and ap_channel_done_buf_2d_in_12) or ap_sync_reg_channel_write_buf_2d_in_12);
    ap_sync_channel_write_buf_2d_in_13 <= ((buf_2d_in_13_full_n and ap_channel_done_buf_2d_in_13) or ap_sync_reg_channel_write_buf_2d_in_13);
    ap_sync_channel_write_buf_2d_in_14 <= ((buf_2d_in_14_full_n and ap_channel_done_buf_2d_in_14) or ap_sync_reg_channel_write_buf_2d_in_14);
    ap_sync_channel_write_buf_2d_in_15 <= ((buf_2d_in_15_full_n and ap_channel_done_buf_2d_in_15) or ap_sync_reg_channel_write_buf_2d_in_15);
    ap_sync_channel_write_buf_2d_in_16 <= ((buf_2d_in_16_full_n and ap_channel_done_buf_2d_in_16) or ap_sync_reg_channel_write_buf_2d_in_16);
    ap_sync_channel_write_buf_2d_in_17 <= ((buf_2d_in_17_full_n and ap_channel_done_buf_2d_in_17) or ap_sync_reg_channel_write_buf_2d_in_17);
    ap_sync_channel_write_buf_2d_in_18 <= ((buf_2d_in_18_full_n and ap_channel_done_buf_2d_in_18) or ap_sync_reg_channel_write_buf_2d_in_18);
    ap_sync_channel_write_buf_2d_in_19 <= ((buf_2d_in_19_full_n and ap_channel_done_buf_2d_in_19) or ap_sync_reg_channel_write_buf_2d_in_19);
    ap_sync_channel_write_buf_2d_in_2 <= ((buf_2d_in_2_full_n and ap_channel_done_buf_2d_in_2) or ap_sync_reg_channel_write_buf_2d_in_2);
    ap_sync_channel_write_buf_2d_in_20 <= ((buf_2d_in_20_full_n and ap_channel_done_buf_2d_in_20) or ap_sync_reg_channel_write_buf_2d_in_20);
    ap_sync_channel_write_buf_2d_in_21 <= ((buf_2d_in_21_full_n and ap_channel_done_buf_2d_in_21) or ap_sync_reg_channel_write_buf_2d_in_21);
    ap_sync_channel_write_buf_2d_in_22 <= ((buf_2d_in_22_full_n and ap_channel_done_buf_2d_in_22) or ap_sync_reg_channel_write_buf_2d_in_22);
    ap_sync_channel_write_buf_2d_in_23 <= ((buf_2d_in_23_full_n and ap_channel_done_buf_2d_in_23) or ap_sync_reg_channel_write_buf_2d_in_23);
    ap_sync_channel_write_buf_2d_in_24 <= ((buf_2d_in_24_full_n and ap_channel_done_buf_2d_in_24) or ap_sync_reg_channel_write_buf_2d_in_24);
    ap_sync_channel_write_buf_2d_in_25 <= ((buf_2d_in_25_full_n and ap_channel_done_buf_2d_in_25) or ap_sync_reg_channel_write_buf_2d_in_25);
    ap_sync_channel_write_buf_2d_in_26 <= ((buf_2d_in_26_full_n and ap_channel_done_buf_2d_in_26) or ap_sync_reg_channel_write_buf_2d_in_26);
    ap_sync_channel_write_buf_2d_in_27 <= ((buf_2d_in_27_full_n and ap_channel_done_buf_2d_in_27) or ap_sync_reg_channel_write_buf_2d_in_27);
    ap_sync_channel_write_buf_2d_in_28 <= ((buf_2d_in_28_full_n and ap_channel_done_buf_2d_in_28) or ap_sync_reg_channel_write_buf_2d_in_28);
    ap_sync_channel_write_buf_2d_in_29 <= ((buf_2d_in_29_full_n and ap_channel_done_buf_2d_in_29) or ap_sync_reg_channel_write_buf_2d_in_29);
    ap_sync_channel_write_buf_2d_in_3 <= ((buf_2d_in_3_full_n and ap_channel_done_buf_2d_in_3) or ap_sync_reg_channel_write_buf_2d_in_3);
    ap_sync_channel_write_buf_2d_in_30 <= ((buf_2d_in_30_full_n and ap_channel_done_buf_2d_in_30) or ap_sync_reg_channel_write_buf_2d_in_30);
    ap_sync_channel_write_buf_2d_in_31 <= ((buf_2d_in_31_full_n and ap_channel_done_buf_2d_in_31) or ap_sync_reg_channel_write_buf_2d_in_31);
    ap_sync_channel_write_buf_2d_in_32 <= ((buf_2d_in_32_full_n and ap_channel_done_buf_2d_in_32) or ap_sync_reg_channel_write_buf_2d_in_32);
    ap_sync_channel_write_buf_2d_in_33 <= ((buf_2d_in_33_full_n and ap_channel_done_buf_2d_in_33) or ap_sync_reg_channel_write_buf_2d_in_33);
    ap_sync_channel_write_buf_2d_in_34 <= ((buf_2d_in_34_full_n and ap_channel_done_buf_2d_in_34) or ap_sync_reg_channel_write_buf_2d_in_34);
    ap_sync_channel_write_buf_2d_in_35 <= ((buf_2d_in_35_full_n and ap_channel_done_buf_2d_in_35) or ap_sync_reg_channel_write_buf_2d_in_35);
    ap_sync_channel_write_buf_2d_in_36 <= ((buf_2d_in_36_full_n and ap_channel_done_buf_2d_in_36) or ap_sync_reg_channel_write_buf_2d_in_36);
    ap_sync_channel_write_buf_2d_in_37 <= ((buf_2d_in_37_full_n and ap_channel_done_buf_2d_in_37) or ap_sync_reg_channel_write_buf_2d_in_37);
    ap_sync_channel_write_buf_2d_in_38 <= ((buf_2d_in_38_full_n and ap_channel_done_buf_2d_in_38) or ap_sync_reg_channel_write_buf_2d_in_38);
    ap_sync_channel_write_buf_2d_in_39 <= ((buf_2d_in_39_full_n and ap_channel_done_buf_2d_in_39) or ap_sync_reg_channel_write_buf_2d_in_39);
    ap_sync_channel_write_buf_2d_in_4 <= ((buf_2d_in_4_full_n and ap_channel_done_buf_2d_in_4) or ap_sync_reg_channel_write_buf_2d_in_4);
    ap_sync_channel_write_buf_2d_in_40 <= ((buf_2d_in_40_full_n and ap_channel_done_buf_2d_in_40) or ap_sync_reg_channel_write_buf_2d_in_40);
    ap_sync_channel_write_buf_2d_in_41 <= ((buf_2d_in_41_full_n and ap_channel_done_buf_2d_in_41) or ap_sync_reg_channel_write_buf_2d_in_41);
    ap_sync_channel_write_buf_2d_in_42 <= ((buf_2d_in_42_full_n and ap_channel_done_buf_2d_in_42) or ap_sync_reg_channel_write_buf_2d_in_42);
    ap_sync_channel_write_buf_2d_in_43 <= ((buf_2d_in_43_full_n and ap_channel_done_buf_2d_in_43) or ap_sync_reg_channel_write_buf_2d_in_43);
    ap_sync_channel_write_buf_2d_in_44 <= ((buf_2d_in_44_full_n and ap_channel_done_buf_2d_in_44) or ap_sync_reg_channel_write_buf_2d_in_44);
    ap_sync_channel_write_buf_2d_in_45 <= ((buf_2d_in_45_full_n and ap_channel_done_buf_2d_in_45) or ap_sync_reg_channel_write_buf_2d_in_45);
    ap_sync_channel_write_buf_2d_in_46 <= ((buf_2d_in_46_full_n and ap_channel_done_buf_2d_in_46) or ap_sync_reg_channel_write_buf_2d_in_46);
    ap_sync_channel_write_buf_2d_in_47 <= ((buf_2d_in_47_full_n and ap_channel_done_buf_2d_in_47) or ap_sync_reg_channel_write_buf_2d_in_47);
    ap_sync_channel_write_buf_2d_in_48 <= ((buf_2d_in_48_full_n and ap_channel_done_buf_2d_in_48) or ap_sync_reg_channel_write_buf_2d_in_48);
    ap_sync_channel_write_buf_2d_in_49 <= ((buf_2d_in_49_full_n and ap_channel_done_buf_2d_in_49) or ap_sync_reg_channel_write_buf_2d_in_49);
    ap_sync_channel_write_buf_2d_in_5 <= ((buf_2d_in_5_full_n and ap_channel_done_buf_2d_in_5) or ap_sync_reg_channel_write_buf_2d_in_5);
    ap_sync_channel_write_buf_2d_in_50 <= ((buf_2d_in_50_full_n and ap_channel_done_buf_2d_in_50) or ap_sync_reg_channel_write_buf_2d_in_50);
    ap_sync_channel_write_buf_2d_in_51 <= ((buf_2d_in_51_full_n and ap_channel_done_buf_2d_in_51) or ap_sync_reg_channel_write_buf_2d_in_51);
    ap_sync_channel_write_buf_2d_in_52 <= ((buf_2d_in_52_full_n and ap_channel_done_buf_2d_in_52) or ap_sync_reg_channel_write_buf_2d_in_52);
    ap_sync_channel_write_buf_2d_in_53 <= ((buf_2d_in_53_full_n and ap_channel_done_buf_2d_in_53) or ap_sync_reg_channel_write_buf_2d_in_53);
    ap_sync_channel_write_buf_2d_in_54 <= ((buf_2d_in_54_full_n and ap_channel_done_buf_2d_in_54) or ap_sync_reg_channel_write_buf_2d_in_54);
    ap_sync_channel_write_buf_2d_in_55 <= ((buf_2d_in_55_full_n and ap_channel_done_buf_2d_in_55) or ap_sync_reg_channel_write_buf_2d_in_55);
    ap_sync_channel_write_buf_2d_in_56 <= ((buf_2d_in_56_full_n and ap_channel_done_buf_2d_in_56) or ap_sync_reg_channel_write_buf_2d_in_56);
    ap_sync_channel_write_buf_2d_in_57 <= ((buf_2d_in_57_full_n and ap_channel_done_buf_2d_in_57) or ap_sync_reg_channel_write_buf_2d_in_57);
    ap_sync_channel_write_buf_2d_in_58 <= ((buf_2d_in_58_full_n and ap_channel_done_buf_2d_in_58) or ap_sync_reg_channel_write_buf_2d_in_58);
    ap_sync_channel_write_buf_2d_in_59 <= ((buf_2d_in_59_full_n and ap_channel_done_buf_2d_in_59) or ap_sync_reg_channel_write_buf_2d_in_59);
    ap_sync_channel_write_buf_2d_in_6 <= ((buf_2d_in_6_full_n and ap_channel_done_buf_2d_in_6) or ap_sync_reg_channel_write_buf_2d_in_6);
    ap_sync_channel_write_buf_2d_in_60 <= ((buf_2d_in_60_full_n and ap_channel_done_buf_2d_in_60) or ap_sync_reg_channel_write_buf_2d_in_60);
    ap_sync_channel_write_buf_2d_in_61 <= ((buf_2d_in_61_full_n and ap_channel_done_buf_2d_in_61) or ap_sync_reg_channel_write_buf_2d_in_61);
    ap_sync_channel_write_buf_2d_in_62 <= ((buf_2d_in_62_full_n and ap_channel_done_buf_2d_in_62) or ap_sync_reg_channel_write_buf_2d_in_62);
    ap_sync_channel_write_buf_2d_in_63 <= ((buf_2d_in_63_full_n and ap_channel_done_buf_2d_in_63) or ap_sync_reg_channel_write_buf_2d_in_63);
    ap_sync_channel_write_buf_2d_in_7 <= ((buf_2d_in_7_full_n and ap_channel_done_buf_2d_in_7) or ap_sync_reg_channel_write_buf_2d_in_7);
    ap_sync_channel_write_buf_2d_in_8 <= ((buf_2d_in_8_full_n and ap_channel_done_buf_2d_in_8) or ap_sync_reg_channel_write_buf_2d_in_8);
    ap_sync_channel_write_buf_2d_in_9 <= ((buf_2d_in_9_full_n and ap_channel_done_buf_2d_in_9) or ap_sync_reg_channel_write_buf_2d_in_9);
    ap_sync_channel_write_buf_2d_out <= ((buf_2d_out_full_n and ap_channel_done_buf_2d_out) or ap_sync_reg_channel_write_buf_2d_out);
    ap_sync_channel_write_buf_2d_out_1 <= ((buf_2d_out_1_full_n and ap_channel_done_buf_2d_out_1) or ap_sync_reg_channel_write_buf_2d_out_1);
    ap_sync_channel_write_buf_2d_out_10 <= ((buf_2d_out_10_full_n and ap_channel_done_buf_2d_out_10) or ap_sync_reg_channel_write_buf_2d_out_10);
    ap_sync_channel_write_buf_2d_out_11 <= ((buf_2d_out_11_full_n and ap_channel_done_buf_2d_out_11) or ap_sync_reg_channel_write_buf_2d_out_11);
    ap_sync_channel_write_buf_2d_out_12 <= ((buf_2d_out_12_full_n and ap_channel_done_buf_2d_out_12) or ap_sync_reg_channel_write_buf_2d_out_12);
    ap_sync_channel_write_buf_2d_out_13 <= ((buf_2d_out_13_full_n and ap_channel_done_buf_2d_out_13) or ap_sync_reg_channel_write_buf_2d_out_13);
    ap_sync_channel_write_buf_2d_out_14 <= ((buf_2d_out_14_full_n and ap_channel_done_buf_2d_out_14) or ap_sync_reg_channel_write_buf_2d_out_14);
    ap_sync_channel_write_buf_2d_out_15 <= ((buf_2d_out_15_full_n and ap_channel_done_buf_2d_out_15) or ap_sync_reg_channel_write_buf_2d_out_15);
    ap_sync_channel_write_buf_2d_out_16 <= ((buf_2d_out_16_full_n and ap_channel_done_buf_2d_out_16) or ap_sync_reg_channel_write_buf_2d_out_16);
    ap_sync_channel_write_buf_2d_out_17 <= ((buf_2d_out_17_full_n and ap_channel_done_buf_2d_out_17) or ap_sync_reg_channel_write_buf_2d_out_17);
    ap_sync_channel_write_buf_2d_out_18 <= ((buf_2d_out_18_full_n and ap_channel_done_buf_2d_out_18) or ap_sync_reg_channel_write_buf_2d_out_18);
    ap_sync_channel_write_buf_2d_out_19 <= ((buf_2d_out_19_full_n and ap_channel_done_buf_2d_out_19) or ap_sync_reg_channel_write_buf_2d_out_19);
    ap_sync_channel_write_buf_2d_out_2 <= ((buf_2d_out_2_full_n and ap_channel_done_buf_2d_out_2) or ap_sync_reg_channel_write_buf_2d_out_2);
    ap_sync_channel_write_buf_2d_out_20 <= ((buf_2d_out_20_full_n and ap_channel_done_buf_2d_out_20) or ap_sync_reg_channel_write_buf_2d_out_20);
    ap_sync_channel_write_buf_2d_out_21 <= ((buf_2d_out_21_full_n and ap_channel_done_buf_2d_out_21) or ap_sync_reg_channel_write_buf_2d_out_21);
    ap_sync_channel_write_buf_2d_out_22 <= ((buf_2d_out_22_full_n and ap_channel_done_buf_2d_out_22) or ap_sync_reg_channel_write_buf_2d_out_22);
    ap_sync_channel_write_buf_2d_out_23 <= ((buf_2d_out_23_full_n and ap_channel_done_buf_2d_out_23) or ap_sync_reg_channel_write_buf_2d_out_23);
    ap_sync_channel_write_buf_2d_out_24 <= ((buf_2d_out_24_full_n and ap_channel_done_buf_2d_out_24) or ap_sync_reg_channel_write_buf_2d_out_24);
    ap_sync_channel_write_buf_2d_out_25 <= ((buf_2d_out_25_full_n and ap_channel_done_buf_2d_out_25) or ap_sync_reg_channel_write_buf_2d_out_25);
    ap_sync_channel_write_buf_2d_out_26 <= ((buf_2d_out_26_full_n and ap_channel_done_buf_2d_out_26) or ap_sync_reg_channel_write_buf_2d_out_26);
    ap_sync_channel_write_buf_2d_out_27 <= ((buf_2d_out_27_full_n and ap_channel_done_buf_2d_out_27) or ap_sync_reg_channel_write_buf_2d_out_27);
    ap_sync_channel_write_buf_2d_out_28 <= ((buf_2d_out_28_full_n and ap_channel_done_buf_2d_out_28) or ap_sync_reg_channel_write_buf_2d_out_28);
    ap_sync_channel_write_buf_2d_out_29 <= ((buf_2d_out_29_full_n and ap_channel_done_buf_2d_out_29) or ap_sync_reg_channel_write_buf_2d_out_29);
    ap_sync_channel_write_buf_2d_out_3 <= ((buf_2d_out_3_full_n and ap_channel_done_buf_2d_out_3) or ap_sync_reg_channel_write_buf_2d_out_3);
    ap_sync_channel_write_buf_2d_out_30 <= ((buf_2d_out_30_full_n and ap_channel_done_buf_2d_out_30) or ap_sync_reg_channel_write_buf_2d_out_30);
    ap_sync_channel_write_buf_2d_out_31 <= ((buf_2d_out_31_full_n and ap_channel_done_buf_2d_out_31) or ap_sync_reg_channel_write_buf_2d_out_31);
    ap_sync_channel_write_buf_2d_out_32 <= ((buf_2d_out_32_full_n and ap_channel_done_buf_2d_out_32) or ap_sync_reg_channel_write_buf_2d_out_32);
    ap_sync_channel_write_buf_2d_out_33 <= ((buf_2d_out_33_full_n and ap_channel_done_buf_2d_out_33) or ap_sync_reg_channel_write_buf_2d_out_33);
    ap_sync_channel_write_buf_2d_out_34 <= ((buf_2d_out_34_full_n and ap_channel_done_buf_2d_out_34) or ap_sync_reg_channel_write_buf_2d_out_34);
    ap_sync_channel_write_buf_2d_out_35 <= ((buf_2d_out_35_full_n and ap_channel_done_buf_2d_out_35) or ap_sync_reg_channel_write_buf_2d_out_35);
    ap_sync_channel_write_buf_2d_out_36 <= ((buf_2d_out_36_full_n and ap_channel_done_buf_2d_out_36) or ap_sync_reg_channel_write_buf_2d_out_36);
    ap_sync_channel_write_buf_2d_out_37 <= ((buf_2d_out_37_full_n and ap_channel_done_buf_2d_out_37) or ap_sync_reg_channel_write_buf_2d_out_37);
    ap_sync_channel_write_buf_2d_out_38 <= ((buf_2d_out_38_full_n and ap_channel_done_buf_2d_out_38) or ap_sync_reg_channel_write_buf_2d_out_38);
    ap_sync_channel_write_buf_2d_out_39 <= ((buf_2d_out_39_full_n and ap_channel_done_buf_2d_out_39) or ap_sync_reg_channel_write_buf_2d_out_39);
    ap_sync_channel_write_buf_2d_out_4 <= ((buf_2d_out_4_full_n and ap_channel_done_buf_2d_out_4) or ap_sync_reg_channel_write_buf_2d_out_4);
    ap_sync_channel_write_buf_2d_out_40 <= ((buf_2d_out_40_full_n and ap_channel_done_buf_2d_out_40) or ap_sync_reg_channel_write_buf_2d_out_40);
    ap_sync_channel_write_buf_2d_out_41 <= ((buf_2d_out_41_full_n and ap_channel_done_buf_2d_out_41) or ap_sync_reg_channel_write_buf_2d_out_41);
    ap_sync_channel_write_buf_2d_out_42 <= ((buf_2d_out_42_full_n and ap_channel_done_buf_2d_out_42) or ap_sync_reg_channel_write_buf_2d_out_42);
    ap_sync_channel_write_buf_2d_out_43 <= ((buf_2d_out_43_full_n and ap_channel_done_buf_2d_out_43) or ap_sync_reg_channel_write_buf_2d_out_43);
    ap_sync_channel_write_buf_2d_out_44 <= ((buf_2d_out_44_full_n and ap_channel_done_buf_2d_out_44) or ap_sync_reg_channel_write_buf_2d_out_44);
    ap_sync_channel_write_buf_2d_out_45 <= ((buf_2d_out_45_full_n and ap_channel_done_buf_2d_out_45) or ap_sync_reg_channel_write_buf_2d_out_45);
    ap_sync_channel_write_buf_2d_out_46 <= ((buf_2d_out_46_full_n and ap_channel_done_buf_2d_out_46) or ap_sync_reg_channel_write_buf_2d_out_46);
    ap_sync_channel_write_buf_2d_out_47 <= ((buf_2d_out_47_full_n and ap_channel_done_buf_2d_out_47) or ap_sync_reg_channel_write_buf_2d_out_47);
    ap_sync_channel_write_buf_2d_out_48 <= ((buf_2d_out_48_full_n and ap_channel_done_buf_2d_out_48) or ap_sync_reg_channel_write_buf_2d_out_48);
    ap_sync_channel_write_buf_2d_out_49 <= ((buf_2d_out_49_full_n and ap_channel_done_buf_2d_out_49) or ap_sync_reg_channel_write_buf_2d_out_49);
    ap_sync_channel_write_buf_2d_out_5 <= ((buf_2d_out_5_full_n and ap_channel_done_buf_2d_out_5) or ap_sync_reg_channel_write_buf_2d_out_5);
    ap_sync_channel_write_buf_2d_out_50 <= ((buf_2d_out_50_full_n and ap_channel_done_buf_2d_out_50) or ap_sync_reg_channel_write_buf_2d_out_50);
    ap_sync_channel_write_buf_2d_out_51 <= ((buf_2d_out_51_full_n and ap_channel_done_buf_2d_out_51) or ap_sync_reg_channel_write_buf_2d_out_51);
    ap_sync_channel_write_buf_2d_out_52 <= ((buf_2d_out_52_full_n and ap_channel_done_buf_2d_out_52) or ap_sync_reg_channel_write_buf_2d_out_52);
    ap_sync_channel_write_buf_2d_out_53 <= ((buf_2d_out_53_full_n and ap_channel_done_buf_2d_out_53) or ap_sync_reg_channel_write_buf_2d_out_53);
    ap_sync_channel_write_buf_2d_out_54 <= ((buf_2d_out_54_full_n and ap_channel_done_buf_2d_out_54) or ap_sync_reg_channel_write_buf_2d_out_54);
    ap_sync_channel_write_buf_2d_out_55 <= ((buf_2d_out_55_full_n and ap_channel_done_buf_2d_out_55) or ap_sync_reg_channel_write_buf_2d_out_55);
    ap_sync_channel_write_buf_2d_out_56 <= ((buf_2d_out_56_full_n and ap_channel_done_buf_2d_out_56) or ap_sync_reg_channel_write_buf_2d_out_56);
    ap_sync_channel_write_buf_2d_out_57 <= ((buf_2d_out_57_full_n and ap_channel_done_buf_2d_out_57) or ap_sync_reg_channel_write_buf_2d_out_57);
    ap_sync_channel_write_buf_2d_out_58 <= ((buf_2d_out_58_full_n and ap_channel_done_buf_2d_out_58) or ap_sync_reg_channel_write_buf_2d_out_58);
    ap_sync_channel_write_buf_2d_out_59 <= ((buf_2d_out_59_full_n and ap_channel_done_buf_2d_out_59) or ap_sync_reg_channel_write_buf_2d_out_59);
    ap_sync_channel_write_buf_2d_out_6 <= ((buf_2d_out_6_full_n and ap_channel_done_buf_2d_out_6) or ap_sync_reg_channel_write_buf_2d_out_6);
    ap_sync_channel_write_buf_2d_out_60 <= ((buf_2d_out_60_full_n and ap_channel_done_buf_2d_out_60) or ap_sync_reg_channel_write_buf_2d_out_60);
    ap_sync_channel_write_buf_2d_out_61 <= ((buf_2d_out_61_full_n and ap_channel_done_buf_2d_out_61) or ap_sync_reg_channel_write_buf_2d_out_61);
    ap_sync_channel_write_buf_2d_out_62 <= ((buf_2d_out_62_full_n and ap_channel_done_buf_2d_out_62) or ap_sync_reg_channel_write_buf_2d_out_62);
    ap_sync_channel_write_buf_2d_out_63 <= ((buf_2d_out_63_full_n and ap_channel_done_buf_2d_out_63) or ap_sync_reg_channel_write_buf_2d_out_63);
    ap_sync_channel_write_buf_2d_out_7 <= ((buf_2d_out_7_full_n and ap_channel_done_buf_2d_out_7) or ap_sync_reg_channel_write_buf_2d_out_7);
    ap_sync_channel_write_buf_2d_out_8 <= ((buf_2d_out_8_full_n and ap_channel_done_buf_2d_out_8) or ap_sync_reg_channel_write_buf_2d_out_8);
    ap_sync_channel_write_buf_2d_out_9 <= ((buf_2d_out_9_full_n and ap_channel_done_buf_2d_out_9) or ap_sync_reg_channel_write_buf_2d_out_9);
    ap_sync_entry_proc_U0_ap_ready <= (entry_proc_U0_ap_ready or ap_sync_reg_entry_proc_U0_ap_ready);
    ap_sync_read_data_U0_ap_ready <= (read_data_U0_ap_ready or ap_sync_reg_read_data_U0_ap_ready);
    ap_sync_ready <= (ap_sync_read_data_U0_ap_ready and ap_sync_entry_proc_U0_ap_ready);
    dct_2d_U0_ap_continue <= (ap_sync_channel_write_buf_2d_out_9 and ap_sync_channel_write_buf_2d_out_8 and ap_sync_channel_write_buf_2d_out_7 and ap_sync_channel_write_buf_2d_out_63 and ap_sync_channel_write_buf_2d_out_62 and ap_sync_channel_write_buf_2d_out_61 and ap_sync_channel_write_buf_2d_out_60 and ap_sync_channel_write_buf_2d_out_6 and ap_sync_channel_write_buf_2d_out_59 and ap_sync_channel_write_buf_2d_out_58 and ap_sync_channel_write_buf_2d_out_57 and ap_sync_channel_write_buf_2d_out_56 and ap_sync_channel_write_buf_2d_out_55 and ap_sync_channel_write_buf_2d_out_54 and ap_sync_channel_write_buf_2d_out_53 and ap_sync_channel_write_buf_2d_out_52 and ap_sync_channel_write_buf_2d_out_51 and ap_sync_channel_write_buf_2d_out_50 and ap_sync_channel_write_buf_2d_out_5 and ap_sync_channel_write_buf_2d_out_49 and ap_sync_channel_write_buf_2d_out_48 and ap_sync_channel_write_buf_2d_out_47 and ap_sync_channel_write_buf_2d_out_46 and ap_sync_channel_write_buf_2d_out_45 and ap_sync_channel_write_buf_2d_out_44 and ap_sync_channel_write_buf_2d_out_43 and ap_sync_channel_write_buf_2d_out_42 and ap_sync_channel_write_buf_2d_out_41 and ap_sync_channel_write_buf_2d_out_40 and ap_sync_channel_write_buf_2d_out_4 and ap_sync_channel_write_buf_2d_out_39 and ap_sync_channel_write_buf_2d_out_38 and ap_sync_channel_write_buf_2d_out_37 and ap_sync_channel_write_buf_2d_out_36 and ap_sync_channel_write_buf_2d_out_35 and ap_sync_channel_write_buf_2d_out_34 and ap_sync_channel_write_buf_2d_out_33 and ap_sync_channel_write_buf_2d_out_32 and ap_sync_channel_write_buf_2d_out_31 and ap_sync_channel_write_buf_2d_out_30 and ap_sync_channel_write_buf_2d_out_3 and ap_sync_channel_write_buf_2d_out_29 and ap_sync_channel_write_buf_2d_out_28 and ap_sync_channel_write_buf_2d_out_27 and ap_sync_channel_write_buf_2d_out_26 and ap_sync_channel_write_buf_2d_out_25 and ap_sync_channel_write_buf_2d_out_24 and ap_sync_channel_write_buf_2d_out_23 and ap_sync_channel_write_buf_2d_out_22 and ap_sync_channel_write_buf_2d_out_21 and ap_sync_channel_write_buf_2d_out_20 and ap_sync_channel_write_buf_2d_out_2 and ap_sync_channel_write_buf_2d_out_19 and ap_sync_channel_write_buf_2d_out_18 and ap_sync_channel_write_buf_2d_out_17 and ap_sync_channel_write_buf_2d_out_16 and ap_sync_channel_write_buf_2d_out_15 and ap_sync_channel_write_buf_2d_out_14 and ap_sync_channel_write_buf_2d_out_13 and ap_sync_channel_write_buf_2d_out_12 and ap_sync_channel_write_buf_2d_out_11 and ap_sync_channel_write_buf_2d_out_10 and ap_sync_channel_write_buf_2d_out_1 and ap_sync_channel_write_buf_2d_out);
    dct_2d_U0_ap_start <= (buf_2d_in_empty_n and buf_2d_in_9_empty_n and buf_2d_in_8_empty_n and buf_2d_in_7_empty_n and buf_2d_in_6_empty_n and buf_2d_in_63_empty_n and buf_2d_in_62_empty_n and buf_2d_in_61_empty_n and buf_2d_in_60_empty_n and buf_2d_in_5_empty_n and buf_2d_in_59_empty_n and buf_2d_in_58_empty_n and buf_2d_in_57_empty_n and buf_2d_in_56_empty_n and buf_2d_in_55_empty_n and buf_2d_in_54_empty_n and buf_2d_in_53_empty_n and buf_2d_in_52_empty_n and buf_2d_in_51_empty_n and buf_2d_in_50_empty_n and buf_2d_in_4_empty_n and buf_2d_in_49_empty_n and buf_2d_in_48_empty_n and buf_2d_in_47_empty_n and buf_2d_in_46_empty_n and buf_2d_in_45_empty_n and buf_2d_in_44_empty_n and buf_2d_in_43_empty_n and buf_2d_in_42_empty_n and buf_2d_in_41_empty_n and buf_2d_in_40_empty_n and buf_2d_in_3_empty_n and buf_2d_in_39_empty_n and buf_2d_in_38_empty_n and buf_2d_in_37_empty_n and buf_2d_in_36_empty_n and buf_2d_in_35_empty_n and buf_2d_in_34_empty_n and buf_2d_in_33_empty_n and buf_2d_in_32_empty_n and buf_2d_in_31_empty_n and buf_2d_in_30_empty_n and buf_2d_in_2_empty_n and buf_2d_in_29_empty_n and buf_2d_in_28_empty_n and buf_2d_in_27_empty_n and buf_2d_in_26_empty_n and buf_2d_in_25_empty_n and buf_2d_in_24_empty_n and buf_2d_in_23_empty_n and buf_2d_in_22_empty_n and buf_2d_in_21_empty_n and buf_2d_in_20_empty_n and buf_2d_in_1_empty_n and buf_2d_in_19_empty_n and buf_2d_in_18_empty_n and buf_2d_in_17_empty_n and buf_2d_in_16_empty_n and buf_2d_in_15_empty_n and buf_2d_in_14_empty_n and buf_2d_in_13_empty_n and buf_2d_in_12_empty_n and buf_2d_in_11_empty_n and buf_2d_in_10_empty_n);
    entry_proc_U0_ap_continue <= ap_const_logic_1;
    entry_proc_U0_ap_start <= ((ap_sync_reg_entry_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    gmem_BID <= ap_const_lv1_0;
    gmem_BRESP <= ap_const_lv2_0;
    gmem_BUSER <= ap_const_lv1_0;
    gmem_RID <= ap_const_lv1_0;
    gmem_RLAST <= ap_const_logic_0;
    gmem_RRESP <= ap_const_lv2_0;
    gmem_RUSER <= ap_const_lv1_0;
    read_data_U0_ap_continue <= (ap_sync_channel_write_buf_2d_in_9 and ap_sync_channel_write_buf_2d_in_8 and ap_sync_channel_write_buf_2d_in_7 and ap_sync_channel_write_buf_2d_in_63 and ap_sync_channel_write_buf_2d_in_62 and ap_sync_channel_write_buf_2d_in_61 and ap_sync_channel_write_buf_2d_in_60 and ap_sync_channel_write_buf_2d_in_6 and ap_sync_channel_write_buf_2d_in_59 and ap_sync_channel_write_buf_2d_in_58 and ap_sync_channel_write_buf_2d_in_57 and ap_sync_channel_write_buf_2d_in_56 and ap_sync_channel_write_buf_2d_in_55 and ap_sync_channel_write_buf_2d_in_54 and ap_sync_channel_write_buf_2d_in_53 and ap_sync_channel_write_buf_2d_in_52 and ap_sync_channel_write_buf_2d_in_51 and ap_sync_channel_write_buf_2d_in_50 and ap_sync_channel_write_buf_2d_in_5 and ap_sync_channel_write_buf_2d_in_49 and ap_sync_channel_write_buf_2d_in_48 and ap_sync_channel_write_buf_2d_in_47 and ap_sync_channel_write_buf_2d_in_46 and ap_sync_channel_write_buf_2d_in_45 and ap_sync_channel_write_buf_2d_in_44 and ap_sync_channel_write_buf_2d_in_43 and ap_sync_channel_write_buf_2d_in_42 and ap_sync_channel_write_buf_2d_in_41 and ap_sync_channel_write_buf_2d_in_40 and ap_sync_channel_write_buf_2d_in_4 and ap_sync_channel_write_buf_2d_in_39 and ap_sync_channel_write_buf_2d_in_38 and ap_sync_channel_write_buf_2d_in_37 and ap_sync_channel_write_buf_2d_in_36 and ap_sync_channel_write_buf_2d_in_35 and ap_sync_channel_write_buf_2d_in_34 and ap_sync_channel_write_buf_2d_in_33 and ap_sync_channel_write_buf_2d_in_32 and ap_sync_channel_write_buf_2d_in_31 and ap_sync_channel_write_buf_2d_in_30 and ap_sync_channel_write_buf_2d_in_3 and ap_sync_channel_write_buf_2d_in_29 and ap_sync_channel_write_buf_2d_in_28 and ap_sync_channel_write_buf_2d_in_27 and ap_sync_channel_write_buf_2d_in_26 and ap_sync_channel_write_buf_2d_in_25 and ap_sync_channel_write_buf_2d_in_24 and ap_sync_channel_write_buf_2d_in_23 and ap_sync_channel_write_buf_2d_in_22 and ap_sync_channel_write_buf_2d_in_21 and ap_sync_channel_write_buf_2d_in_20 and ap_sync_channel_write_buf_2d_in_2 and ap_sync_channel_write_buf_2d_in_19 and ap_sync_channel_write_buf_2d_in_18 and ap_sync_channel_write_buf_2d_in_17 and ap_sync_channel_write_buf_2d_in_16 and ap_sync_channel_write_buf_2d_in_15 and ap_sync_channel_write_buf_2d_in_14 and ap_sync_channel_write_buf_2d_in_13 and ap_sync_channel_write_buf_2d_in_12 and ap_sync_channel_write_buf_2d_in_11 and ap_sync_channel_write_buf_2d_in_10 and ap_sync_channel_write_buf_2d_in_1 and ap_sync_channel_write_buf_2d_in);
    read_data_U0_ap_start <= ((ap_sync_reg_read_data_U0_ap_ready xor ap_const_logic_1) and ap_start);
    write_data_U0_ap_continue <= ap_continue;
    write_data_U0_ap_start <= (buf_2d_out_empty_n and buf_2d_out_9_empty_n and buf_2d_out_8_empty_n and buf_2d_out_7_empty_n and buf_2d_out_6_empty_n and buf_2d_out_63_empty_n and buf_2d_out_62_empty_n and buf_2d_out_61_empty_n and buf_2d_out_60_empty_n and buf_2d_out_5_empty_n and buf_2d_out_59_empty_n and buf_2d_out_58_empty_n and buf_2d_out_57_empty_n and buf_2d_out_56_empty_n and buf_2d_out_55_empty_n and buf_2d_out_54_empty_n and buf_2d_out_53_empty_n and buf_2d_out_52_empty_n and buf_2d_out_51_empty_n and buf_2d_out_50_empty_n and buf_2d_out_4_empty_n and buf_2d_out_49_empty_n and buf_2d_out_48_empty_n and buf_2d_out_47_empty_n and buf_2d_out_46_empty_n and buf_2d_out_45_empty_n and buf_2d_out_44_empty_n and buf_2d_out_43_empty_n and buf_2d_out_42_empty_n and buf_2d_out_41_empty_n and buf_2d_out_40_empty_n and buf_2d_out_3_empty_n and buf_2d_out_39_empty_n and buf_2d_out_38_empty_n and buf_2d_out_37_empty_n and buf_2d_out_36_empty_n and buf_2d_out_35_empty_n and buf_2d_out_34_empty_n and buf_2d_out_33_empty_n and buf_2d_out_32_empty_n and buf_2d_out_31_empty_n and buf_2d_out_30_empty_n and buf_2d_out_2_empty_n and buf_2d_out_29_empty_n and buf_2d_out_28_empty_n and buf_2d_out_27_empty_n and buf_2d_out_26_empty_n and buf_2d_out_25_empty_n and buf_2d_out_24_empty_n and buf_2d_out_23_empty_n and buf_2d_out_22_empty_n and buf_2d_out_21_empty_n and buf_2d_out_20_empty_n and buf_2d_out_1_empty_n and buf_2d_out_19_empty_n and buf_2d_out_18_empty_n and buf_2d_out_17_empty_n and buf_2d_out_16_empty_n and buf_2d_out_15_empty_n and buf_2d_out_14_empty_n and buf_2d_out_13_empty_n and buf_2d_out_12_empty_n and buf_2d_out_11_empty_n and buf_2d_out_10_empty_n);
end behav;
