// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dct_read_data_Pipeline_RD_Loop_Row (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        sext_ln74,
        buf_7_7_out_0_out,
        buf_7_7_out_0_out_ap_vld,
        buf_7_6_out_0_out,
        buf_7_6_out_0_out_ap_vld,
        buf_7_5_out_0_out,
        buf_7_5_out_0_out_ap_vld,
        buf_7_4_out_0_out,
        buf_7_4_out_0_out_ap_vld,
        buf_7_3_out_0_out,
        buf_7_3_out_0_out_ap_vld,
        buf_7_2_out_0_out,
        buf_7_2_out_0_out_ap_vld,
        buf_7_1_out_0_out,
        buf_7_1_out_0_out_ap_vld,
        buf_7_0_out_0_out,
        buf_7_0_out_0_out_ap_vld,
        buf_6_7_out_0_out,
        buf_6_7_out_0_out_ap_vld,
        buf_6_6_out_0_out,
        buf_6_6_out_0_out_ap_vld,
        buf_6_5_out_0_out,
        buf_6_5_out_0_out_ap_vld,
        buf_6_4_out_0_out,
        buf_6_4_out_0_out_ap_vld,
        buf_6_3_out_0_out,
        buf_6_3_out_0_out_ap_vld,
        buf_6_2_out_0_out,
        buf_6_2_out_0_out_ap_vld,
        buf_6_1_out_0_out,
        buf_6_1_out_0_out_ap_vld,
        buf_6_0_out_0_out,
        buf_6_0_out_0_out_ap_vld,
        buf_5_7_out_0_out,
        buf_5_7_out_0_out_ap_vld,
        buf_5_6_out_0_out,
        buf_5_6_out_0_out_ap_vld,
        buf_5_5_out_0_out,
        buf_5_5_out_0_out_ap_vld,
        buf_5_4_out_0_out,
        buf_5_4_out_0_out_ap_vld,
        buf_5_3_out_0_out,
        buf_5_3_out_0_out_ap_vld,
        buf_5_2_out_0_out,
        buf_5_2_out_0_out_ap_vld,
        buf_5_1_out_0_out,
        buf_5_1_out_0_out_ap_vld,
        buf_5_0_out_0_out,
        buf_5_0_out_0_out_ap_vld,
        buf_4_7_out_0_out,
        buf_4_7_out_0_out_ap_vld,
        buf_4_6_out_0_out,
        buf_4_6_out_0_out_ap_vld,
        buf_4_5_out_0_out,
        buf_4_5_out_0_out_ap_vld,
        buf_4_4_out_0_out,
        buf_4_4_out_0_out_ap_vld,
        buf_4_3_out_0_out,
        buf_4_3_out_0_out_ap_vld,
        buf_4_2_out_0_out,
        buf_4_2_out_0_out_ap_vld,
        buf_4_1_out_0_out,
        buf_4_1_out_0_out_ap_vld,
        buf_4_0_out_0_out,
        buf_4_0_out_0_out_ap_vld,
        buf_3_7_out_0_out,
        buf_3_7_out_0_out_ap_vld,
        buf_3_6_out_0_out,
        buf_3_6_out_0_out_ap_vld,
        buf_3_5_out_0_out,
        buf_3_5_out_0_out_ap_vld,
        buf_3_4_out_0_out,
        buf_3_4_out_0_out_ap_vld,
        buf_3_3_out_0_out,
        buf_3_3_out_0_out_ap_vld,
        buf_3_2_out_0_out,
        buf_3_2_out_0_out_ap_vld,
        buf_3_1_out_0_out,
        buf_3_1_out_0_out_ap_vld,
        buf_3_0_out_0_out,
        buf_3_0_out_0_out_ap_vld,
        buf_2_7_out_0_out,
        buf_2_7_out_0_out_ap_vld,
        buf_2_6_out_0_out,
        buf_2_6_out_0_out_ap_vld,
        buf_2_5_out_0_out,
        buf_2_5_out_0_out_ap_vld,
        buf_2_4_out_0_out,
        buf_2_4_out_0_out_ap_vld,
        buf_2_3_out_0_out,
        buf_2_3_out_0_out_ap_vld,
        buf_2_2_out_0_out,
        buf_2_2_out_0_out_ap_vld,
        buf_2_1_out_0_out,
        buf_2_1_out_0_out_ap_vld,
        buf_2_0_out_0_out,
        buf_2_0_out_0_out_ap_vld,
        buf_1_7_out_0_out,
        buf_1_7_out_0_out_ap_vld,
        buf_1_6_out_0_out,
        buf_1_6_out_0_out_ap_vld,
        buf_1_5_out_0_out,
        buf_1_5_out_0_out_ap_vld,
        buf_1_4_out_0_out,
        buf_1_4_out_0_out_ap_vld,
        buf_1_3_out_0_out,
        buf_1_3_out_0_out_ap_vld,
        buf_1_2_out_0_out,
        buf_1_2_out_0_out_ap_vld,
        buf_1_1_out_0_out,
        buf_1_1_out_0_out_ap_vld,
        buf_1_0_out_0_out,
        buf_1_0_out_0_out_ap_vld,
        buf_0_7_out_0_out,
        buf_0_7_out_0_out_ap_vld,
        buf_0_6_out_0_out,
        buf_0_6_out_0_out_ap_vld,
        buf_0_5_out_0_out,
        buf_0_5_out_0_out_ap_vld,
        buf_0_4_out_0_out,
        buf_0_4_out_0_out_ap_vld,
        buf_0_3_out_0_out,
        buf_0_3_out_0_out_ap_vld,
        buf_0_2_out_0_out,
        buf_0_2_out_0_out_ap_vld,
        buf_0_1_out_0_out,
        buf_0_1_out_0_out_ap_vld,
        buf_0_0_out_0_out,
        buf_0_0_out_0_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [511:0] m_axi_gmem_WDATA;
output  [63:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [511:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [57:0] sext_ln74;
output  [15:0] buf_7_7_out_0_out;
output   buf_7_7_out_0_out_ap_vld;
output  [15:0] buf_7_6_out_0_out;
output   buf_7_6_out_0_out_ap_vld;
output  [15:0] buf_7_5_out_0_out;
output   buf_7_5_out_0_out_ap_vld;
output  [15:0] buf_7_4_out_0_out;
output   buf_7_4_out_0_out_ap_vld;
output  [15:0] buf_7_3_out_0_out;
output   buf_7_3_out_0_out_ap_vld;
output  [15:0] buf_7_2_out_0_out;
output   buf_7_2_out_0_out_ap_vld;
output  [15:0] buf_7_1_out_0_out;
output   buf_7_1_out_0_out_ap_vld;
output  [15:0] buf_7_0_out_0_out;
output   buf_7_0_out_0_out_ap_vld;
output  [15:0] buf_6_7_out_0_out;
output   buf_6_7_out_0_out_ap_vld;
output  [15:0] buf_6_6_out_0_out;
output   buf_6_6_out_0_out_ap_vld;
output  [15:0] buf_6_5_out_0_out;
output   buf_6_5_out_0_out_ap_vld;
output  [15:0] buf_6_4_out_0_out;
output   buf_6_4_out_0_out_ap_vld;
output  [15:0] buf_6_3_out_0_out;
output   buf_6_3_out_0_out_ap_vld;
output  [15:0] buf_6_2_out_0_out;
output   buf_6_2_out_0_out_ap_vld;
output  [15:0] buf_6_1_out_0_out;
output   buf_6_1_out_0_out_ap_vld;
output  [15:0] buf_6_0_out_0_out;
output   buf_6_0_out_0_out_ap_vld;
output  [15:0] buf_5_7_out_0_out;
output   buf_5_7_out_0_out_ap_vld;
output  [15:0] buf_5_6_out_0_out;
output   buf_5_6_out_0_out_ap_vld;
output  [15:0] buf_5_5_out_0_out;
output   buf_5_5_out_0_out_ap_vld;
output  [15:0] buf_5_4_out_0_out;
output   buf_5_4_out_0_out_ap_vld;
output  [15:0] buf_5_3_out_0_out;
output   buf_5_3_out_0_out_ap_vld;
output  [15:0] buf_5_2_out_0_out;
output   buf_5_2_out_0_out_ap_vld;
output  [15:0] buf_5_1_out_0_out;
output   buf_5_1_out_0_out_ap_vld;
output  [15:0] buf_5_0_out_0_out;
output   buf_5_0_out_0_out_ap_vld;
output  [15:0] buf_4_7_out_0_out;
output   buf_4_7_out_0_out_ap_vld;
output  [15:0] buf_4_6_out_0_out;
output   buf_4_6_out_0_out_ap_vld;
output  [15:0] buf_4_5_out_0_out;
output   buf_4_5_out_0_out_ap_vld;
output  [15:0] buf_4_4_out_0_out;
output   buf_4_4_out_0_out_ap_vld;
output  [15:0] buf_4_3_out_0_out;
output   buf_4_3_out_0_out_ap_vld;
output  [15:0] buf_4_2_out_0_out;
output   buf_4_2_out_0_out_ap_vld;
output  [15:0] buf_4_1_out_0_out;
output   buf_4_1_out_0_out_ap_vld;
output  [15:0] buf_4_0_out_0_out;
output   buf_4_0_out_0_out_ap_vld;
output  [15:0] buf_3_7_out_0_out;
output   buf_3_7_out_0_out_ap_vld;
output  [15:0] buf_3_6_out_0_out;
output   buf_3_6_out_0_out_ap_vld;
output  [15:0] buf_3_5_out_0_out;
output   buf_3_5_out_0_out_ap_vld;
output  [15:0] buf_3_4_out_0_out;
output   buf_3_4_out_0_out_ap_vld;
output  [15:0] buf_3_3_out_0_out;
output   buf_3_3_out_0_out_ap_vld;
output  [15:0] buf_3_2_out_0_out;
output   buf_3_2_out_0_out_ap_vld;
output  [15:0] buf_3_1_out_0_out;
output   buf_3_1_out_0_out_ap_vld;
output  [15:0] buf_3_0_out_0_out;
output   buf_3_0_out_0_out_ap_vld;
output  [15:0] buf_2_7_out_0_out;
output   buf_2_7_out_0_out_ap_vld;
output  [15:0] buf_2_6_out_0_out;
output   buf_2_6_out_0_out_ap_vld;
output  [15:0] buf_2_5_out_0_out;
output   buf_2_5_out_0_out_ap_vld;
output  [15:0] buf_2_4_out_0_out;
output   buf_2_4_out_0_out_ap_vld;
output  [15:0] buf_2_3_out_0_out;
output   buf_2_3_out_0_out_ap_vld;
output  [15:0] buf_2_2_out_0_out;
output   buf_2_2_out_0_out_ap_vld;
output  [15:0] buf_2_1_out_0_out;
output   buf_2_1_out_0_out_ap_vld;
output  [15:0] buf_2_0_out_0_out;
output   buf_2_0_out_0_out_ap_vld;
output  [15:0] buf_1_7_out_0_out;
output   buf_1_7_out_0_out_ap_vld;
output  [15:0] buf_1_6_out_0_out;
output   buf_1_6_out_0_out_ap_vld;
output  [15:0] buf_1_5_out_0_out;
output   buf_1_5_out_0_out_ap_vld;
output  [15:0] buf_1_4_out_0_out;
output   buf_1_4_out_0_out_ap_vld;
output  [15:0] buf_1_3_out_0_out;
output   buf_1_3_out_0_out_ap_vld;
output  [15:0] buf_1_2_out_0_out;
output   buf_1_2_out_0_out_ap_vld;
output  [15:0] buf_1_1_out_0_out;
output   buf_1_1_out_0_out_ap_vld;
output  [15:0] buf_1_0_out_0_out;
output   buf_1_0_out_0_out_ap_vld;
output  [15:0] buf_0_7_out_0_out;
output   buf_0_7_out_0_out_ap_vld;
output  [15:0] buf_0_6_out_0_out;
output   buf_0_6_out_0_out_ap_vld;
output  [15:0] buf_0_5_out_0_out;
output   buf_0_5_out_0_out_ap_vld;
output  [15:0] buf_0_4_out_0_out;
output   buf_0_4_out_0_out_ap_vld;
output  [15:0] buf_0_3_out_0_out;
output   buf_0_3_out_0_out_ap_vld;
output  [15:0] buf_0_2_out_0_out;
output   buf_0_2_out_0_out_ap_vld;
output  [15:0] buf_0_1_out_0_out;
output   buf_0_1_out_0_out_ap_vld;
output  [15:0] buf_0_0_out_0_out;
output   buf_0_0_out_0_out_ap_vld;

reg ap_idle;
reg m_axi_gmem_RREADY;
reg buf_7_7_out_0_out_ap_vld;
reg buf_7_6_out_0_out_ap_vld;
reg buf_7_5_out_0_out_ap_vld;
reg buf_7_4_out_0_out_ap_vld;
reg buf_7_3_out_0_out_ap_vld;
reg buf_7_2_out_0_out_ap_vld;
reg buf_7_1_out_0_out_ap_vld;
reg buf_7_0_out_0_out_ap_vld;
reg buf_6_7_out_0_out_ap_vld;
reg buf_6_6_out_0_out_ap_vld;
reg buf_6_5_out_0_out_ap_vld;
reg buf_6_4_out_0_out_ap_vld;
reg buf_6_3_out_0_out_ap_vld;
reg buf_6_2_out_0_out_ap_vld;
reg buf_6_1_out_0_out_ap_vld;
reg buf_6_0_out_0_out_ap_vld;
reg buf_5_7_out_0_out_ap_vld;
reg buf_5_6_out_0_out_ap_vld;
reg buf_5_5_out_0_out_ap_vld;
reg buf_5_4_out_0_out_ap_vld;
reg buf_5_3_out_0_out_ap_vld;
reg buf_5_2_out_0_out_ap_vld;
reg buf_5_1_out_0_out_ap_vld;
reg buf_5_0_out_0_out_ap_vld;
reg buf_4_7_out_0_out_ap_vld;
reg buf_4_6_out_0_out_ap_vld;
reg buf_4_5_out_0_out_ap_vld;
reg buf_4_4_out_0_out_ap_vld;
reg buf_4_3_out_0_out_ap_vld;
reg buf_4_2_out_0_out_ap_vld;
reg buf_4_1_out_0_out_ap_vld;
reg buf_4_0_out_0_out_ap_vld;
reg buf_3_7_out_0_out_ap_vld;
reg buf_3_6_out_0_out_ap_vld;
reg buf_3_5_out_0_out_ap_vld;
reg buf_3_4_out_0_out_ap_vld;
reg buf_3_3_out_0_out_ap_vld;
reg buf_3_2_out_0_out_ap_vld;
reg buf_3_1_out_0_out_ap_vld;
reg buf_3_0_out_0_out_ap_vld;
reg buf_2_7_out_0_out_ap_vld;
reg buf_2_6_out_0_out_ap_vld;
reg buf_2_5_out_0_out_ap_vld;
reg buf_2_4_out_0_out_ap_vld;
reg buf_2_3_out_0_out_ap_vld;
reg buf_2_2_out_0_out_ap_vld;
reg buf_2_1_out_0_out_ap_vld;
reg buf_2_0_out_0_out_ap_vld;
reg buf_1_7_out_0_out_ap_vld;
reg buf_1_6_out_0_out_ap_vld;
reg buf_1_5_out_0_out_ap_vld;
reg buf_1_4_out_0_out_ap_vld;
reg buf_1_3_out_0_out_ap_vld;
reg buf_1_2_out_0_out_ap_vld;
reg buf_1_1_out_0_out_ap_vld;
reg buf_1_0_out_0_out_ap_vld;
reg buf_0_7_out_0_out_ap_vld;
reg buf_0_6_out_0_out_ap_vld;
reg buf_0_5_out_0_out_ap_vld;
reg buf_0_4_out_0_out_ap_vld;
reg buf_0_3_out_0_out_ap_vld;
reg buf_0_2_out_0_out_ap_vld;
reg buf_0_1_out_0_out_ap_vld;
reg buf_0_0_out_0_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln74_reg_2927;
reg   [0:0] icmp_ln76_reg_2931;
reg    ap_predicate_op89_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln74_fu_975_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_R;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln74_reg_2927_pp0_iter1_reg;
wire   [0:0] icmp_ln76_fu_991_p2;
reg   [0:0] icmp_ln76_reg_2931_pp0_iter1_reg;
wire   [2:0] trunc_ln78_fu_997_p1;
reg   [2:0] trunc_ln78_reg_2935;
reg   [2:0] trunc_ln78_reg_2935_pp0_iter1_reg;
reg   [511:0] gmem_addr_read_reg_2946;
reg    ap_condition_exit_pp0_iter1_stage0;
reg   [511:0] ap_phi_mux_empty_27_phi_fu_952_p4;
wire   [511:0] ap_phi_reg_pp0_iter2_empty_27_reg_949;
wire   [511:0] shiftreg10_cast_fu_1015_p1;
reg   [383:0] shiftreg10_fu_226;
wire    ap_loop_init;
reg   [3:0] r_fu_230;
wire   [3:0] add_ln74_fu_981_p2;
reg   [3:0] ap_sig_allocacmp_r_2;
reg   [15:0] buf_0_0_out_0_fu_234;
wire   [15:0] select_ln78_63_fu_1861_p3;
reg   [15:0] buf_0_1_out_0_fu_238;
wire   [15:0] select_ln78_62_fu_1853_p3;
reg   [15:0] buf_0_2_out_0_fu_242;
wire   [15:0] select_ln78_61_fu_1845_p3;
reg   [15:0] buf_0_3_out_0_fu_246;
wire   [15:0] select_ln78_60_fu_1837_p3;
reg   [15:0] buf_0_4_out_0_fu_250;
wire   [15:0] select_ln78_59_fu_1829_p3;
reg   [15:0] buf_0_5_out_0_fu_254;
wire   [15:0] select_ln78_58_fu_1821_p3;
reg   [15:0] buf_0_6_out_0_fu_258;
wire   [15:0] select_ln78_57_fu_1813_p3;
reg   [15:0] buf_0_7_out_0_fu_262;
wire   [15:0] select_ln78_56_fu_1805_p3;
reg   [15:0] buf_1_0_out_0_fu_266;
wire   [15:0] select_ln78_55_fu_1797_p3;
reg   [15:0] buf_1_1_out_0_fu_270;
wire   [15:0] select_ln78_54_fu_1789_p3;
reg   [15:0] buf_1_2_out_0_fu_274;
wire   [15:0] select_ln78_53_fu_1781_p3;
reg   [15:0] buf_1_3_out_0_fu_278;
wire   [15:0] select_ln78_52_fu_1773_p3;
reg   [15:0] buf_1_4_out_0_fu_282;
wire   [15:0] select_ln78_51_fu_1765_p3;
reg   [15:0] buf_1_5_out_0_fu_286;
wire   [15:0] select_ln78_50_fu_1757_p3;
reg   [15:0] buf_1_6_out_0_fu_290;
wire   [15:0] select_ln78_49_fu_1749_p3;
reg   [15:0] buf_1_7_out_0_fu_294;
wire   [15:0] select_ln78_48_fu_1741_p3;
reg   [15:0] buf_2_0_out_0_fu_298;
wire   [15:0] select_ln78_47_fu_1733_p3;
reg   [15:0] buf_2_1_out_0_fu_302;
wire   [15:0] select_ln78_46_fu_1725_p3;
reg   [15:0] buf_2_2_out_0_fu_306;
wire   [15:0] select_ln78_45_fu_1717_p3;
reg   [15:0] buf_2_3_out_0_fu_310;
wire   [15:0] select_ln78_44_fu_1709_p3;
reg   [15:0] buf_2_4_out_0_fu_314;
wire   [15:0] select_ln78_43_fu_1701_p3;
reg   [15:0] buf_2_5_out_0_fu_318;
wire   [15:0] select_ln78_42_fu_1693_p3;
reg   [15:0] buf_2_6_out_0_fu_322;
wire   [15:0] select_ln78_41_fu_1685_p3;
reg   [15:0] buf_2_7_out_0_fu_326;
wire   [15:0] select_ln78_40_fu_1677_p3;
reg   [15:0] buf_3_0_out_0_fu_330;
wire   [15:0] select_ln78_39_fu_1669_p3;
reg   [15:0] buf_3_1_out_0_fu_334;
wire   [15:0] select_ln78_38_fu_1661_p3;
reg   [15:0] buf_3_2_out_0_fu_338;
wire   [15:0] select_ln78_37_fu_1653_p3;
reg   [15:0] buf_3_3_out_0_fu_342;
wire   [15:0] select_ln78_36_fu_1645_p3;
reg   [15:0] buf_3_4_out_0_fu_346;
wire   [15:0] select_ln78_35_fu_1637_p3;
reg   [15:0] buf_3_5_out_0_fu_350;
wire   [15:0] select_ln78_34_fu_1629_p3;
reg   [15:0] buf_3_6_out_0_fu_354;
wire   [15:0] select_ln78_33_fu_1621_p3;
reg   [15:0] buf_3_7_out_0_fu_358;
wire   [15:0] select_ln78_32_fu_1613_p3;
reg   [15:0] buf_4_0_out_0_fu_362;
wire   [15:0] select_ln78_31_fu_1605_p3;
reg   [15:0] buf_4_1_out_0_fu_366;
wire   [15:0] select_ln78_30_fu_1597_p3;
reg   [15:0] buf_4_2_out_0_fu_370;
wire   [15:0] select_ln78_29_fu_1589_p3;
reg   [15:0] buf_4_3_out_0_fu_374;
wire   [15:0] select_ln78_28_fu_1581_p3;
reg   [15:0] buf_4_4_out_0_fu_378;
wire   [15:0] select_ln78_27_fu_1573_p3;
reg   [15:0] buf_4_5_out_0_fu_382;
wire   [15:0] select_ln78_26_fu_1565_p3;
reg   [15:0] buf_4_6_out_0_fu_386;
wire   [15:0] select_ln78_25_fu_1557_p3;
reg   [15:0] buf_4_7_out_0_fu_390;
wire   [15:0] select_ln78_24_fu_1549_p3;
reg   [15:0] buf_5_0_out_0_fu_394;
wire   [15:0] select_ln78_23_fu_1541_p3;
reg   [15:0] buf_5_1_out_0_fu_398;
wire   [15:0] select_ln78_22_fu_1533_p3;
reg   [15:0] buf_5_2_out_0_fu_402;
wire   [15:0] select_ln78_21_fu_1525_p3;
reg   [15:0] buf_5_3_out_0_fu_406;
wire   [15:0] select_ln78_20_fu_1517_p3;
reg   [15:0] buf_5_4_out_0_fu_410;
wire   [15:0] select_ln78_19_fu_1509_p3;
reg   [15:0] buf_5_5_out_0_fu_414;
wire   [15:0] select_ln78_18_fu_1501_p3;
reg   [15:0] buf_5_6_out_0_fu_418;
wire   [15:0] select_ln78_17_fu_1493_p3;
reg   [15:0] buf_5_7_out_0_fu_422;
wire   [15:0] select_ln78_16_fu_1485_p3;
reg   [15:0] buf_6_0_out_0_fu_426;
wire   [15:0] select_ln78_15_fu_1477_p3;
reg   [15:0] buf_6_1_out_0_fu_430;
wire   [15:0] select_ln78_14_fu_1469_p3;
reg   [15:0] buf_6_2_out_0_fu_434;
wire   [15:0] select_ln78_13_fu_1461_p3;
reg   [15:0] buf_6_3_out_0_fu_438;
wire   [15:0] select_ln78_12_fu_1453_p3;
reg   [15:0] buf_6_4_out_0_fu_442;
wire   [15:0] select_ln78_11_fu_1445_p3;
reg   [15:0] buf_6_5_out_0_fu_446;
wire   [15:0] select_ln78_10_fu_1437_p3;
reg   [15:0] buf_6_6_out_0_fu_450;
wire   [15:0] select_ln78_9_fu_1429_p3;
reg   [15:0] buf_6_7_out_0_fu_454;
wire   [15:0] select_ln78_8_fu_1421_p3;
reg   [15:0] buf_7_0_out_0_fu_458;
wire   [15:0] select_ln78_7_fu_1413_p3;
reg   [15:0] buf_7_1_out_0_fu_462;
wire   [15:0] select_ln78_6_fu_1405_p3;
reg   [15:0] buf_7_2_out_0_fu_466;
wire   [15:0] select_ln78_5_fu_1397_p3;
reg   [15:0] buf_7_3_out_0_fu_470;
wire   [15:0] select_ln78_4_fu_1389_p3;
reg   [15:0] buf_7_4_out_0_fu_474;
wire   [15:0] select_ln78_3_fu_1381_p3;
reg   [15:0] buf_7_5_out_0_fu_478;
wire   [15:0] select_ln78_2_fu_1373_p3;
reg   [15:0] buf_7_6_out_0_fu_482;
wire   [15:0] select_ln78_1_fu_1365_p3;
reg   [15:0] buf_7_7_out_0_fu_486;
wire   [15:0] select_ln78_fu_1357_p3;
reg    ap_block_pp0_stage0_01001;
wire   [1:0] empty_28_fu_987_p1;
wire   [0:0] icmp_ln78_5_fu_1311_p2;
wire   [0:0] icmp_ln78_3_fu_1301_p2;
wire   [0:0] or_ln78_fu_1321_p2;
wire   [0:0] icmp_ln78_4_fu_1306_p2;
wire   [0:0] icmp_ln78_1_fu_1291_p2;
wire   [0:0] icmp_ln78_fu_1286_p2;
wire   [0:0] or_ln78_2_fu_1333_p2;
wire   [0:0] icmp_ln78_2_fu_1296_p2;
wire   [0:0] or_ln78_3_fu_1339_p2;
wire   [0:0] icmp_ln78_6_fu_1316_p2;
wire   [0:0] or_ln78_4_fu_1345_p2;
wire   [0:0] or_ln78_1_fu_1327_p2;
wire   [0:0] or_ln78_5_fu_1351_p2;
wire   [15:0] trunc_ln78_8_fu_1276_p4;
wire   [15:0] trunc_ln78_7_fu_1266_p4;
wire   [15:0] trunc_ln78_6_fu_1256_p4;
wire   [15:0] trunc_ln78_5_fu_1246_p4;
wire   [15:0] trunc_ln78_4_fu_1236_p4;
wire   [15:0] trunc_ln78_3_fu_1226_p4;
wire   [15:0] trunc_ln78_2_fu_1216_p4;
wire   [15:0] trunc_ln78_1_fu_1212_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

dct_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln74_fu_975_p2 == 1'd0))) begin
            r_fu_230 <= add_ln74_fu_981_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            r_fu_230 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shiftreg10_fu_226 <= 384'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            shiftreg10_fu_226 <= {{ap_phi_mux_empty_27_phi_fu_952_p4[511:128]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln74_reg_2927 <= icmp_ln74_fu_975_p2;
        icmp_ln74_reg_2927_pp0_iter1_reg <= icmp_ln74_reg_2927;
        icmp_ln76_reg_2931_pp0_iter1_reg <= icmp_ln76_reg_2931;
        trunc_ln78_reg_2935_pp0_iter1_reg <= trunc_ln78_reg_2935;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_0_0_out_0_fu_234 <= select_ln78_63_fu_1861_p3;
        buf_0_1_out_0_fu_238 <= select_ln78_62_fu_1853_p3;
        buf_0_2_out_0_fu_242 <= select_ln78_61_fu_1845_p3;
        buf_0_3_out_0_fu_246 <= select_ln78_60_fu_1837_p3;
        buf_0_4_out_0_fu_250 <= select_ln78_59_fu_1829_p3;
        buf_0_5_out_0_fu_254 <= select_ln78_58_fu_1821_p3;
        buf_0_6_out_0_fu_258 <= select_ln78_57_fu_1813_p3;
        buf_0_7_out_0_fu_262 <= select_ln78_56_fu_1805_p3;
        buf_1_0_out_0_fu_266 <= select_ln78_55_fu_1797_p3;
        buf_1_1_out_0_fu_270 <= select_ln78_54_fu_1789_p3;
        buf_1_2_out_0_fu_274 <= select_ln78_53_fu_1781_p3;
        buf_1_3_out_0_fu_278 <= select_ln78_52_fu_1773_p3;
        buf_1_4_out_0_fu_282 <= select_ln78_51_fu_1765_p3;
        buf_1_5_out_0_fu_286 <= select_ln78_50_fu_1757_p3;
        buf_1_6_out_0_fu_290 <= select_ln78_49_fu_1749_p3;
        buf_1_7_out_0_fu_294 <= select_ln78_48_fu_1741_p3;
        buf_2_0_out_0_fu_298 <= select_ln78_47_fu_1733_p3;
        buf_2_1_out_0_fu_302 <= select_ln78_46_fu_1725_p3;
        buf_2_2_out_0_fu_306 <= select_ln78_45_fu_1717_p3;
        buf_2_3_out_0_fu_310 <= select_ln78_44_fu_1709_p3;
        buf_2_4_out_0_fu_314 <= select_ln78_43_fu_1701_p3;
        buf_2_5_out_0_fu_318 <= select_ln78_42_fu_1693_p3;
        buf_2_6_out_0_fu_322 <= select_ln78_41_fu_1685_p3;
        buf_2_7_out_0_fu_326 <= select_ln78_40_fu_1677_p3;
        buf_3_0_out_0_fu_330 <= select_ln78_39_fu_1669_p3;
        buf_3_1_out_0_fu_334 <= select_ln78_38_fu_1661_p3;
        buf_3_2_out_0_fu_338 <= select_ln78_37_fu_1653_p3;
        buf_3_3_out_0_fu_342 <= select_ln78_36_fu_1645_p3;
        buf_3_4_out_0_fu_346 <= select_ln78_35_fu_1637_p3;
        buf_3_5_out_0_fu_350 <= select_ln78_34_fu_1629_p3;
        buf_3_6_out_0_fu_354 <= select_ln78_33_fu_1621_p3;
        buf_3_7_out_0_fu_358 <= select_ln78_32_fu_1613_p3;
        buf_4_0_out_0_fu_362 <= select_ln78_31_fu_1605_p3;
        buf_4_1_out_0_fu_366 <= select_ln78_30_fu_1597_p3;
        buf_4_2_out_0_fu_370 <= select_ln78_29_fu_1589_p3;
        buf_4_3_out_0_fu_374 <= select_ln78_28_fu_1581_p3;
        buf_4_4_out_0_fu_378 <= select_ln78_27_fu_1573_p3;
        buf_4_5_out_0_fu_382 <= select_ln78_26_fu_1565_p3;
        buf_4_6_out_0_fu_386 <= select_ln78_25_fu_1557_p3;
        buf_4_7_out_0_fu_390 <= select_ln78_24_fu_1549_p3;
        buf_5_0_out_0_fu_394 <= select_ln78_23_fu_1541_p3;
        buf_5_1_out_0_fu_398 <= select_ln78_22_fu_1533_p3;
        buf_5_2_out_0_fu_402 <= select_ln78_21_fu_1525_p3;
        buf_5_3_out_0_fu_406 <= select_ln78_20_fu_1517_p3;
        buf_5_4_out_0_fu_410 <= select_ln78_19_fu_1509_p3;
        buf_5_5_out_0_fu_414 <= select_ln78_18_fu_1501_p3;
        buf_5_6_out_0_fu_418 <= select_ln78_17_fu_1493_p3;
        buf_5_7_out_0_fu_422 <= select_ln78_16_fu_1485_p3;
        buf_6_0_out_0_fu_426 <= select_ln78_15_fu_1477_p3;
        buf_6_1_out_0_fu_430 <= select_ln78_14_fu_1469_p3;
        buf_6_2_out_0_fu_434 <= select_ln78_13_fu_1461_p3;
        buf_6_3_out_0_fu_438 <= select_ln78_12_fu_1453_p3;
        buf_6_4_out_0_fu_442 <= select_ln78_11_fu_1445_p3;
        buf_6_5_out_0_fu_446 <= select_ln78_10_fu_1437_p3;
        buf_6_6_out_0_fu_450 <= select_ln78_9_fu_1429_p3;
        buf_6_7_out_0_fu_454 <= select_ln78_8_fu_1421_p3;
        buf_7_0_out_0_fu_458 <= select_ln78_7_fu_1413_p3;
        buf_7_1_out_0_fu_462 <= select_ln78_6_fu_1405_p3;
        buf_7_2_out_0_fu_466 <= select_ln78_5_fu_1397_p3;
        buf_7_3_out_0_fu_470 <= select_ln78_4_fu_1389_p3;
        buf_7_4_out_0_fu_474 <= select_ln78_3_fu_1381_p3;
        buf_7_5_out_0_fu_478 <= select_ln78_2_fu_1373_p3;
        buf_7_6_out_0_fu_482 <= select_ln78_1_fu_1365_p3;
        buf_7_7_out_0_fu_486 <= select_ln78_fu_1357_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op89_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem_addr_read_reg_2946 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln74_fu_975_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln76_reg_2931 <= icmp_ln76_fu_991_p2;
        trunc_ln78_reg_2935 <= trunc_ln78_fu_997_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln74_fu_975_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln74_reg_2927_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln76_reg_2931_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_empty_27_phi_fu_952_p4 = shiftreg10_cast_fu_1015_p1;
        end else if ((icmp_ln76_reg_2931_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_empty_27_phi_fu_952_p4 = gmem_addr_read_reg_2946;
        end else begin
            ap_phi_mux_empty_27_phi_fu_952_p4 = ap_phi_reg_pp0_iter2_empty_27_reg_949;
        end
    end else begin
        ap_phi_mux_empty_27_phi_fu_952_p4 = ap_phi_reg_pp0_iter2_empty_27_reg_949;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_r_2 = 4'd0;
    end else begin
        ap_sig_allocacmp_r_2 = r_fu_230;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_0_0_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_0_0_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_0_1_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_0_1_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_0_2_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_0_2_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_0_3_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_0_3_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_0_4_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_0_4_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_0_5_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_0_5_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_0_6_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_0_6_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_0_7_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_0_7_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_1_0_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_1_0_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_1_1_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_1_1_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_1_2_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_1_2_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_1_3_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_1_3_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_1_4_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_1_4_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_1_5_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_1_5_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_1_6_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_1_6_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_1_7_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_1_7_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_2_0_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_2_0_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_2_1_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_2_1_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_2_2_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_2_2_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_2_3_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_2_3_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_2_4_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_2_4_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_2_5_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_2_5_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_2_6_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_2_6_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_2_7_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_2_7_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_3_0_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_3_0_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_3_1_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_3_1_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_3_2_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_3_2_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_3_3_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_3_3_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_3_4_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_3_4_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_3_5_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_3_5_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_3_6_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_3_6_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_3_7_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_3_7_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_4_0_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_4_0_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_4_1_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_4_1_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_4_2_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_4_2_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_4_3_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_4_3_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_4_4_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_4_4_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_4_5_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_4_5_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_4_6_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_4_6_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_4_7_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_4_7_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_5_0_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_5_0_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_5_1_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_5_1_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_5_2_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_5_2_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_5_3_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_5_3_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_5_4_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_5_4_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_5_5_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_5_5_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_5_6_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_5_6_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_5_7_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_5_7_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_6_0_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_6_0_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_6_1_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_6_1_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_6_2_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_6_2_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_6_3_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_6_3_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_6_4_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_6_4_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_6_5_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_6_5_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_6_6_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_6_6_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_6_7_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_6_7_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_7_0_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_7_0_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_7_1_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_7_1_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_7_2_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_7_2_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_7_3_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_7_3_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_7_4_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_7_4_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_7_5_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_7_5_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_7_6_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_7_6_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln74_reg_2927 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_7_7_out_0_out_ap_vld = 1'b1;
    end else begin
        buf_7_7_out_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op89_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op89_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln74_fu_981_p2 = (ap_sig_allocacmp_r_2 + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_predicate_op89_read_state2 == 1'b1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_predicate_op89_read_state2 == 1'b1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_predicate_op89_read_state2 == 1'b1) & (m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op89_read_state2 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter2_empty_27_reg_949 = 'bx;

always @ (*) begin
    ap_predicate_op89_read_state2 = ((icmp_ln76_reg_2931 == 1'd1) & (icmp_ln74_reg_2927 == 1'd0));
end

assign buf_0_0_out_0_out = buf_0_0_out_0_fu_234;

assign buf_0_1_out_0_out = buf_0_1_out_0_fu_238;

assign buf_0_2_out_0_out = buf_0_2_out_0_fu_242;

assign buf_0_3_out_0_out = buf_0_3_out_0_fu_246;

assign buf_0_4_out_0_out = buf_0_4_out_0_fu_250;

assign buf_0_5_out_0_out = buf_0_5_out_0_fu_254;

assign buf_0_6_out_0_out = buf_0_6_out_0_fu_258;

assign buf_0_7_out_0_out = buf_0_7_out_0_fu_262;

assign buf_1_0_out_0_out = buf_1_0_out_0_fu_266;

assign buf_1_1_out_0_out = buf_1_1_out_0_fu_270;

assign buf_1_2_out_0_out = buf_1_2_out_0_fu_274;

assign buf_1_3_out_0_out = buf_1_3_out_0_fu_278;

assign buf_1_4_out_0_out = buf_1_4_out_0_fu_282;

assign buf_1_5_out_0_out = buf_1_5_out_0_fu_286;

assign buf_1_6_out_0_out = buf_1_6_out_0_fu_290;

assign buf_1_7_out_0_out = buf_1_7_out_0_fu_294;

assign buf_2_0_out_0_out = buf_2_0_out_0_fu_298;

assign buf_2_1_out_0_out = buf_2_1_out_0_fu_302;

assign buf_2_2_out_0_out = buf_2_2_out_0_fu_306;

assign buf_2_3_out_0_out = buf_2_3_out_0_fu_310;

assign buf_2_4_out_0_out = buf_2_4_out_0_fu_314;

assign buf_2_5_out_0_out = buf_2_5_out_0_fu_318;

assign buf_2_6_out_0_out = buf_2_6_out_0_fu_322;

assign buf_2_7_out_0_out = buf_2_7_out_0_fu_326;

assign buf_3_0_out_0_out = buf_3_0_out_0_fu_330;

assign buf_3_1_out_0_out = buf_3_1_out_0_fu_334;

assign buf_3_2_out_0_out = buf_3_2_out_0_fu_338;

assign buf_3_3_out_0_out = buf_3_3_out_0_fu_342;

assign buf_3_4_out_0_out = buf_3_4_out_0_fu_346;

assign buf_3_5_out_0_out = buf_3_5_out_0_fu_350;

assign buf_3_6_out_0_out = buf_3_6_out_0_fu_354;

assign buf_3_7_out_0_out = buf_3_7_out_0_fu_358;

assign buf_4_0_out_0_out = buf_4_0_out_0_fu_362;

assign buf_4_1_out_0_out = buf_4_1_out_0_fu_366;

assign buf_4_2_out_0_out = buf_4_2_out_0_fu_370;

assign buf_4_3_out_0_out = buf_4_3_out_0_fu_374;

assign buf_4_4_out_0_out = buf_4_4_out_0_fu_378;

assign buf_4_5_out_0_out = buf_4_5_out_0_fu_382;

assign buf_4_6_out_0_out = buf_4_6_out_0_fu_386;

assign buf_4_7_out_0_out = buf_4_7_out_0_fu_390;

assign buf_5_0_out_0_out = buf_5_0_out_0_fu_394;

assign buf_5_1_out_0_out = buf_5_1_out_0_fu_398;

assign buf_5_2_out_0_out = buf_5_2_out_0_fu_402;

assign buf_5_3_out_0_out = buf_5_3_out_0_fu_406;

assign buf_5_4_out_0_out = buf_5_4_out_0_fu_410;

assign buf_5_5_out_0_out = buf_5_5_out_0_fu_414;

assign buf_5_6_out_0_out = buf_5_6_out_0_fu_418;

assign buf_5_7_out_0_out = buf_5_7_out_0_fu_422;

assign buf_6_0_out_0_out = buf_6_0_out_0_fu_426;

assign buf_6_1_out_0_out = buf_6_1_out_0_fu_430;

assign buf_6_2_out_0_out = buf_6_2_out_0_fu_434;

assign buf_6_3_out_0_out = buf_6_3_out_0_fu_438;

assign buf_6_4_out_0_out = buf_6_4_out_0_fu_442;

assign buf_6_5_out_0_out = buf_6_5_out_0_fu_446;

assign buf_6_6_out_0_out = buf_6_6_out_0_fu_450;

assign buf_6_7_out_0_out = buf_6_7_out_0_fu_454;

assign buf_7_0_out_0_out = buf_7_0_out_0_fu_458;

assign buf_7_1_out_0_out = buf_7_1_out_0_fu_462;

assign buf_7_2_out_0_out = buf_7_2_out_0_fu_466;

assign buf_7_3_out_0_out = buf_7_3_out_0_fu_470;

assign buf_7_4_out_0_out = buf_7_4_out_0_fu_474;

assign buf_7_5_out_0_out = buf_7_5_out_0_fu_478;

assign buf_7_6_out_0_out = buf_7_6_out_0_fu_482;

assign buf_7_7_out_0_out = buf_7_7_out_0_fu_486;

assign empty_28_fu_987_p1 = ap_sig_allocacmp_r_2[1:0];

assign icmp_ln74_fu_975_p2 = ((ap_sig_allocacmp_r_2 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_991_p2 = ((empty_28_fu_987_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln78_1_fu_1291_p2 = ((trunc_ln78_reg_2935_pp0_iter1_reg == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln78_2_fu_1296_p2 = ((trunc_ln78_reg_2935_pp0_iter1_reg == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln78_3_fu_1301_p2 = ((trunc_ln78_reg_2935_pp0_iter1_reg == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln78_4_fu_1306_p2 = ((trunc_ln78_reg_2935_pp0_iter1_reg == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln78_5_fu_1311_p2 = ((trunc_ln78_reg_2935_pp0_iter1_reg == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln78_6_fu_1316_p2 = ((trunc_ln78_reg_2935_pp0_iter1_reg == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_1286_p2 = ((trunc_ln78_reg_2935_pp0_iter1_reg == 3'd0) ? 1'b1 : 1'b0);

assign m_axi_gmem_ARADDR = 64'd0;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd0;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_ARVALID = 1'b0;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_WDATA = 512'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 64'd0;

assign m_axi_gmem_WUSER = 1'd0;

assign m_axi_gmem_WVALID = 1'b0;

assign or_ln78_1_fu_1327_p2 = (or_ln78_fu_1321_p2 | icmp_ln78_4_fu_1306_p2);

assign or_ln78_2_fu_1333_p2 = (icmp_ln78_fu_1286_p2 | icmp_ln78_1_fu_1291_p2);

assign or_ln78_3_fu_1339_p2 = (or_ln78_2_fu_1333_p2 | icmp_ln78_2_fu_1296_p2);

assign or_ln78_4_fu_1345_p2 = (or_ln78_3_fu_1339_p2 | icmp_ln78_6_fu_1316_p2);

assign or_ln78_5_fu_1351_p2 = (or_ln78_4_fu_1345_p2 | or_ln78_1_fu_1327_p2);

assign or_ln78_fu_1321_p2 = (icmp_ln78_5_fu_1311_p2 | icmp_ln78_3_fu_1301_p2);

assign select_ln78_10_fu_1437_p3 = ((icmp_ln78_6_fu_1316_p2[0:0] == 1'b1) ? trunc_ln78_6_fu_1256_p4 : buf_6_5_out_0_fu_446);

assign select_ln78_11_fu_1445_p3 = ((icmp_ln78_6_fu_1316_p2[0:0] == 1'b1) ? trunc_ln78_5_fu_1246_p4 : buf_6_4_out_0_fu_442);

assign select_ln78_12_fu_1453_p3 = ((icmp_ln78_6_fu_1316_p2[0:0] == 1'b1) ? trunc_ln78_4_fu_1236_p4 : buf_6_3_out_0_fu_438);

assign select_ln78_13_fu_1461_p3 = ((icmp_ln78_6_fu_1316_p2[0:0] == 1'b1) ? trunc_ln78_3_fu_1226_p4 : buf_6_2_out_0_fu_434);

assign select_ln78_14_fu_1469_p3 = ((icmp_ln78_6_fu_1316_p2[0:0] == 1'b1) ? trunc_ln78_2_fu_1216_p4 : buf_6_1_out_0_fu_430);

assign select_ln78_15_fu_1477_p3 = ((icmp_ln78_6_fu_1316_p2[0:0] == 1'b1) ? trunc_ln78_1_fu_1212_p1 : buf_6_0_out_0_fu_426);

assign select_ln78_16_fu_1485_p3 = ((icmp_ln78_5_fu_1311_p2[0:0] == 1'b1) ? trunc_ln78_8_fu_1276_p4 : buf_5_7_out_0_fu_422);

assign select_ln78_17_fu_1493_p3 = ((icmp_ln78_5_fu_1311_p2[0:0] == 1'b1) ? trunc_ln78_7_fu_1266_p4 : buf_5_6_out_0_fu_418);

assign select_ln78_18_fu_1501_p3 = ((icmp_ln78_5_fu_1311_p2[0:0] == 1'b1) ? trunc_ln78_6_fu_1256_p4 : buf_5_5_out_0_fu_414);

assign select_ln78_19_fu_1509_p3 = ((icmp_ln78_5_fu_1311_p2[0:0] == 1'b1) ? trunc_ln78_5_fu_1246_p4 : buf_5_4_out_0_fu_410);

assign select_ln78_1_fu_1365_p3 = ((or_ln78_5_fu_1351_p2[0:0] == 1'b1) ? buf_7_6_out_0_fu_482 : trunc_ln78_7_fu_1266_p4);

assign select_ln78_20_fu_1517_p3 = ((icmp_ln78_5_fu_1311_p2[0:0] == 1'b1) ? trunc_ln78_4_fu_1236_p4 : buf_5_3_out_0_fu_406);

assign select_ln78_21_fu_1525_p3 = ((icmp_ln78_5_fu_1311_p2[0:0] == 1'b1) ? trunc_ln78_3_fu_1226_p4 : buf_5_2_out_0_fu_402);

assign select_ln78_22_fu_1533_p3 = ((icmp_ln78_5_fu_1311_p2[0:0] == 1'b1) ? trunc_ln78_2_fu_1216_p4 : buf_5_1_out_0_fu_398);

assign select_ln78_23_fu_1541_p3 = ((icmp_ln78_5_fu_1311_p2[0:0] == 1'b1) ? trunc_ln78_1_fu_1212_p1 : buf_5_0_out_0_fu_394);

assign select_ln78_24_fu_1549_p3 = ((icmp_ln78_4_fu_1306_p2[0:0] == 1'b1) ? trunc_ln78_8_fu_1276_p4 : buf_4_7_out_0_fu_390);

assign select_ln78_25_fu_1557_p3 = ((icmp_ln78_4_fu_1306_p2[0:0] == 1'b1) ? trunc_ln78_7_fu_1266_p4 : buf_4_6_out_0_fu_386);

assign select_ln78_26_fu_1565_p3 = ((icmp_ln78_4_fu_1306_p2[0:0] == 1'b1) ? trunc_ln78_6_fu_1256_p4 : buf_4_5_out_0_fu_382);

assign select_ln78_27_fu_1573_p3 = ((icmp_ln78_4_fu_1306_p2[0:0] == 1'b1) ? trunc_ln78_5_fu_1246_p4 : buf_4_4_out_0_fu_378);

assign select_ln78_28_fu_1581_p3 = ((icmp_ln78_4_fu_1306_p2[0:0] == 1'b1) ? trunc_ln78_4_fu_1236_p4 : buf_4_3_out_0_fu_374);

assign select_ln78_29_fu_1589_p3 = ((icmp_ln78_4_fu_1306_p2[0:0] == 1'b1) ? trunc_ln78_3_fu_1226_p4 : buf_4_2_out_0_fu_370);

assign select_ln78_2_fu_1373_p3 = ((or_ln78_5_fu_1351_p2[0:0] == 1'b1) ? buf_7_5_out_0_fu_478 : trunc_ln78_6_fu_1256_p4);

assign select_ln78_30_fu_1597_p3 = ((icmp_ln78_4_fu_1306_p2[0:0] == 1'b1) ? trunc_ln78_2_fu_1216_p4 : buf_4_1_out_0_fu_366);

assign select_ln78_31_fu_1605_p3 = ((icmp_ln78_4_fu_1306_p2[0:0] == 1'b1) ? trunc_ln78_1_fu_1212_p1 : buf_4_0_out_0_fu_362);

assign select_ln78_32_fu_1613_p3 = ((icmp_ln78_3_fu_1301_p2[0:0] == 1'b1) ? trunc_ln78_8_fu_1276_p4 : buf_3_7_out_0_fu_358);

assign select_ln78_33_fu_1621_p3 = ((icmp_ln78_3_fu_1301_p2[0:0] == 1'b1) ? trunc_ln78_7_fu_1266_p4 : buf_3_6_out_0_fu_354);

assign select_ln78_34_fu_1629_p3 = ((icmp_ln78_3_fu_1301_p2[0:0] == 1'b1) ? trunc_ln78_6_fu_1256_p4 : buf_3_5_out_0_fu_350);

assign select_ln78_35_fu_1637_p3 = ((icmp_ln78_3_fu_1301_p2[0:0] == 1'b1) ? trunc_ln78_5_fu_1246_p4 : buf_3_4_out_0_fu_346);

assign select_ln78_36_fu_1645_p3 = ((icmp_ln78_3_fu_1301_p2[0:0] == 1'b1) ? trunc_ln78_4_fu_1236_p4 : buf_3_3_out_0_fu_342);

assign select_ln78_37_fu_1653_p3 = ((icmp_ln78_3_fu_1301_p2[0:0] == 1'b1) ? trunc_ln78_3_fu_1226_p4 : buf_3_2_out_0_fu_338);

assign select_ln78_38_fu_1661_p3 = ((icmp_ln78_3_fu_1301_p2[0:0] == 1'b1) ? trunc_ln78_2_fu_1216_p4 : buf_3_1_out_0_fu_334);

assign select_ln78_39_fu_1669_p3 = ((icmp_ln78_3_fu_1301_p2[0:0] == 1'b1) ? trunc_ln78_1_fu_1212_p1 : buf_3_0_out_0_fu_330);

assign select_ln78_3_fu_1381_p3 = ((or_ln78_5_fu_1351_p2[0:0] == 1'b1) ? buf_7_4_out_0_fu_474 : trunc_ln78_5_fu_1246_p4);

assign select_ln78_40_fu_1677_p3 = ((icmp_ln78_2_fu_1296_p2[0:0] == 1'b1) ? trunc_ln78_8_fu_1276_p4 : buf_2_7_out_0_fu_326);

assign select_ln78_41_fu_1685_p3 = ((icmp_ln78_2_fu_1296_p2[0:0] == 1'b1) ? trunc_ln78_7_fu_1266_p4 : buf_2_6_out_0_fu_322);

assign select_ln78_42_fu_1693_p3 = ((icmp_ln78_2_fu_1296_p2[0:0] == 1'b1) ? trunc_ln78_6_fu_1256_p4 : buf_2_5_out_0_fu_318);

assign select_ln78_43_fu_1701_p3 = ((icmp_ln78_2_fu_1296_p2[0:0] == 1'b1) ? trunc_ln78_5_fu_1246_p4 : buf_2_4_out_0_fu_314);

assign select_ln78_44_fu_1709_p3 = ((icmp_ln78_2_fu_1296_p2[0:0] == 1'b1) ? trunc_ln78_4_fu_1236_p4 : buf_2_3_out_0_fu_310);

assign select_ln78_45_fu_1717_p3 = ((icmp_ln78_2_fu_1296_p2[0:0] == 1'b1) ? trunc_ln78_3_fu_1226_p4 : buf_2_2_out_0_fu_306);

assign select_ln78_46_fu_1725_p3 = ((icmp_ln78_2_fu_1296_p2[0:0] == 1'b1) ? trunc_ln78_2_fu_1216_p4 : buf_2_1_out_0_fu_302);

assign select_ln78_47_fu_1733_p3 = ((icmp_ln78_2_fu_1296_p2[0:0] == 1'b1) ? trunc_ln78_1_fu_1212_p1 : buf_2_0_out_0_fu_298);

assign select_ln78_48_fu_1741_p3 = ((icmp_ln78_1_fu_1291_p2[0:0] == 1'b1) ? trunc_ln78_8_fu_1276_p4 : buf_1_7_out_0_fu_294);

assign select_ln78_49_fu_1749_p3 = ((icmp_ln78_1_fu_1291_p2[0:0] == 1'b1) ? trunc_ln78_7_fu_1266_p4 : buf_1_6_out_0_fu_290);

assign select_ln78_4_fu_1389_p3 = ((or_ln78_5_fu_1351_p2[0:0] == 1'b1) ? buf_7_3_out_0_fu_470 : trunc_ln78_4_fu_1236_p4);

assign select_ln78_50_fu_1757_p3 = ((icmp_ln78_1_fu_1291_p2[0:0] == 1'b1) ? trunc_ln78_6_fu_1256_p4 : buf_1_5_out_0_fu_286);

assign select_ln78_51_fu_1765_p3 = ((icmp_ln78_1_fu_1291_p2[0:0] == 1'b1) ? trunc_ln78_5_fu_1246_p4 : buf_1_4_out_0_fu_282);

assign select_ln78_52_fu_1773_p3 = ((icmp_ln78_1_fu_1291_p2[0:0] == 1'b1) ? trunc_ln78_4_fu_1236_p4 : buf_1_3_out_0_fu_278);

assign select_ln78_53_fu_1781_p3 = ((icmp_ln78_1_fu_1291_p2[0:0] == 1'b1) ? trunc_ln78_3_fu_1226_p4 : buf_1_2_out_0_fu_274);

assign select_ln78_54_fu_1789_p3 = ((icmp_ln78_1_fu_1291_p2[0:0] == 1'b1) ? trunc_ln78_2_fu_1216_p4 : buf_1_1_out_0_fu_270);

assign select_ln78_55_fu_1797_p3 = ((icmp_ln78_1_fu_1291_p2[0:0] == 1'b1) ? trunc_ln78_1_fu_1212_p1 : buf_1_0_out_0_fu_266);

assign select_ln78_56_fu_1805_p3 = ((icmp_ln78_fu_1286_p2[0:0] == 1'b1) ? trunc_ln78_8_fu_1276_p4 : buf_0_7_out_0_fu_262);

assign select_ln78_57_fu_1813_p3 = ((icmp_ln78_fu_1286_p2[0:0] == 1'b1) ? trunc_ln78_7_fu_1266_p4 : buf_0_6_out_0_fu_258);

assign select_ln78_58_fu_1821_p3 = ((icmp_ln78_fu_1286_p2[0:0] == 1'b1) ? trunc_ln78_6_fu_1256_p4 : buf_0_5_out_0_fu_254);

assign select_ln78_59_fu_1829_p3 = ((icmp_ln78_fu_1286_p2[0:0] == 1'b1) ? trunc_ln78_5_fu_1246_p4 : buf_0_4_out_0_fu_250);

assign select_ln78_5_fu_1397_p3 = ((or_ln78_5_fu_1351_p2[0:0] == 1'b1) ? buf_7_2_out_0_fu_466 : trunc_ln78_3_fu_1226_p4);

assign select_ln78_60_fu_1837_p3 = ((icmp_ln78_fu_1286_p2[0:0] == 1'b1) ? trunc_ln78_4_fu_1236_p4 : buf_0_3_out_0_fu_246);

assign select_ln78_61_fu_1845_p3 = ((icmp_ln78_fu_1286_p2[0:0] == 1'b1) ? trunc_ln78_3_fu_1226_p4 : buf_0_2_out_0_fu_242);

assign select_ln78_62_fu_1853_p3 = ((icmp_ln78_fu_1286_p2[0:0] == 1'b1) ? trunc_ln78_2_fu_1216_p4 : buf_0_1_out_0_fu_238);

assign select_ln78_63_fu_1861_p3 = ((icmp_ln78_fu_1286_p2[0:0] == 1'b1) ? trunc_ln78_1_fu_1212_p1 : buf_0_0_out_0_fu_234);

assign select_ln78_6_fu_1405_p3 = ((or_ln78_5_fu_1351_p2[0:0] == 1'b1) ? buf_7_1_out_0_fu_462 : trunc_ln78_2_fu_1216_p4);

assign select_ln78_7_fu_1413_p3 = ((or_ln78_5_fu_1351_p2[0:0] == 1'b1) ? buf_7_0_out_0_fu_458 : trunc_ln78_1_fu_1212_p1);

assign select_ln78_8_fu_1421_p3 = ((icmp_ln78_6_fu_1316_p2[0:0] == 1'b1) ? trunc_ln78_8_fu_1276_p4 : buf_6_7_out_0_fu_454);

assign select_ln78_9_fu_1429_p3 = ((icmp_ln78_6_fu_1316_p2[0:0] == 1'b1) ? trunc_ln78_7_fu_1266_p4 : buf_6_6_out_0_fu_450);

assign select_ln78_fu_1357_p3 = ((or_ln78_5_fu_1351_p2[0:0] == 1'b1) ? buf_7_7_out_0_fu_486 : trunc_ln78_8_fu_1276_p4);

assign shiftreg10_cast_fu_1015_p1 = shiftreg10_fu_226;

assign trunc_ln78_1_fu_1212_p1 = ap_phi_mux_empty_27_phi_fu_952_p4[15:0];

assign trunc_ln78_2_fu_1216_p4 = {{ap_phi_mux_empty_27_phi_fu_952_p4[31:16]}};

assign trunc_ln78_3_fu_1226_p4 = {{ap_phi_mux_empty_27_phi_fu_952_p4[47:32]}};

assign trunc_ln78_4_fu_1236_p4 = {{ap_phi_mux_empty_27_phi_fu_952_p4[63:48]}};

assign trunc_ln78_5_fu_1246_p4 = {{ap_phi_mux_empty_27_phi_fu_952_p4[79:64]}};

assign trunc_ln78_6_fu_1256_p4 = {{ap_phi_mux_empty_27_phi_fu_952_p4[95:80]}};

assign trunc_ln78_7_fu_1266_p4 = {{ap_phi_mux_empty_27_phi_fu_952_p4[111:96]}};

assign trunc_ln78_8_fu_1276_p4 = {{ap_phi_mux_empty_27_phi_fu_952_p4[127:112]}};

assign trunc_ln78_fu_997_p1 = ap_sig_allocacmp_r_2[2:0];

endmodule //dct_read_data_Pipeline_RD_Loop_Row
