<?xml version="1.0" encoding="UTF-8"?>
<vivadoHLSLog:LogRoot xmlns:vivadoHLSLog="www.xilinx.com/vivadoHLSLog">
  <errorLogs>
    <logs>
      <synLog/>
      <simLog/>
      <mgLog/>
      <packageLog/>
      <csimLog/>
    </logs>
  </errorLogs>
  <warningLogs>
    <logs>
      <synLog>
        <logs message="WARNING: [HLS 200-960] Cannot flatten loop 'DCT_Outer_Loop' (dct.cpp:9:17) in function 'dct' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.&#xD;&#xA;Resolution: For help on HLS 200-960 see www.xilinx.com/cgi-bin/docs/rdoc?v=2022.1;t=hls+guidance;d=200-960.html" projectName="dct_prj" solutionName="solution2" date="2023-03-08T20:37:38.407+0800" type="Warning"/>
        <logs message="WARNING: [HLS 200-960] Cannot flatten loop 'DCT_Outer_Loop' (dct.cpp:9:17) in function 'dct' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.&#xD;&#xA;Resolution: For help on HLS 200-960 see www.xilinx.com/cgi-bin/docs/rdoc?v=2022.1;t=hls+guidance;d=200-960.html" projectName="dct_prj" solutionName="solution2" date="2023-03-08T20:37:38.397+0800" type="Warning"/>
        <logs message="WARNING: [HLS 200-786] Detected dataflow-on-top in function  'dct' (dct.cpp:14:1)  with default interface mode 'ap_ctrl_hs'. Overlapped execution of successive kernel calls will not happen unless interface mode 'ap_ctrl_chain' is used (or 'ap_ctrl_none' for a purely data-driven design).&#xD;&#xA;Resolution: For help on HLS 200-786 see www.xilinx.com/cgi-bin/docs/rdoc?v=2022.1;t=hls+guidance;d=200-786.html" projectName="dct_prj" solutionName="solution6" date="2023-03-07T18:09:13.584+0800" type="Warning"/>
        <logs message="WARNING: [HLS 214-273] In function 'dct_2d(short (*) [8], short (*) [8])', Pragma conflict happens on 'INLINE' and DATAFLOW pragmas: Inline into dataflow region may break the canonical form (dct.cpp:39:0)" projectName="dct_prj" solutionName="solution6" date="2023-03-07T18:09:13.317+0800" type="Warning"/>
        <logs message="WARNING: [HLS 200-471] Dataflow form checks found 1 issue(s) in file dct.cpp&#xD;&#xA;Resolution: For help on HLS 200-471 see www.xilinx.com/cgi-bin/docs/rdoc?v=2022.1;t=hls+guidance;d=200-471.html" projectName="dct_prj" solutionName="solution6" date="2023-03-07T18:09:08.945+0800" type="Warning"/>
        <logs message="WARNING: [HLS 214-114] Since the only kind of statements allowed in a canonical dataflow region are variable declarations and function calls, the compiler may not be able to correctly handle the region (C:/Users/Richard/Desktop/Course/AAHLS/labs/labA/ug871-design-files-ch6/dct_prj/solution6/directives.tcl:14:9)&#xD;&#xA;Resolution: For help on HLS 214-114 see www.xilinx.com/cgi-bin/docs/rdoc?v=2022.1;t=hls+guidance;d=214-114.html" projectName="dct_prj" solutionName="solution6" date="2023-03-07T18:09:08.496+0800" type="Warning"/>
        <logs message="WARNING: [HLS 200-786] Detected dataflow-on-top in function  'dct' (dct.cpp:14:1)  with default interface mode 'ap_ctrl_hs'. Overlapped execution of successive kernel calls will not happen unless interface mode 'ap_ctrl_chain' is used (or 'ap_ctrl_none' for a purely data-driven design).&#xD;&#xA;Resolution: For help on HLS 200-786 see www.xilinx.com/cgi-bin/docs/rdoc?v=2022.1;t=hls+guidance;d=200-786.html" projectName="dct_prj" solutionName="solution5" date="2023-03-06T13:53:02.949+0800" type="Warning"/>
        <logs message="WARNING: [HLS 200-471] Dataflow form checks found 1 issue(s) in file dct.cpp&#xD;&#xA;Resolution: For help on HLS 200-471 see www.xilinx.com/cgi-bin/docs/rdoc?v=2022.1;t=hls+guidance;d=200-471.html" projectName="dct_prj" solutionName="solution5" date="2023-03-06T13:52:58.539+0800" type="Warning"/>
        <logs message="WARNING: [HLS 214-114] Since the only kind of statements allowed in a canonical dataflow region are variable declarations and function calls, the compiler may not be able to correctly handle the region (C:/Users/Richard/Desktop/Course/AAHLS/labs/labA/ug871-design-files-ch6/dct_prj/solution5/directives.tcl:14:9)&#xD;&#xA;Resolution: For help on HLS 214-114 see www.xilinx.com/cgi-bin/docs/rdoc?v=2022.1;t=hls+guidance;d=214-114.html" projectName="dct_prj" solutionName="solution5" date="2023-03-06T13:52:58.121+0800" type="Warning"/>
      </synLog>
      <simLog>
        <logs message="WARNING: [Simtcl 6-197] One or more HDL objects could not be logged because of object type or size limitations.  To see details please rerun the command with -verbose (-v).&#xD;&#xA;## set designtopgroup [add_wave_group &quot;Design Top Signals&quot;]&#xD;&#xA;## set coutputgroup [add_wave_group &quot;C Outputs&quot; -into $designtopgroup]&#xD;&#xA;## set return_group [add_wave_group return(memory) -into $coutputgroup]&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/output_r_we1 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/output_r_q1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/output_r_d1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/output_r_ce1 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/output_r_address1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/output_r_we0 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/output_r_q0 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/output_r_d0 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/output_r_ce0 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/output_r_address0 -into $return_group -radix hex&#xD;&#xA;## set cinputgroup [add_wave_group &quot;C Inputs&quot; -into $designtopgroup]&#xD;&#xA;## set return_group [add_wave_group return(memory) -into $cinputgroup]&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/input_r_we1 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/input_r_q1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/input_r_d1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/input_r_ce1 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/input_r_address1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/input_r_we0 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/input_r_q0 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/input_r_d0 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/input_r_ce0 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/input_r_address0 -into $return_group -radix hex&#xD;&#xA;## set blocksiggroup [add_wave_group &quot;Block-level IO Handshake&quot; -into $designtopgroup]&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/ap_start -into $blocksiggroup&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/ap_done -into $blocksiggroup&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/ap_ready -into $blocksiggroup&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/ap_idle -into $blocksiggroup&#xD;&#xA;## set resetgroup [add_wave_group &quot;Reset&quot; -into $designtopgroup]&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/ap_rst -into $resetgroup&#xD;&#xA;## set clockgroup [add_wave_group &quot;Clock&quot; -into $designtopgroup]&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/ap_clk -into $clockgroup&#xD;&#xA;## set testbenchgroup [add_wave_group &quot;Test Bench Signals&quot;]&#xD;&#xA;## set tbinternalsiggroup [add_wave_group &quot;Internal Signals&quot; -into $testbenchgroup]&#xD;&#xA;## set tb_simstatus_group [add_wave_group &quot;Simulation Status&quot; -into $tbinternalsiggroup]&#xD;&#xA;## set tb_portdepth_group [add_wave_group &quot;Port Depth&quot; -into $tbinternalsiggroup]&#xD;&#xA;## add_wave /apatb_dct_top/AUTOTB_TRANSACTION_NUM -into $tb_simstatus_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/ready_cnt -into $tb_simstatus_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/done_cnt -into $tb_simstatus_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/LENGTH_input_r -into $tb_portdepth_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/LENGTH_output_r -into $tb_portdepth_group -radix hex&#xD;&#xA;## set tbcoutputgroup [add_wave_group &quot;C Outputs&quot; -into $testbenchgroup]&#xD;&#xA;## set tb_return_group [add_wave_group return(memory) -into $tbcoutputgroup]&#xD;&#xA;## add_wave /apatb_dct_top/output_r_we1 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/output_r_q1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/output_r_d1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/output_r_ce1 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/output_r_address1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/output_r_we0 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/output_r_q0 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/output_r_d0 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/output_r_ce0 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/output_r_address0 -into $tb_return_group -radix hex&#xD;&#xA;## set tbcinputgroup [add_wave_group &quot;C Inputs&quot; -into $testbenchgroup]&#xD;&#xA;## set tb_return_group [add_wave_group return(memory) -into $tbcinputgroup]&#xD;&#xA;## add_wave /apatb_dct_top/input_r_we1 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/input_r_q1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/input_r_d1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/input_r_ce1 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/input_r_address1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/input_r_we0 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/input_r_q0 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/input_r_d0 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/input_r_ce0 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/input_r_address0 -into $tb_return_group -radix hex&#xD;&#xA;## save_wave_config dct.wcfg&#xD;&#xA;## run all&#xD;&#xA;////////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;// Inter-Transaction Progress: Completed Transaction / Total Transaction&#xD;&#xA;// Intra-Transaction Progress: Measured Latency / Latency Estimation * 100%&#xD;&#xA;//&#xD;&#xA;// RTL Simulation : &quot;Inter-Transaction Progress&quot; [&quot;Intra-Transaction Progress&quot;] @ &quot;Simulation Time&quot;&#xD;&#xA;////////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;// RTL Simulation : 0 / 10 [0.00%] @ &quot;125000&quot;&#xD;&#xA;// RTL Simulation : 1 / 10 [81.49%] @ &quot;4185000&quot;&#xD;&#xA;// RTL Simulation : 2 / 10 [81.73%] @ &quot;4845000&quot;&#xD;&#xA;// RTL Simulation : 3 / 10 [81.73%] @ &quot;5515000&quot;&#xD;&#xA;// RTL Simulation : 4 / 10 [81.73%] @ &quot;6175000&quot;&#xD;&#xA;// RTL Simulation : 5 / 10 [81.97%] @ &quot;6845000&quot;&#xD;&#xA;// RTL Simulation : 6 / 10 [81.97%] @ &quot;7505000&quot;&#xD;&#xA;// RTL Simulation : 7 / 10 [81.97%] @ &quot;8175000&quot;&#xD;&#xA;// RTL Simulation : 8 / 10 [81.97%] @ &quot;8835000&quot;&#xD;&#xA;// RTL Simulation : 9 / 10 [81.97%] @ &quot;9505000&quot;&#xD;&#xA;// RTL Simulation : 10 / 10 [100.00%] @ &quot;10165000&quot;&#xD;&#xA;////////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;$finish called at time : 10225 ns : File &quot;C:/Users/Richard/Desktop/Course/AAHLS/labs/labA/ug871-design-files-ch6/dct_prj/solution6/sim/verilog/dct.autotb.v&quot; Line 292&#xD;&#xA;## quit" projectName="dct_prj" solutionName="solution6" date="2023-03-08T19:39:20.301+0800" type="Warning"/>
        <logs message="WARNING: [Simtcl 6-197] One or more HDL objects could not be logged because of object type or size limitations.  To see details please rerun the command with -verbose (-v).&#xD;&#xA;## set designtopgroup [add_wave_group &quot;Design Top Signals&quot;]&#xD;&#xA;## set coutputgroup [add_wave_group &quot;C Outputs&quot; -into $designtopgroup]&#xD;&#xA;## set return_group [add_wave_group return(memory) -into $coutputgroup]&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/output_r_we1 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/output_r_q1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/output_r_d1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/output_r_ce1 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/output_r_address1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/output_r_we0 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/output_r_q0 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/output_r_d0 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/output_r_ce0 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/output_r_address0 -into $return_group -radix hex&#xD;&#xA;## set cinputgroup [add_wave_group &quot;C Inputs&quot; -into $designtopgroup]&#xD;&#xA;## set return_group [add_wave_group return(memory) -into $cinputgroup]&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/input_r_we1 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/input_r_q1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/input_r_d1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/input_r_ce1 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/input_r_address1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/input_r_we0 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/input_r_q0 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/input_r_d0 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/input_r_ce0 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/input_r_address0 -into $return_group -radix hex&#xD;&#xA;## set blocksiggroup [add_wave_group &quot;Block-level IO Handshake&quot; -into $designtopgroup]&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/ap_start -into $blocksiggroup&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/ap_done -into $blocksiggroup&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/ap_ready -into $blocksiggroup&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/ap_idle -into $blocksiggroup&#xD;&#xA;## set resetgroup [add_wave_group &quot;Reset&quot; -into $designtopgroup]&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/ap_rst -into $resetgroup&#xD;&#xA;## set clockgroup [add_wave_group &quot;Clock&quot; -into $designtopgroup]&#xD;&#xA;## add_wave /apatb_dct_top/AESL_inst_dct/ap_clk -into $clockgroup&#xD;&#xA;## set testbenchgroup [add_wave_group &quot;Test Bench Signals&quot;]&#xD;&#xA;## set tbinternalsiggroup [add_wave_group &quot;Internal Signals&quot; -into $testbenchgroup]&#xD;&#xA;## set tb_simstatus_group [add_wave_group &quot;Simulation Status&quot; -into $tbinternalsiggroup]&#xD;&#xA;## set tb_portdepth_group [add_wave_group &quot;Port Depth&quot; -into $tbinternalsiggroup]&#xD;&#xA;## add_wave /apatb_dct_top/AUTOTB_TRANSACTION_NUM -into $tb_simstatus_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/ready_cnt -into $tb_simstatus_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/done_cnt -into $tb_simstatus_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/LENGTH_input_r -into $tb_portdepth_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/LENGTH_output_r -into $tb_portdepth_group -radix hex&#xD;&#xA;## set tbcoutputgroup [add_wave_group &quot;C Outputs&quot; -into $testbenchgroup]&#xD;&#xA;## set tb_return_group [add_wave_group return(memory) -into $tbcoutputgroup]&#xD;&#xA;## add_wave /apatb_dct_top/output_r_we1 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/output_r_q1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/output_r_d1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/output_r_ce1 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/output_r_address1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/output_r_we0 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/output_r_q0 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/output_r_d0 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/output_r_ce0 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/output_r_address0 -into $tb_return_group -radix hex&#xD;&#xA;## set tbcinputgroup [add_wave_group &quot;C Inputs&quot; -into $testbenchgroup]&#xD;&#xA;## set tb_return_group [add_wave_group return(memory) -into $tbcinputgroup]&#xD;&#xA;## add_wave /apatb_dct_top/input_r_we1 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/input_r_q1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/input_r_d1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/input_r_ce1 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/input_r_address1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/input_r_we0 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/input_r_q0 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/input_r_d0 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/input_r_ce0 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_dct_top/input_r_address0 -into $tb_return_group -radix hex&#xD;&#xA;## save_wave_config dct.wcfg&#xD;&#xA;## run all&#xD;&#xA;////////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;// Inter-Transaction Progress: Completed Transaction / Total Transaction&#xD;&#xA;// Intra-Transaction Progress: Measured Latency / Latency Estimation * 100%&#xD;&#xA;//&#xD;&#xA;// RTL Simulation : &quot;Inter-Transaction Progress&quot; [&quot;Intra-Transaction Progress&quot;] @ &quot;Simulation Time&quot;&#xD;&#xA;////////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;// RTL Simulation : 0 / 10 [0.00%] @ &quot;125000&quot;&#xD;&#xA;// RTL Simulation : 1 / 10 [81.49%] @ &quot;4185000&quot;&#xD;&#xA;// RTL Simulation : 2 / 10 [81.73%] @ &quot;4845000&quot;&#xD;&#xA;// RTL Simulation : 3 / 10 [81.73%] @ &quot;5515000&quot;&#xD;&#xA;// RTL Simulation : 4 / 10 [81.73%] @ &quot;6175000&quot;&#xD;&#xA;// RTL Simulation : 5 / 10 [81.97%] @ &quot;6845000&quot;&#xD;&#xA;// RTL Simulation : 6 / 10 [81.97%] @ &quot;7505000&quot;&#xD;&#xA;// RTL Simulation : 7 / 10 [81.97%] @ &quot;8175000&quot;&#xD;&#xA;// RTL Simulation : 8 / 10 [81.97%] @ &quot;8835000&quot;&#xD;&#xA;// RTL Simulation : 9 / 10 [81.97%] @ &quot;9505000&quot;&#xD;&#xA;// RTL Simulation : 10 / 10 [100.00%] @ &quot;10165000&quot;&#xD;&#xA;////////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;$finish called at time : 10225 ns : File &quot;C:/Users/Richard/Desktop/Course/AAHLS/labs/labA/ug871-design-files-ch6/dct_prj/solution6/sim/verilog/dct.autotb.v&quot; Line 292&#xD;&#xA;## quit" projectName="dct_prj" solutionName="solution6" date="2023-03-07T18:09:54.308+0800" type="Warning"/>
      </simLog>
      <mgLog/>
      <packageLog/>
      <csimLog/>
    </logs>
  </warningLogs>
</vivadoHLSLog:LogRoot>
